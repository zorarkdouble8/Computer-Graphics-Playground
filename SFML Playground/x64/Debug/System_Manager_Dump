
Dump of file System_Manager.obj

File Type: COFF OBJECT

??$?0$$V@?$_Compressed_pair@V?$allocator@PEAV?$Observer@$$V@@@std@@V?$_Vector_val@U?$_Simple_types@PEAV?$Observer@$$V@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z (public: __cdecl std::_Compressed_pair<class std::allocator<class Observer<> *>,class std::_Vector_val<struct std::_Simple_types<class Observer<> *> >,1>::_Compressed_pair<class std::allocator<class Observer<> *>,class std::_Vector_val<struct std::_Simple_types<class Observer<> *> >,1><>(struct std::_Zero_then_variadic_args_t)):
  0000000000000000: 88 54 24 10        mov         byte ptr [rsp+10h],dl
  0000000000000004: 48 89 4C 24 08     mov         qword ptr [rsp+8],rcx
  0000000000000009: 55                 push        rbp
  000000000000000A: 57                 push        rdi
  000000000000000B: 48 81 EC E8 00 00  sub         rsp,0E8h
                    00
  0000000000000012: 48 8D 6C 24 20     lea         rbp,[rsp+20h]
  0000000000000017: 48 8D 0D 00 00 00  lea         rcx,[__7628ACE5_xmemory]
                    00
  000000000000001E: E8 00 00 00 00     call        __CheckForDebuggerJustMyCode
  0000000000000023: 90                 nop
  0000000000000024: 48 8B 8D E0 00 00  mov         rcx,qword ptr [rbp+0E0h]
                    00
  000000000000002B: E8 00 00 00 00     call        ??0?$allocator@PEAV?$Observer@$$V@@@std@@QEAA@XZ
  0000000000000030: 90                 nop
  0000000000000031: 48 8B 85 E0 00 00  mov         rax,qword ptr [rbp+0E0h]
                    00
  0000000000000038: 48 8B C8           mov         rcx,rax
  000000000000003B: E8 00 00 00 00     call        ??0?$_Vector_val@U?$_Simple_types@PEAV?$Observer@$$V@@@std@@@std@@QEAA@XZ
  0000000000000040: 90                 nop
  0000000000000041: 48 8B 85 E0 00 00  mov         rax,qword ptr [rbp+0E0h]
                    00
  0000000000000048: 48 8D A5 C8 00 00  lea         rsp,[rbp+0C8h]
                    00
  000000000000004F: 5F                 pop         rdi
  0000000000000050: 5D                 pop         rbp
  0000000000000051: C3                 ret

??$?0PEAV?$Observer@$$V@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@PEAV?$Observer@$$V@@@1@@Z (public: __cdecl std::allocator<struct std::_Container_proxy>::allocator<struct std::_Container_proxy><class Observer<> *>(class std::allocator<class Observer<> *> const &)):
  0000000000000000: 48 89 54 24 10     mov         qword ptr [rsp+10h],rdx
  0000000000000005: 48 89 4C 24 08     mov         qword ptr [rsp+8],rcx
  000000000000000A: 55                 push        rbp
  000000000000000B: 57                 push        rdi
  000000000000000C: 48 81 EC E8 00 00  sub         rsp,0E8h
                    00
  0000000000000013: 48 8D 6C 24 20     lea         rbp,[rsp+20h]
  0000000000000018: 48 8D 0D 00 00 00  lea         rcx,[__7628ACE5_xmemory]
                    00
  000000000000001F: E8 00 00 00 00     call        __CheckForDebuggerJustMyCode
  0000000000000024: 90                 nop
  0000000000000025: 48 8B 85 E0 00 00  mov         rax,qword ptr [rbp+0E0h]
                    00
  000000000000002C: 48 8D A5 C8 00 00  lea         rsp,[rbp+0C8h]
                    00
  0000000000000033: 5F                 pop         rdi
  0000000000000034: 5D                 pop         rbp
  0000000000000035: C3                 ret

??$?6DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBU?$_Fillobj@D@0@@Z (class std::basic_ostream<char,struct std::char_traits<char> > & __cdecl std::operator<<<char,struct std::char_traits<char> >(class std::basic_ostream<char,struct std::char_traits<char> > &,struct std::_Fillobj<char> const &)):
  0000000000000000: 48 89 54 24 10     mov         qword ptr [rsp+10h],rdx
  0000000000000005: 48 89 4C 24 08     mov         qword ptr [rsp+8],rcx
  000000000000000A: 55                 push        rbp
  000000000000000B: 57                 push        rdi
  000000000000000C: 48 81 EC E8 00 00  sub         rsp,0E8h
                    00
  0000000000000013: 48 8D 6C 24 20     lea         rbp,[rsp+20h]
  0000000000000018: 48 8D 0D 00 00 00  lea         rcx,[__51C777E4_iomanip]
                    00
  000000000000001F: E8 00 00 00 00     call        __CheckForDebuggerJustMyCode
  0000000000000024: 90                 nop
  0000000000000025: 48 8B 85 E0 00 00  mov         rax,qword ptr [rbp+0E0h]
                    00
  000000000000002C: 48 8B 00           mov         rax,qword ptr [rax]
  000000000000002F: 48 63 40 04        movsxd      rax,dword ptr [rax+4]
  0000000000000033: 48 8B 8D E0 00 00  mov         rcx,qword ptr [rbp+0E0h]
                    00
  000000000000003A: 48 03 C8           add         rcx,rax
  000000000000003D: 48 8B C1           mov         rax,rcx
  0000000000000040: 48 8B 8D E8 00 00  mov         rcx,qword ptr [rbp+0E8h]
                    00
  0000000000000047: 0F B6 11           movzx       edx,byte ptr [rcx]
  000000000000004A: 48 8B C8           mov         rcx,rax
  000000000000004D: FF 15 00 00 00 00  call        qword ptr [__imp_?fill@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAADD@Z]
  0000000000000053: 90                 nop
  0000000000000054: 48 8B 85 E0 00 00  mov         rax,qword ptr [rbp+0E0h]
                    00
  000000000000005B: 48 8D A5 C8 00 00  lea         rsp,[rbp+0C8h]
                    00
  0000000000000062: 5F                 pop         rdi
  0000000000000063: 5D                 pop         rbp
  0000000000000064: C3                 ret

??$?6DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBU?$_Smanip@_J@0@@Z (class std::basic_ostream<char,struct std::char_traits<char> > & __cdecl std::operator<<<char,struct std::char_traits<char> >(class std::basic_ostream<char,struct std::char_traits<char> > &,struct std::_Smanip<__int64> const &)):
  0000000000000000: 48 89 54 24 10     mov         qword ptr [rsp+10h],rdx
  0000000000000005: 48 89 4C 24 08     mov         qword ptr [rsp+8],rcx
  000000000000000A: 55                 push        rbp
  000000000000000B: 57                 push        rdi
  000000000000000C: 48 81 EC E8 00 00  sub         rsp,0E8h
                    00
  0000000000000013: 48 8D 6C 24 20     lea         rbp,[rsp+20h]
  0000000000000018: 48 8D 0D 00 00 00  lea         rcx,[__51C777E4_iomanip]
                    00
  000000000000001F: E8 00 00 00 00     call        __CheckForDebuggerJustMyCode
  0000000000000024: 90                 nop
  0000000000000025: 48 8B 85 E0 00 00  mov         rax,qword ptr [rbp+0E0h]
                    00
  000000000000002C: 48 8B 00           mov         rax,qword ptr [rax]
  000000000000002F: 48 63 40 04        movsxd      rax,dword ptr [rax+4]
  0000000000000033: 48 8B 8D E0 00 00  mov         rcx,qword ptr [rbp+0E0h]
                    00
  000000000000003A: 48 03 C8           add         rcx,rax
  000000000000003D: 48 8B C1           mov         rax,rcx
  0000000000000040: 48 8B 8D E8 00 00  mov         rcx,qword ptr [rbp+0E8h]
                    00
  0000000000000047: 48 8B 51 08        mov         rdx,qword ptr [rcx+8]
  000000000000004B: 48 8B C8           mov         rcx,rax
  000000000000004E: 48 8B 85 E8 00 00  mov         rax,qword ptr [rbp+0E8h]
                    00
  0000000000000055: FF 10              call        qword ptr [rax]
  0000000000000057: 90                 nop
  0000000000000058: 48 8B 85 E0 00 00  mov         rax,qword ptr [rbp+0E0h]
                    00
  000000000000005F: 48 8D A5 C8 00 00  lea         rsp,[rbp+0C8h]
                    00
  0000000000000066: 5F                 pop         rdi
  0000000000000067: 5D                 pop         rbp
  0000000000000068: C3                 ret

??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z (class std::basic_ostream<char,struct std::char_traits<char> > & __cdecl std::operator<<<struct std::char_traits<char> >(class std::basic_ostream<char,struct std::char_traits<char> > &,char const *)):
  0000000000000000: 48 89 54 24 10     mov         qword ptr [rsp+10h],rdx
  0000000000000005: 48 89 4C 24 08     mov         qword ptr [rsp+8],rcx
  000000000000000A: 55                 push        rbp
  000000000000000B: 57                 push        rdi
  000000000000000C: 48 81 EC A8 01 00  sub         rsp,1A8h
                    00
  0000000000000013: 48 8D 6C 24 20     lea         rbp,[rsp+20h]
  0000000000000018: 48 8D 7C 24 20     lea         rdi,[rsp+20h]
  000000000000001D: B9 32 00 00 00     mov         ecx,32h
  0000000000000022: B8 CC CC CC CC     mov         eax,0CCCCCCCCh
  0000000000000027: F3 AB              rep stos    dword ptr [rdi]
  0000000000000029: 48 8B 8C 24 C8 01  mov         rcx,qword ptr [rsp+1C8h]
                    00 00
  0000000000000031: 48 8B 05 00 00 00  mov         rax,qword ptr [__security_cookie]
                    00
  0000000000000038: 48 33 C5           xor         rax,rbp
  000000000000003B: 48 89 85 70 01 00  mov         qword ptr [rbp+170h],rax
                    00
  0000000000000042: 48 8D 0D 00 00 00  lea         rcx,[__CED5848C_ostream]
                    00
  0000000000000049: E8 00 00 00 00     call        __CheckForDebuggerJustMyCode
  000000000000004E: 90                 nop
  000000000000004F: C7 45 04 00 00 00  mov         dword ptr [rbp+4],0
                    00
  0000000000000056: 48 8B 8D A8 01 00  mov         rcx,qword ptr [rbp+1A8h]
                    00
  000000000000005D: E8 00 00 00 00     call        ?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z
  0000000000000062: 48 89 45 28        mov         qword ptr [rbp+28h],rax
  0000000000000066: 48 8B 85 A0 01 00  mov         rax,qword ptr [rbp+1A0h]
                    00
  000000000000006D: 48 8B 00           mov         rax,qword ptr [rax]
  0000000000000070: 48 63 40 04        movsxd      rax,dword ptr [rax+4]
  0000000000000074: 48 8B 8D A0 01 00  mov         rcx,qword ptr [rbp+1A0h]
                    00
  000000000000007B: 48 03 C8           add         rcx,rax
  000000000000007E: 48 8B C1           mov         rax,rcx
  0000000000000081: 48 8B C8           mov         rcx,rax
  0000000000000084: FF 15 00 00 00 00  call        qword ptr [__imp_?width@ios_base@std@@QEBA_JXZ]
  000000000000008A: 48 85 C0           test        rax,rax
  000000000000008D: 7E 5B              jle         00000000000000EA
  000000000000008F: 48 8B 85 A0 01 00  mov         rax,qword ptr [rbp+1A0h]
                    00
  0000000000000096: 48 8B 00           mov         rax,qword ptr [rax]
  0000000000000099: 48 63 40 04        movsxd      rax,dword ptr [rax+4]
  000000000000009D: 48 8B 8D A0 01 00  mov         rcx,qword ptr [rbp+1A0h]
                    00
  00000000000000A4: 48 03 C8           add         rcx,rax
  00000000000000A7: 48 8B C1           mov         rax,rcx
  00000000000000AA: 48 8B C8           mov         rcx,rax
  00000000000000AD: FF 15 00 00 00 00  call        qword ptr [__imp_?width@ios_base@std@@QEBA_JXZ]
  00000000000000B3: 48 3B 45 28        cmp         rax,qword ptr [rbp+28h]
  00000000000000B7: 7E 31              jle         00000000000000EA
  00000000000000B9: 48 8B 85 A0 01 00  mov         rax,qword ptr [rbp+1A0h]
                    00
  00000000000000C0: 48 8B 00           mov         rax,qword ptr [rax]
  00000000000000C3: 48 63 40 04        movsxd      rax,dword ptr [rax+4]
  00000000000000C7: 48 8B 8D A0 01 00  mov         rcx,qword ptr [rbp+1A0h]
                    00
  00000000000000CE: 48 03 C8           add         rcx,rax
  00000000000000D1: 48 8B C1           mov         rax,rcx
  00000000000000D4: 48 8B C8           mov         rcx,rax
  00000000000000D7: FF 15 00 00 00 00  call        qword ptr [__imp_?width@ios_base@std@@QEBA_JXZ]
  00000000000000DD: 48 2B 45 28        sub         rax,qword ptr [rbp+28h]
  00000000000000E1: 48 89 85 68 01 00  mov         qword ptr [rbp+168h],rax
                    00
  00000000000000E8: EB 0B              jmp         00000000000000F5
  00000000000000EA: 48 C7 85 68 01 00  mov         qword ptr [rbp+168h],0
                    00 00 00 00 00
  00000000000000F5: 48 8B 85 68 01 00  mov         rax,qword ptr [rbp+168h]
                    00
  00000000000000FC: 48 89 45 48        mov         qword ptr [rbp+48h],rax
  0000000000000100: 48 8B 95 A0 01 00  mov         rdx,qword ptr [rbp+1A0h]
                    00
  0000000000000107: 48 8D 4D 68        lea         rcx,[rbp+68h]
  000000000000010B: E8 00 00 00 00     call        ??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z
  0000000000000110: 90                 nop
  0000000000000111: 48 8D 4D 68        lea         rcx,[rbp+68h]
  0000000000000115: E8 00 00 00 00     call        ??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEBA_NXZ
  000000000000011A: 0F B6 C0           movzx       eax,al
  000000000000011D: 85 C0              test        eax,eax
  000000000000011F: 75 0E              jne         000000000000012F
  0000000000000121: 8B 45 04           mov         eax,dword ptr [rbp+4]
  0000000000000124: 83 C8 04           or          eax,4
  0000000000000127: 89 45 04           mov         dword ptr [rbp+4],eax
  000000000000012A: E9 0A 02 00 00     jmp         $LN23
  000000000000012F: 48 8B 85 A0 01 00  mov         rax,qword ptr [rbp+1A0h]
                    00
  0000000000000136: 48 8B 00           mov         rax,qword ptr [rax]
  0000000000000139: 48 63 40 04        movsxd      rax,dword ptr [rax+4]
  000000000000013D: 48 8B 8D A0 01 00  mov         rcx,qword ptr [rbp+1A0h]
                    00
  0000000000000144: 48 03 C8           add         rcx,rax
  0000000000000147: 48 8B C1           mov         rax,rcx
  000000000000014A: 48 8B C8           mov         rcx,rax
  000000000000014D: FF 15 00 00 00 00  call        qword ptr [__imp_?flags@ios_base@std@@QEBAHXZ]
  0000000000000153: 25 C0 01 00 00     and         eax,1C0h
  0000000000000158: 83 F8 40           cmp         eax,40h
  000000000000015B: 0F 84 A5 00 00 00  je          0000000000000206
  0000000000000161: EB 0B              jmp         000000000000016E
  0000000000000163: 48 8B 45 48        mov         rax,qword ptr [rbp+48h]
  0000000000000167: 48 FF C8           dec         rax
  000000000000016A: 48 89 45 48        mov         qword ptr [rbp+48h],rax
  000000000000016E: 48 83 7D 48 00     cmp         qword ptr [rbp+48h],0
  0000000000000173: 0F 8E 8D 00 00 00  jle         0000000000000206
  0000000000000179: 48 8B 85 A0 01 00  mov         rax,qword ptr [rbp+1A0h]
                    00
  0000000000000180: 48 8B 00           mov         rax,qword ptr [rax]
  0000000000000183: 48 63 40 04        movsxd      rax,dword ptr [rax+4]
  0000000000000187: 48 8B 8D A0 01 00  mov         rcx,qword ptr [rbp+1A0h]
                    00
  000000000000018E: 48 03 C8           add         rcx,rax
  0000000000000191: 48 8B C1           mov         rax,rcx
  0000000000000194: 48 8B C8           mov         rcx,rax
  0000000000000197: FF 15 00 00 00 00  call        qword ptr [__imp_?fill@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADXZ]
  000000000000019D: 88 85 64 01 00 00  mov         byte ptr [rbp+164h],al
  00000000000001A3: 48 8B 8D A0 01 00  mov         rcx,qword ptr [rbp+1A0h]
                    00
  00000000000001AA: 48 8B 09           mov         rcx,qword ptr [rcx]
  00000000000001AD: 48 63 49 04        movsxd      rcx,dword ptr [rcx+4]
  00000000000001B1: 48 8B 95 A0 01 00  mov         rdx,qword ptr [rbp+1A0h]
                    00
  00000000000001B8: 48 03 D1           add         rdx,rcx
  00000000000001BB: 48 8B CA           mov         rcx,rdx
  00000000000001BE: FF 15 00 00 00 00  call        qword ptr [__imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ]
  00000000000001C4: 0F B6 8D 64 01 00  movzx       ecx,byte ptr [rbp+164h]
                    00
  00000000000001CB: 0F B6 D1           movzx       edx,cl
  00000000000001CE: 48 8B C8           mov         rcx,rax
  00000000000001D1: FF 15 00 00 00 00  call        qword ptr [__imp_?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAAHD@Z]
  00000000000001D7: 89 85 68 01 00 00  mov         dword ptr [rbp+168h],eax
  00000000000001DD: E8 00 00 00 00     call        ?eof@?$_Narrow_char_traits@DH@std@@SAHXZ
  00000000000001E2: 8B 95 68 01 00 00  mov         edx,dword ptr [rbp+168h]
  00000000000001E8: 8B C8              mov         ecx,eax
  00000000000001EA: E8 00 00 00 00     call        ?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NHH@Z
  00000000000001EF: 0F B6 C0           movzx       eax,al
  00000000000001F2: 85 C0              test        eax,eax
  00000000000001F4: 74 0B              je          0000000000000201
  00000000000001F6: 8B 45 04           mov         eax,dword ptr [rbp+4]
  00000000000001F9: 83 C8 04           or          eax,4
  00000000000001FC: 89 45 04           mov         dword ptr [rbp+4],eax
  00000000000001FF: EB 05              jmp         0000000000000206
  0000000000000201: E9 5D FF FF FF     jmp         0000000000000163
  0000000000000206: 83 7D 04 00        cmp         dword ptr [rbp+4],0
  000000000000020A: 75 55              jne         0000000000000261
  000000000000020C: 48 8B 85 A0 01 00  mov         rax,qword ptr [rbp+1A0h]
                    00
  0000000000000213: 48 8B 00           mov         rax,qword ptr [rax]
  0000000000000216: 48 63 40 04        movsxd      rax,dword ptr [rax+4]
  000000000000021A: 48 8B 8D A0 01 00  mov         rcx,qword ptr [rbp+1A0h]
                    00
  0000000000000221: 48 03 C8           add         rcx,rax
  0000000000000224: 48 8B C1           mov         rax,rcx
  0000000000000227: 48 8B C8           mov         rcx,rax
  000000000000022A: FF 15 00 00 00 00  call        qword ptr [__imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ]
  0000000000000230: 4C 8B 45 28        mov         r8,qword ptr [rbp+28h]
  0000000000000234: 48 8B 95 A8 01 00  mov         rdx,qword ptr [rbp+1A8h]
                    00
  000000000000023B: 48 8B C8           mov         rcx,rax
  000000000000023E: FF 15 00 00 00 00  call        qword ptr [__imp_?sputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAA_JPEBD_J@Z]
  0000000000000244: 48 89 85 68 01 00  mov         qword ptr [rbp+168h],rax
                    00
  000000000000024B: 48 8B 45 28        mov         rax,qword ptr [rbp+28h]
  000000000000024F: 48 39 85 68 01 00  cmp         qword ptr [rbp+168h],rax
                    00
  0000000000000256: 74 09              je          0000000000000261
  0000000000000258: 8B 45 04           mov         eax,dword ptr [rbp+4]
  000000000000025B: 83 C8 04           or          eax,4
  000000000000025E: 89 45 04           mov         dword ptr [rbp+4],eax
  0000000000000261: 83 7D 04 00        cmp         dword ptr [rbp+4],0
  0000000000000265: 0F 85 A5 00 00 00  jne         0000000000000310
  000000000000026B: EB 0B              jmp         0000000000000278
  000000000000026D: 48 8B 45 48        mov         rax,qword ptr [rbp+48h]
  0000000000000271: 48 FF C8           dec         rax
  0000000000000274: 48 89 45 48        mov         qword ptr [rbp+48h],rax
  0000000000000278: 48 83 7D 48 00     cmp         qword ptr [rbp+48h],0
  000000000000027D: 0F 8E 8D 00 00 00  jle         0000000000000310
  0000000000000283: 48 8B 85 A0 01 00  mov         rax,qword ptr [rbp+1A0h]
                    00
  000000000000028A: 48 8B 00           mov         rax,qword ptr [rax]
  000000000000028D: 48 63 40 04        movsxd      rax,dword ptr [rax+4]
  0000000000000291: 48 8B 8D A0 01 00  mov         rcx,qword ptr [rbp+1A0h]
                    00
  0000000000000298: 48 03 C8           add         rcx,rax
  000000000000029B: 48 8B C1           mov         rax,rcx
  000000000000029E: 48 8B C8           mov         rcx,rax
  00000000000002A1: FF 15 00 00 00 00  call        qword ptr [__imp_?fill@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADXZ]
  00000000000002A7: 88 85 64 01 00 00  mov         byte ptr [rbp+164h],al
  00000000000002AD: 48 8B 8D A0 01 00  mov         rcx,qword ptr [rbp+1A0h]
                    00
  00000000000002B4: 48 8B 09           mov         rcx,qword ptr [rcx]
  00000000000002B7: 48 63 49 04        movsxd      rcx,dword ptr [rcx+4]
  00000000000002BB: 48 8B 95 A0 01 00  mov         rdx,qword ptr [rbp+1A0h]
                    00
  00000000000002C2: 48 03 D1           add         rdx,rcx
  00000000000002C5: 48 8B CA           mov         rcx,rdx
  00000000000002C8: FF 15 00 00 00 00  call        qword ptr [__imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ]
  00000000000002CE: 0F B6 8D 64 01 00  movzx       ecx,byte ptr [rbp+164h]
                    00
  00000000000002D5: 0F B6 D1           movzx       edx,cl
  00000000000002D8: 48 8B C8           mov         rcx,rax
  00000000000002DB: FF 15 00 00 00 00  call        qword ptr [__imp_?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAAHD@Z]
  00000000000002E1: 89 85 68 01 00 00  mov         dword ptr [rbp+168h],eax
  00000000000002E7: E8 00 00 00 00     call        ?eof@?$_Narrow_char_traits@DH@std@@SAHXZ
  00000000000002EC: 8B 95 68 01 00 00  mov         edx,dword ptr [rbp+168h]
  00000000000002F2: 8B C8              mov         ecx,eax
  00000000000002F4: E8 00 00 00 00     call        ?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NHH@Z
  00000000000002F9: 0F B6 C0           movzx       eax,al
  00000000000002FC: 85 C0              test        eax,eax
  00000000000002FE: 74 0B              je          000000000000030B
  0000000000000300: 8B 45 04           mov         eax,dword ptr [rbp+4]
  0000000000000303: 83 C8 04           or          eax,4
  0000000000000306: 89 45 04           mov         dword ptr [rbp+4],eax
  0000000000000309: EB 05              jmp         0000000000000310
  000000000000030B: E9 5D FF FF FF     jmp         000000000000026D
  0000000000000310: 48 8B 85 A0 01 00  mov         rax,qword ptr [rbp+1A0h]
                    00
  0000000000000317: 48 8B 00           mov         rax,qword ptr [rax]
  000000000000031A: 48 63 40 04        movsxd      rax,dword ptr [rax+4]
  000000000000031E: 48 8B 8D A0 01 00  mov         rcx,qword ptr [rbp+1A0h]
                    00
  0000000000000325: 48 03 C8           add         rcx,rax
  0000000000000328: 48 8B C1           mov         rax,rcx
  000000000000032B: 33 D2              xor         edx,edx
  000000000000032D: 48 8B C8           mov         rcx,rax
  0000000000000330: FF 15 00 00 00 00  call        qword ptr [__imp_?width@ios_base@std@@QEAA_J_J@Z]
  0000000000000336: 90                 nop
  0000000000000337: EB 00              jmp         $LN23
$LN23:
  0000000000000339: 48 8B 85 A0 01 00  mov         rax,qword ptr [rbp+1A0h]
                    00
  0000000000000340: 48 8B 00           mov         rax,qword ptr [rax]
  0000000000000343: 48 63 40 04        movsxd      rax,dword ptr [rax+4]
  0000000000000347: 48 8B 8D A0 01 00  mov         rcx,qword ptr [rbp+1A0h]
                    00
  000000000000034E: 48 03 C8           add         rcx,rax
  0000000000000351: 48 8B C1           mov         rax,rcx
  0000000000000354: 45 33 C0           xor         r8d,r8d
  0000000000000357: 8B 55 04           mov         edx,dword ptr [rbp+4]
  000000000000035A: 48 8B C8           mov         rcx,rax
  000000000000035D: FF 15 00 00 00 00  call        qword ptr [__imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z]
  0000000000000363: 90                 nop
  0000000000000364: 48 8B 85 A0 01 00  mov         rax,qword ptr [rbp+1A0h]
                    00
  000000000000036B: 48 89 85 58 01 00  mov         qword ptr [rbp+158h],rax
                    00
  0000000000000372: 48 8D 4D 68        lea         rcx,[rbp+68h]
  0000000000000376: E8 00 00 00 00     call        ??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
  000000000000037B: 48 8B 85 58 01 00  mov         rax,qword ptr [rbp+158h]
                    00
  0000000000000382: 48 8B F8           mov         rdi,rax
  0000000000000385: 48 8D 4D E0        lea         rcx,[rbp-20h]
  0000000000000389: 48 8D 15 00 00 00  lea         rdx,[??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z$rtcFrameData]
                    00
  0000000000000390: E8 00 00 00 00     call        _RTC_CheckStackVars
  0000000000000395: 48 8B C7           mov         rax,rdi
  0000000000000398: 48 8B 8D 70 01 00  mov         rcx,qword ptr [rbp+170h]
                    00
  000000000000039F: 48 33 CD           xor         rcx,rbp
  00000000000003A2: E8 00 00 00 00     call        __security_check_cookie
  00000000000003A7: 48 8D A5 88 01 00  lea         rsp,[rbp+188h]
                    00
  00000000000003AE: 5F                 pop         rdi
  00000000000003AF: 5D                 pop         rbp
  00000000000003B0: C3                 ret

?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA (int `class dtor$0::basic_ostream<char,struct std::char_traits<char> > & __cdecl std::operator<<<struct std::char_traits<char> >(class dtor$0::std &,char const *)'::`1'::dtor$0):
  0000000000000000: 48 89 4C 24 08     mov         qword ptr [rsp+8],rcx
  0000000000000005: 48 89 54 24 10     mov         qword ptr [rsp+10h],rdx
  000000000000000A: 55                 push        rbp
  000000000000000B: 57                 push        rdi
  000000000000000C: 48 83 EC 28        sub         rsp,28h
  0000000000000010: 48 8D 6A 20        lea         rbp,[rdx+20h]
  0000000000000014: 48 8D 4D 68        lea         rcx,[rbp+68h]
  0000000000000018: E8 00 00 00 00     call        ??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
  000000000000001D: 48 83 C4 28        add         rsp,28h
  0000000000000021: 5F                 pop         rdi
  0000000000000022: 5D                 pop         rbp
  0000000000000023: C3                 ret

?catch$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA (int `class catch$1::basic_ostream<char,struct std::char_traits<char> > & __cdecl std::operator<<<struct std::char_traits<char> >(class catch$1::std &,char const *)'::`1'::catch$1):
  0000000000000000: 48 89 4C 24 08     mov         qword ptr [rsp+8],rcx
  0000000000000005: 48 89 54 24 10     mov         qword ptr [rsp+10h],rdx
  000000000000000A: 55                 push        rbp
  000000000000000B: 57                 push        rdi
  000000000000000C: 48 83 EC 28        sub         rsp,28h
  0000000000000010: 48 8D 6A 20        lea         rbp,[rdx+20h]
__catch$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z$0:
  0000000000000014: 48 8B 85 A0 01 00  mov         rax,qword ptr [rbp+1A0h]
                    00
  000000000000001B: 48 8B 00           mov         rax,qword ptr [rax]
  000000000000001E: 48 63 40 04        movsxd      rax,dword ptr [rax+4]
  0000000000000022: 48 8B 8D A0 01 00  mov         rcx,qword ptr [rbp+1A0h]
                    00
  0000000000000029: 48 03 C8           add         rcx,rax
  000000000000002C: 48 8B C1           mov         rax,rcx
  000000000000002F: 41 B0 01           mov         r8b,1
  0000000000000032: BA 04 00 00 00     mov         edx,4
  0000000000000037: 48 8B C8           mov         rcx,rax
  000000000000003A: FF 15 00 00 00 00  call        qword ptr [__imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z]
  0000000000000040: 90                 nop
  0000000000000041: 48 8D 05 00 00 00  lea         rax,[$LN23]
                    00
  0000000000000048: 48 83 C4 28        add         rsp,28h
  000000000000004C: 5F                 pop         rdi
  000000000000004D: 5D                 pop         rbp
  000000000000004E: C3                 ret
  000000000000004F: CC                 int         3

??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBE@Z (class std::basic_ostream<char,struct std::char_traits<char> > & __cdecl std::operator<<<struct std::char_traits<char> >(class std::basic_ostream<char,struct std::char_traits<char> > &,unsigned char const *)):
  0000000000000000: 48 89 54 24 10     mov         qword ptr [rsp+10h],rdx
  0000000000000005: 48 89 4C 24 08     mov         qword ptr [rsp+8],rcx
  000000000000000A: 55                 push        rbp
  000000000000000B: 57                 push        rdi
  000000000000000C: 48 81 EC E8 00 00  sub         rsp,0E8h
                    00
  0000000000000013: 48 8D 6C 24 20     lea         rbp,[rsp+20h]
  0000000000000018: 48 8D 0D 00 00 00  lea         rcx,[__CED5848C_ostream]
                    00
  000000000000001F: E8 00 00 00 00     call        __CheckForDebuggerJustMyCode
  0000000000000024: 90                 nop
  0000000000000025: 48 8B 95 E8 00 00  mov         rdx,qword ptr [rbp+0E8h]
                    00
  000000000000002C: 48 8B 8D E0 00 00  mov         rcx,qword ptr [rbp+0E0h]
                    00
  0000000000000033: E8 00 00 00 00     call        ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
  0000000000000038: 48 8D A5 C8 00 00  lea         rsp,[rbp+0C8h]
                    00
  000000000000003F: 5F                 pop         rdi
  0000000000000040: 5D                 pop         rbp
  0000000000000041: C3                 ret

??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z (public: void __cdecl std::_Container_base12::_Alloc_proxy<class std::allocator<struct std::_Container_proxy> >(class std::allocator<struct std::_Container_proxy> &&)):
  0000000000000000: 48 89 54 24 10     mov         qword ptr [rsp+10h],rdx
  0000000000000005: 48 89 4C 24 08     mov         qword ptr [rsp+8],rcx
  000000000000000A: 55                 push        rbp
  000000000000000B: 57                 push        rdi
  000000000000000C: 48 81 EC 28 01 00  sub         rsp,128h
                    00
  0000000000000013: 48 8D 6C 24 20     lea         rbp,[rsp+20h]
  0000000000000018: 48 8D 0D 00 00 00  lea         rcx,[__7628ACE5_xmemory]
                    00
  000000000000001F: E8 00 00 00 00     call        __CheckForDebuggerJustMyCode
  0000000000000024: 90                 nop
  0000000000000025: BA 01 00 00 00     mov         edx,1
  000000000000002A: 48 8B 8D 28 01 00  mov         rcx,qword ptr [rbp+128h]
                    00
  0000000000000031: E8 00 00 00 00     call        ?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z
  0000000000000036: 48 8B C8           mov         rcx,rax
  0000000000000039: E8 00 00 00 00     call        ??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z
  000000000000003E: 48 89 45 08        mov         qword ptr [rbp+8],rax
  0000000000000042: 48 8B 85 20 01 00  mov         rax,qword ptr [rbp+120h]
                    00
  0000000000000049: 48 89 85 E8 00 00  mov         qword ptr [rbp+0E8h],rax
                    00
  0000000000000050: 48 8D 95 E8 00 00  lea         rdx,[rbp+0E8h]
                    00
  0000000000000057: 48 8B 4D 08        mov         rcx,qword ptr [rbp+8]
  000000000000005B: E8 00 00 00 00     call        ??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z
  0000000000000060: 90                 nop
  0000000000000061: 48 8B 85 20 01 00  mov         rax,qword ptr [rbp+120h]
                    00
  0000000000000068: 48 8B 4D 08        mov         rcx,qword ptr [rbp+8]
  000000000000006C: 48 89 08           mov         qword ptr [rax],rcx
  000000000000006F: 48 8B 45 08        mov         rax,qword ptr [rbp+8]
  0000000000000073: 48 8B 8D 20 01 00  mov         rcx,qword ptr [rbp+120h]
                    00
  000000000000007A: 48 89 08           mov         qword ptr [rax],rcx
  000000000000007D: 48 8D A5 08 01 00  lea         rsp,[rbp+108h]
                    00
  0000000000000084: 5F                 pop         rdi
  0000000000000085: 5D                 pop         rbp
  0000000000000086: C3                 ret

??$_Allocate@$0BA@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z (void * __cdecl std::_Allocate<16,struct std::_Default_allocate_traits>(unsigned __int64)):
  0000000000000000: 48 89 4C 24 08     mov         qword ptr [rsp+8],rcx
  0000000000000005: 55                 push        rbp
  0000000000000006: 57                 push        rdi
  0000000000000007: 48 81 EC E8 00 00  sub         rsp,0E8h
                    00
  000000000000000E: 48 8D 6C 24 20     lea         rbp,[rsp+20h]
  0000000000000013: 48 8D 0D 00 00 00  lea         rcx,[__7628ACE5_xmemory]
                    00
  000000000000001A: E8 00 00 00 00     call        __CheckForDebuggerJustMyCode
  000000000000001F: 90                 nop
  0000000000000020: 48 83 BD E0 00 00  cmp         qword ptr [rbp+0E0h],0
                    00 00
  0000000000000028: 75 04              jne         000000000000002E
  000000000000002A: 33 C0              xor         eax,eax
  000000000000002C: EB 27              jmp         0000000000000055
  000000000000002E: 48 81 BD E0 00 00  cmp         qword ptr [rbp+0E0h],1000h
                    00 00 10 00 00
  0000000000000039: 72 0E              jb          0000000000000049
  000000000000003B: 48 8B 8D E0 00 00  mov         rcx,qword ptr [rbp+0E0h]
                    00
  0000000000000042: E8 00 00 00 00     call        ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z
  0000000000000047: EB 0C              jmp         0000000000000055
  0000000000000049: 48 8B 8D E0 00 00  mov         rcx,qword ptr [rbp+0E0h]
                    00
  0000000000000050: E8 00 00 00 00     call        ?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z
  0000000000000055: 48 8D A5 C8 00 00  lea         rsp,[rbp+0C8h]
                    00
  000000000000005C: 5F                 pop         rdi
  000000000000005D: 5D                 pop         rbp
  000000000000005E: C3                 ret

??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z (void * __cdecl std::_Allocate_manually_vector_aligned<struct std::_Default_allocate_traits>(unsigned __int64)):
  0000000000000000: 48 89 4C 24 08     mov         qword ptr [rsp+8],rcx
  0000000000000005: 55                 push        rbp
  0000000000000006: 57                 push        rdi
  0000000000000007: 48 81 EC 58 01 00  sub         rsp,158h
                    00
  000000000000000E: 48 8D 6C 24 30     lea         rbp,[rsp+30h]
  0000000000000013: 48 8D 0D 00 00 00  lea         rcx,[__7628ACE5_xmemory]
                    00
  000000000000001A: E8 00 00 00 00     call        __CheckForDebuggerJustMyCode
  000000000000001F: 90                 nop
  0000000000000020: 48 8B 85 40 01 00  mov         rax,qword ptr [rbp+140h]
                    00
  0000000000000027: 48 83 C0 2F        add         rax,2Fh
  000000000000002B: 48 89 45 08        mov         qword ptr [rbp+8],rax
  000000000000002F: 48 8B 85 40 01 00  mov         rax,qword ptr [rbp+140h]
                    00
  0000000000000036: 48 39 45 08        cmp         qword ptr [rbp+8],rax
  000000000000003A: 77 06              ja          0000000000000042
  000000000000003C: E8 00 00 00 00     call        ?_Throw_bad_array_new_length@std@@YAXXZ
  0000000000000041: 90                 nop
  0000000000000042: 48 8B 4D 08        mov         rcx,qword ptr [rbp+8]
  0000000000000046: E8 00 00 00 00     call        ?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z
  000000000000004B: 48 89 45 28        mov         qword ptr [rbp+28h],rax
  000000000000004F: 48 83 7D 28 00     cmp         qword ptr [rbp+28h],0
  0000000000000054: 74 02              je          0000000000000058
  0000000000000056: EB 6C              jmp         00000000000000C4
  0000000000000058: 48 8D 05 00 00 00  lea         rax,[??_C@_0BB@FCMFBGOM@invalid?5argument@]
                    00
  000000000000005F: 48 89 44 24 28     mov         qword ptr [rsp+28h],rax
  0000000000000064: 48 8D 05 00 00 00  lea         rax,[??_C@_02DKCKIIND@?$CFs@]
                    00
  000000000000006B: 48 89 44 24 20     mov         qword ptr [rsp+20h],rax
  0000000000000070: 45 33 C9           xor         r9d,r9d
  0000000000000073: 41 B8 9F 00 00 00  mov         r8d,9Fh
  0000000000000079: 48 8D 15 00 00 00  lea         rdx,[??_C@_0GC@GDGMGNBP@C?3?2Program?5Files?2Microsoft?5Visu@]
                    00
  0000000000000080: B9 02 00 00 00     mov         ecx,2
  0000000000000085: FF 15 00 00 00 00  call        qword ptr [__imp__CrtDbgReport]
  000000000000008B: 83 F8 01           cmp         eax,1
  000000000000008E: 75 03              jne         0000000000000093
  0000000000000090: CC                 int         3
  0000000000000091: 33 C0              xor         eax,eax
  0000000000000093: 48 C7 44 24 20 00  mov         qword ptr [rsp+20h],0
                    00 00 00
  000000000000009C: 41 B9 9F 00 00 00  mov         r9d,9Fh
  00000000000000A2: 4C 8D 05 00 00 00  lea         r8,[??_C@_1ME@KJJNLLPL@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@]
                    00
  00000000000000A9: 48 8D 15 00 00 00  lea         rdx,[??_C@_11LOCGONAA@@]
                    00
  00000000000000B0: 48 8D 0D 00 00 00  lea         rcx,[??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@]
                    00
  00000000000000B7: FF 15 00 00 00 00  call        qword ptr [__imp__invalid_parameter]
  00000000000000BD: 90                 nop
  00000000000000BE: 33 C0              xor         eax,eax
  00000000000000C0: 85 C0              test        eax,eax
  00000000000000C2: 75 94              jne         0000000000000058
  00000000000000C4: 33 C0              xor         eax,eax
  00000000000000C6: 85 C0              test        eax,eax
  00000000000000C8: 75 85              jne         000000000000004F
  00000000000000CA: 48 8B 45 28        mov         rax,qword ptr [rbp+28h]
  00000000000000CE: 48 83 C0 2F        add         rax,2Fh
  00000000000000D2: 48 83 E0 E0        and         rax,0FFFFFFFFFFFFFFE0h
  00000000000000D6: 48 89 45 48        mov         qword ptr [rbp+48h],rax
  00000000000000DA: B8 08 00 00 00     mov         eax,8
  00000000000000DF: 48 6B C0 FF        imul        rax,rax,0FFFFFFFFFFFFFFFFh
  00000000000000E3: 48 8B 4D 48        mov         rcx,qword ptr [rbp+48h]
  00000000000000E7: 48 8B 55 28        mov         rdx,qword ptr [rbp+28h]
  00000000000000EB: 48 89 14 01        mov         qword ptr [rcx+rax],rdx
  00000000000000EF: B8 08 00 00 00     mov         eax,8
  00000000000000F4: 48 6B C0 FE        imul        rax,rax,0FFFFFFFFFFFFFFFEh
  00000000000000F8: 48 8B 4D 48        mov         rcx,qword ptr [rbp+48h]
  00000000000000FC: 48 BA FA FA FA FA  mov         rdx,0FAFAFAFAFAFAFAFAh
                    FA FA FA FA
  0000000000000106: 48 89 14 01        mov         qword ptr [rcx+rax],rdx
  000000000000010A: 48 8B 45 48        mov         rax,qword ptr [rbp+48h]
  000000000000010E: 48 8D A5 28 01 00  lea         rsp,[rbp+128h]
                    00
  0000000000000115: 5F                 pop         rdi
  0000000000000116: 5D                 pop         rbp
  0000000000000117: C3                 ret

??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z (void __cdecl std::_Construct_in_place<struct std::_Container_proxy,struct std::_Container_base12 *>(struct std::_Container_proxy &,struct std::_Container_base12 * &&)):
  0000000000000000: 48 89 54 24 10     mov         qword ptr [rsp+10h],rdx
  0000000000000005: 48 89 4C 24 08     mov         qword ptr [rsp+8],rcx
  000000000000000A: 55                 push        rbp
  000000000000000B: 57                 push        rdi
  000000000000000C: 48 81 EC 08 01 00  sub         rsp,108h
                    00
  0000000000000013: 48 8D 6C 24 20     lea         rbp,[rsp+20h]
  0000000000000018: 48 8D 0D 00 00 00  lea         rcx,[__279CCFA6_xutility]
                    00
  000000000000001F: E8 00 00 00 00     call        __CheckForDebuggerJustMyCode
  0000000000000024: 90                 nop
  0000000000000025: 48 8B 8D 00 01 00  mov         rcx,qword ptr [rbp+100h]
                    00
  000000000000002C: E8 00 00 00 00     call        ??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z
  0000000000000031: 48 8B D0           mov         rdx,rax
  0000000000000034: B9 10 00 00 00     mov         ecx,10h
  0000000000000039: E8 00 00 00 00     call        ??2@YAPEAX_KPEAX@Z
  000000000000003E: 48 89 85 C8 00 00  mov         qword ptr [rbp+0C8h],rax
                    00
  0000000000000045: 48 8B 85 08 01 00  mov         rax,qword ptr [rbp+108h]
                    00
  000000000000004C: 48 8B 10           mov         rdx,qword ptr [rax]
  000000000000004F: 48 8B 8D C8 00 00  mov         rcx,qword ptr [rbp+0C8h]
                    00
  0000000000000056: E8 00 00 00 00     call        ??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z
  000000000000005B: 90                 nop
  000000000000005C: 48 8D A5 E8 00 00  lea         rsp,[rbp+0E8h]
                    00
  0000000000000063: 5F                 pop         rdi
  0000000000000064: 5D                 pop         rbp
  0000000000000065: C3                 ret

??$_Deallocate@$0BA@@std@@YAXPEAX_K@Z (void __cdecl std::_Deallocate<16>(void *,unsigned __int64)):
  0000000000000000: 48 89 54 24 10     mov         qword ptr [rsp+10h],rdx
  0000000000000005: 48 89 4C 24 08     mov         qword ptr [rsp+8],rcx
  000000000000000A: 55                 push        rbp
  000000000000000B: 57                 push        rdi
  000000000000000C: 48 81 EC E8 00 00  sub         rsp,0E8h
                    00
  0000000000000013: 48 8D 6C 24 20     lea         rbp,[rsp+20h]
  0000000000000018: 48 8D 0D 00 00 00  lea         rcx,[__7628ACE5_xmemory]
                    00
  000000000000001F: E8 00 00 00 00     call        __CheckForDebuggerJustMyCode
  0000000000000024: 90                 nop
  0000000000000025: 48 81 BD E8 00 00  cmp         qword ptr [rbp+0E8h],1000h
                    00 00 10 00 00
  0000000000000030: 72 14              jb          0000000000000046
  0000000000000032: 48 8D 95 E8 00 00  lea         rdx,[rbp+0E8h]
                    00
  0000000000000039: 48 8D 8D E0 00 00  lea         rcx,[rbp+0E0h]
                    00
  0000000000000040: E8 00 00 00 00     call        ?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z
  0000000000000045: 90                 nop
  0000000000000046: 48 8B 95 E8 00 00  mov         rdx,qword ptr [rbp+0E8h]
                    00
  000000000000004D: 48 8B 8D E0 00 00  mov         rcx,qword ptr [rbp+0E0h]
                    00
  0000000000000054: E8 00 00 00 00     call        ??3@YAXPEAX_K@Z
  0000000000000059: 90                 nop
  000000000000005A: 48 8D A5 C8 00 00  lea         rsp,[rbp+0C8h]
                    00
  0000000000000061: 5F                 pop         rdi
  0000000000000062: 5D                 pop         rbp
  0000000000000063: C3                 ret

??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z (void __cdecl std::_Deallocate_plain<class std::allocator<struct std::_Container_proxy> >(class std::allocator<struct std::_Container_proxy> &,struct std::_Container_proxy * const)):
  0000000000000000: 48 89 54 24 10     mov         qword ptr [rsp+10h],rdx
  0000000000000005: 48 89 4C 24 08     mov         qword ptr [rsp+8],rcx
  000000000000000A: 55                 push        rbp
  000000000000000B: 57                 push        rdi
  000000000000000C: 48 81 EC E8 00 00  sub         rsp,0E8h
                    00
  0000000000000013: 48 8D 6C 24 20     lea         rbp,[rsp+20h]
  0000000000000018: 48 8D 0D 00 00 00  lea         rcx,[__7628ACE5_xmemory]
                    00
  000000000000001F: E8 00 00 00 00     call        __CheckForDebuggerJustMyCode
  0000000000000024: 90                 nop
  0000000000000025: 41 B8 01 00 00 00  mov         r8d,1
  000000000000002B: 48 8B 95 E8 00 00  mov         rdx,qword ptr [rbp+0E8h]
                    00
  0000000000000032: 48 8B 8D E0 00 00  mov         rcx,qword ptr [rbp+0E0h]
                    00
  0000000000000039: E8 00 00 00 00     call        ?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z
  000000000000003E: 90                 nop
  000000000000003F: 48 8D A5 C8 00 00  lea         rsp,[rbp+0C8h]
                    00
  0000000000000046: 5F                 pop         rdi
  0000000000000047: 5D                 pop         rbp
  0000000000000048: C3                 ret

??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z (void __cdecl std::_Delete_plain_internal<class std::allocator<struct std::_Container_proxy> >(class std::allocator<struct std::_Container_proxy> &,struct std::_Container_proxy * const)):
  0000000000000000: 48 89 54 24 10     mov         qword ptr [rsp+10h],rdx
  0000000000000005: 48 89 4C 24 08     mov         qword ptr [rsp+8],rcx
  000000000000000A: 55                 push        rbp
  000000000000000B: 57                 push        rdi
  000000000000000C: 48 81 EC E8 00 00  sub         rsp,0E8h
                    00
  0000000000000013: 48 8D 6C 24 20     lea         rbp,[rsp+20h]
  0000000000000018: 48 8D 0D 00 00 00  lea         rcx,[__7628ACE5_xmemory]
                    00
  000000000000001F: E8 00 00 00 00     call        __CheckForDebuggerJustMyCode
  0000000000000024: 90                 nop
  0000000000000025: 48 8B 95 E8 00 00  mov         rdx,qword ptr [rbp+0E8h]
                    00
  000000000000002C: 48 8B 8D E0 00 00  mov         rcx,qword ptr [rbp+0E0h]
                    00
  0000000000000033: E8 00 00 00 00     call        ??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z
  0000000000000038: 90                 nop
  0000000000000039: 48 8D A5 C8 00 00  lea         rsp,[rbp+0C8h]
                    00
  0000000000000040: 5F                 pop         rdi
  0000000000000041: 5D                 pop         rbp
  0000000000000042: C3                 ret

??$_Destroy_range@V?$allocator@PEAV?$Observer@$$V@@@std@@@std@@YAXPEAPEAV?$Observer@$$V@@QEAPEAV1@AEAV?$allocator@PEAV?$Observer@$$V@@@0@@Z (void __cdecl std::_Destroy_range<class std::allocator<class Observer<> *> >(class Observer<> * *,class Observer<> * * const,class std::allocator<class Observer<> *> &)):
  0000000000000000: 4C 89 44 24 18     mov         qword ptr [rsp+18h],r8
  0000000000000005: 48 89 54 24 10     mov         qword ptr [rsp+10h],rdx
  000000000000000A: 48 89 4C 24 08     mov         qword ptr [rsp+8],rcx
  000000000000000F: 55                 push        rbp
  0000000000000010: 57                 push        rdi
  0000000000000011: 48 81 EC E8 00 00  sub         rsp,0E8h
                    00
  0000000000000018: 48 8D 6C 24 20     lea         rbp,[rsp+20h]
  000000000000001D: 48 8D 0D 00 00 00  lea         rcx,[__7628ACE5_xmemory]
                    00
  0000000000000024: E8 00 00 00 00     call        __CheckForDebuggerJustMyCode
  0000000000000029: 90                 nop
  000000000000002A: 48 8D A5 C8 00 00  lea         rsp,[rbp+0C8h]
                    00
  0000000000000031: 5F                 pop         rdi
  0000000000000032: 5D                 pop         rbp
  0000000000000033: C3                 ret

??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z (unsigned __int64 __cdecl std::_Get_size_of_n<16>(unsigned __int64)):
  0000000000000000: 48 89 4C 24 08     mov         qword ptr [rsp+8],rcx
  0000000000000005: 55                 push        rbp
  0000000000000006: 57                 push        rdi
  0000000000000007: 48 81 EC 28 01 00  sub         rsp,128h
                    00
  000000000000000E: 48 8D 6C 24 20     lea         rbp,[rsp+20h]
  0000000000000013: 48 8D 0D 00 00 00  lea         rcx,[__7628ACE5_xmemory]
                    00
  000000000000001A: E8 00 00 00 00     call        __CheckForDebuggerJustMyCode
  000000000000001F: 90                 nop
  0000000000000020: C6 45 04 01        mov         byte ptr [rbp+4],1
  0000000000000024: 48 B8 FF FF FF FF  mov         rax,0FFFFFFFFFFFFFFFh
                    FF FF FF 0F
  000000000000002E: 48 89 45 28        mov         qword ptr [rbp+28h],rax
  0000000000000032: 48 B8 FF FF FF FF  mov         rax,0FFFFFFFFFFFFFFFh
                    FF FF FF 0F
  000000000000003C: 48 39 85 20 01 00  cmp         qword ptr [rbp+120h],rax
                    00
  0000000000000043: 76 06              jbe         000000000000004B
  0000000000000045: E8 00 00 00 00     call        ?_Throw_bad_array_new_length@std@@YAXXZ
  000000000000004A: 90                 nop
  000000000000004B: 48 6B 85 20 01 00  imul        rax,qword ptr [rbp+120h],10h
                    00 10
  0000000000000053: 48 8D A5 08 01 00  lea         rsp,[rbp+108h]
                    00
  000000000000005A: 5F                 pop         rdi
  000000000000005B: 5D                 pop         rbp
  000000000000005C: C3                 ret

??$_Getvals@_W@?$time_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@IEAAX_WAEBV_Locinfo@1@@Z (protected: void __cdecl std::time_get<char,class std::istreambuf_iterator<char,struct std::char_traits<char> > >::_Getvals<wchar_t>(wchar_t,class std::_Locinfo const &)):
  0000000000000000: 4C 89 44 24 18     mov         qword ptr [rsp+18h],r8
  0000000000000005: 66 89 54 24 10     mov         word ptr [rsp+10h],dx
  000000000000000A: 48 89 4C 24 08     mov         qword ptr [rsp+8],rcx
  000000000000000F: 55                 push        rbp
  0000000000000010: 56                 push        rsi
  0000000000000011: 57                 push        rdi
  0000000000000012: 48 81 EC 30 01 00  sub         rsp,130h
                    00
  0000000000000019: 48 8D 6C 24 20     lea         rbp,[rsp+20h]
  000000000000001E: 48 8D 0D 00 00 00  lea         rcx,[__ECD77665_xloctime]
                    00
  0000000000000025: E8 00 00 00 00     call        __CheckForDebuggerJustMyCode
  000000000000002A: 90                 nop
  000000000000002B: 48 8D 95 C8 00 00  lea         rdx,[rbp+0C8h]
                    00
  0000000000000032: 48 8B 8D 40 01 00  mov         rcx,qword ptr [rbp+140h]
                    00
  0000000000000039: FF 15 00 00 00 00  call        qword ptr [__imp_?_Getcvt@_Locinfo@std@@QEBA?AU_Cvtvec@@XZ]
  000000000000003F: 48 8B 8D 30 01 00  mov         rcx,qword ptr [rbp+130h]
                    00
  0000000000000046: 48 8D 79 2C        lea         rdi,[rcx+2Ch]
  000000000000004A: 48 8B F0           mov         rsi,rax
  000000000000004D: B9 2C 00 00 00     mov         ecx,2Ch
  0000000000000052: F3 A4              rep movs    byte ptr [rdi],byte ptr [rsi]
  0000000000000054: 33 C0              xor         eax,eax
  0000000000000056: 83 F8 01           cmp         eax,1
  0000000000000059: 74 5C              je          00000000000000B7
  000000000000005B: 48 8B 8D 40 01 00  mov         rcx,qword ptr [rbp+140h]
                    00
  0000000000000062: FF 15 00 00 00 00  call        qword ptr [__imp_?_W_Getdays@_Locinfo@std@@QEBAPEBGXZ]
  0000000000000068: 48 8B C8           mov         rcx,rax
  000000000000006B: E8 00 00 00 00     call        ?_Maklocwcs@std@@YAPEA_WPEB_W@Z
  0000000000000070: 48 8B 8D 30 01 00  mov         rcx,qword ptr [rbp+130h]
                    00
  0000000000000077: 48 89 41 10        mov         qword ptr [rcx+10h],rax
  000000000000007B: 48 8B 8D 40 01 00  mov         rcx,qword ptr [rbp+140h]
                    00
  0000000000000082: FF 15 00 00 00 00  call        qword ptr [__imp_?_W_Getmonths@_Locinfo@std@@QEBAPEBGXZ]
  0000000000000088: 48 8B C8           mov         rcx,rax
  000000000000008B: E8 00 00 00 00     call        ?_Maklocwcs@std@@YAPEA_WPEB_W@Z
  0000000000000090: 48 8B 8D 30 01 00  mov         rcx,qword ptr [rbp+130h]
                    00
  0000000000000097: 48 89 41 18        mov         qword ptr [rcx+18h],rax
  000000000000009B: 48 8D 0D 00 00 00  lea         rcx,[??_C@_1BK@MHIKGOKE@?$AA?3?$AAA?$AAM?$AA?3?$AAa?$AAm?$AA?3?$AAP?$AAM?$AA?3?$AAp?$AAm@]
                    00
  00000000000000A2: E8 00 00 00 00     call        ?_Maklocwcs@std@@YAPEA_WPEB_W@Z
  00000000000000A7: 48 8B 8D 30 01 00  mov         rcx,qword ptr [rbp+130h]
                    00
  00000000000000AE: 48 89 41 20        mov         qword ptr [rcx+20h],rax
  00000000000000B2: E9 A3 00 00 00     jmp         000000000000015A
  00000000000000B7: 48 8B 85 30 01 00  mov         rax,qword ptr [rbp+130h]
                    00
  00000000000000BE: 48 83 C0 2C        add         rax,2Ch
  00000000000000C2: 48 89 85 08 01 00  mov         qword ptr [rbp+108h],rax
                    00
  00000000000000C9: 48 8B 8D 40 01 00  mov         rcx,qword ptr [rbp+140h]
                    00
  00000000000000D0: FF 15 00 00 00 00  call        qword ptr [__imp_?_Getdays@_Locinfo@std@@QEBAPEBDXZ]
  00000000000000D6: 48 8B 8D 08 01 00  mov         rcx,qword ptr [rbp+108h]
                    00
  00000000000000DD: 4C 8B C1           mov         r8,rcx
  00000000000000E0: 33 D2              xor         edx,edx
  00000000000000E2: 48 8B C8           mov         rcx,rax
  00000000000000E5: E8 00 00 00 00     call        ??$_Maklocstr@D@std@@YAPEADPEBDPEADAEBU_Cvtvec@@@Z
  00000000000000EA: 48 8B 8D 30 01 00  mov         rcx,qword ptr [rbp+130h]
                    00
  00000000000000F1: 48 89 41 10        mov         qword ptr [rcx+10h],rax
  00000000000000F5: 48 8B 85 30 01 00  mov         rax,qword ptr [rbp+130h]
                    00
  00000000000000FC: 48 83 C0 2C        add         rax,2Ch
  0000000000000100: 48 89 85 08 01 00  mov         qword ptr [rbp+108h],rax
                    00
  0000000000000107: 48 8B 8D 40 01 00  mov         rcx,qword ptr [rbp+140h]
                    00
  000000000000010E: FF 15 00 00 00 00  call        qword ptr [__imp_?_Getmonths@_Locinfo@std@@QEBAPEBDXZ]
  0000000000000114: 48 8B 8D 08 01 00  mov         rcx,qword ptr [rbp+108h]
                    00
  000000000000011B: 4C 8B C1           mov         r8,rcx
  000000000000011E: 33 D2              xor         edx,edx
  0000000000000120: 48 8B C8           mov         rcx,rax
  0000000000000123: E8 00 00 00 00     call        ??$_Maklocstr@D@std@@YAPEADPEBDPEADAEBU_Cvtvec@@@Z
  0000000000000128: 48 8B 8D 30 01 00  mov         rcx,qword ptr [rbp+130h]
                    00
  000000000000012F: 48 89 41 18        mov         qword ptr [rcx+18h],rax
  0000000000000133: 48 8B 85 30 01 00  mov         rax,qword ptr [rbp+130h]
                    00
  000000000000013A: 48 83 C0 2C        add         rax,2Ch
  000000000000013E: 4C 8B C0           mov         r8,rax
  0000000000000141: 33 D2              xor         edx,edx
  0000000000000143: 48 8D 0D 00 00 00  lea         rcx,[??_C@_0N@LPFKKEBD@?3AM?3am?3PM?3pm@]
                    00
  000000000000014A: E8 00 00 00 00     call        ??$_Maklocstr@D@std@@YAPEADPEBDPEADAEBU_Cvtvec@@@Z
  000000000000014F: 48 8B 8D 30 01 00  mov         rcx,qword ptr [rbp+130h]
                    00
  0000000000000156: 48 89 41 20        mov         qword ptr [rcx+20h],rax
  000000000000015A: 48 8D A5 10 01 00  lea         rsp,[rbp+110h]
                    00
  0000000000000161: 5F                 pop         rdi
  0000000000000162: 5E                 pop         rsi
  0000000000000163: 5D                 pop         rbp
  0000000000000164: C3                 ret

??$_Getvals@_W@?$time_get@_WV?$istreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@IEAAX_WAEBV_Locinfo@1@@Z (protected: void __cdecl std::time_get<wchar_t,class std::istreambuf_iterator<wchar_t,struct std::char_traits<wchar_t> > >::_Getvals<wchar_t>(wchar_t,class std::_Locinfo const &)):
  0000000000000000: 4C 89 44 24 18     mov         qword ptr [rsp+18h],r8
  0000000000000005: 66 89 54 24 10     mov         word ptr [rsp+10h],dx
  000000000000000A: 48 89 4C 24 08     mov         qword ptr [rsp+8],rcx
  000000000000000F: 55                 push        rbp
  0000000000000010: 56                 push        rsi
  0000000000000011: 57                 push        rdi
  0000000000000012: 48 81 EC 30 01 00  sub         rsp,130h
                    00
  0000000000000019: 48 8D 6C 24 20     lea         rbp,[rsp+20h]
  000000000000001E: 48 8D 0D 00 00 00  lea         rcx,[__ECD77665_xloctime]
                    00
  0000000000000025: E8 00 00 00 00     call        __CheckForDebuggerJustMyCode
  000000000000002A: 90                 nop
  000000000000002B: 48 8D 95 C8 00 00  lea         rdx,[rbp+0C8h]
                    00
  0000000000000032: 48 8B 8D 40 01 00  mov         rcx,qword ptr [rbp+140h]
                    00
  0000000000000039: FF 15 00 00 00 00  call        qword ptr [__imp_?_Getcvt@_Locinfo@std@@QEBA?AU_Cvtvec@@XZ]
  000000000000003F: 48 8B 8D 30 01 00  mov         rcx,qword ptr [rbp+130h]
                    00
  0000000000000046: 48 8D 79 2C        lea         rdi,[rcx+2Ch]
  000000000000004A: 48 8B F0           mov         rsi,rax
  000000000000004D: B9 2C 00 00 00     mov         ecx,2Ch
  0000000000000052: F3 A4              rep movs    byte ptr [rdi],byte ptr [rsi]
  0000000000000054: 33 C0              xor         eax,eax
  0000000000000056: 83 F8 01           cmp         eax,1
  0000000000000059: 74 5C              je          00000000000000B7
  000000000000005B: 48 8B 8D 40 01 00  mov         rcx,qword ptr [rbp+140h]
                    00
  0000000000000062: FF 15 00 00 00 00  call        qword ptr [__imp_?_W_Getdays@_Locinfo@std@@QEBAPEBGXZ]
  0000000000000068: 48 8B C8           mov         rcx,rax
  000000000000006B: E8 00 00 00 00     call        ?_Maklocwcs@std@@YAPEA_WPEB_W@Z
  0000000000000070: 48 8B 8D 30 01 00  mov         rcx,qword ptr [rbp+130h]
                    00
  0000000000000077: 48 89 41 10        mov         qword ptr [rcx+10h],rax
  000000000000007B: 48 8B 8D 40 01 00  mov         rcx,qword ptr [rbp+140h]
                    00
  0000000000000082: FF 15 00 00 00 00  call        qword ptr [__imp_?_W_Getmonths@_Locinfo@std@@QEBAPEBGXZ]
  0000000000000088: 48 8B C8           mov         rcx,rax
  000000000000008B: E8 00 00 00 00     call        ?_Maklocwcs@std@@YAPEA_WPEB_W@Z
  0000000000000090: 48 8B 8D 30 01 00  mov         rcx,qword ptr [rbp+130h]
                    00
  0000000000000097: 48 89 41 18        mov         qword ptr [rcx+18h],rax
  000000000000009B: 48 8D 0D 00 00 00  lea         rcx,[??_C@_1BK@MHIKGOKE@?$AA?3?$AAA?$AAM?$AA?3?$AAa?$AAm?$AA?3?$AAP?$AAM?$AA?3?$AAp?$AAm@]
                    00
  00000000000000A2: E8 00 00 00 00     call        ?_Maklocwcs@std@@YAPEA_WPEB_W@Z
  00000000000000A7: 48 8B 8D 30 01 00  mov         rcx,qword ptr [rbp+130h]
                    00
  00000000000000AE: 48 89 41 20        mov         qword ptr [rcx+20h],rax
  00000000000000B2: E9 A3 00 00 00     jmp         000000000000015A
  00000000000000B7: 48 8B 85 30 01 00  mov         rax,qword ptr [rbp+130h]
                    00
  00000000000000BE: 48 83 C0 2C        add         rax,2Ch
  00000000000000C2: 48 89 85 08 01 00  mov         qword ptr [rbp+108h],rax
                    00
  00000000000000C9: 48 8B 8D 40 01 00  mov         rcx,qword ptr [rbp+140h]
                    00
  00000000000000D0: FF 15 00 00 00 00  call        qword ptr [__imp_?_Getdays@_Locinfo@std@@QEBAPEBDXZ]
  00000000000000D6: 48 8B 8D 08 01 00  mov         rcx,qword ptr [rbp+108h]
                    00
  00000000000000DD: 4C 8B C1           mov         r8,rcx
  00000000000000E0: 33 D2              xor         edx,edx
  00000000000000E2: 48 8B C8           mov         rcx,rax
  00000000000000E5: E8 00 00 00 00     call        ??$_Maklocstr@_W@std@@YAPEA_WPEBDPEA_WAEBU_Cvtvec@@@Z
  00000000000000EA: 48 8B 8D 30 01 00  mov         rcx,qword ptr [rbp+130h]
                    00
  00000000000000F1: 48 89 41 10        mov         qword ptr [rcx+10h],rax
  00000000000000F5: 48 8B 85 30 01 00  mov         rax,qword ptr [rbp+130h]
                    00
  00000000000000FC: 48 83 C0 2C        add         rax,2Ch
  0000000000000100: 48 89 85 08 01 00  mov         qword ptr [rbp+108h],rax
                    00
  0000000000000107: 48 8B 8D 40 01 00  mov         rcx,qword ptr [rbp+140h]
                    00
  000000000000010E: FF 15 00 00 00 00  call        qword ptr [__imp_?_Getmonths@_Locinfo@std@@QEBAPEBDXZ]
  0000000000000114: 48 8B 8D 08 01 00  mov         rcx,qword ptr [rbp+108h]
                    00
  000000000000011B: 4C 8B C1           mov         r8,rcx
  000000000000011E: 33 D2              xor         edx,edx
  0000000000000120: 48 8B C8           mov         rcx,rax
  0000000000000123: E8 00 00 00 00     call        ??$_Maklocstr@_W@std@@YAPEA_WPEBDPEA_WAEBU_Cvtvec@@@Z
  0000000000000128: 48 8B 8D 30 01 00  mov         rcx,qword ptr [rbp+130h]
                    00
  000000000000012F: 48 89 41 18        mov         qword ptr [rcx+18h],rax
  0000000000000133: 48 8B 85 30 01 00  mov         rax,qword ptr [rbp+130h]
                    00
  000000000000013A: 48 83 C0 2C        add         rax,2Ch
  000000000000013E: 4C 8B C0           mov         r8,rax
  0000000000000141: 33 D2              xor         edx,edx
  0000000000000143: 48 8D 0D 00 00 00  lea         rcx,[??_C@_0N@LPFKKEBD@?3AM?3am?3PM?3pm@]
                    00
  000000000000014A: E8 00 00 00 00     call        ??$_Maklocstr@_W@std@@YAPEA_WPEBDPEA_WAEBU_Cvtvec@@@Z
  000000000000014F: 48 8B 8D 30 01 00  mov         rcx,qword ptr [rbp+130h]
                    00
  0000000000000156: 48 89 41 20        mov         qword ptr [rcx+20h],rax
  000000000000015A: 48 8D A5 10 01 00  lea         rsp,[rbp+110h]
                    00
  0000000000000161: 5F                 pop         rdi
  0000000000000162: 5E                 pop         rsi
  0000000000000163: 5D                 pop         rbp
  0000000000000164: C3                 ret

??$_Maklocstr@D@std@@YAPEADPEBDPEADAEBU_Cvtvec@@@Z (char * __cdecl std::_Maklocstr<char>(char const *,char *,struct _Cvtvec const &)):
  0000000000000000: 4C 89 44 24 18     mov         qword ptr [rsp+18h],r8
  0000000000000005: 48 89 54 24 10     mov         qword ptr [rsp+10h],rdx
  000000000000000A: 48 89 4C 24 08     mov         qword ptr [rsp+8],rcx
  000000000000000F: 55                 push        rbp
  0000000000000010: 57                 push        rdi
  0000000000000011: 48 81 EC 58 01 00  sub         rsp,158h
                    00
  0000000000000018: 48 8D 6C 24 30     lea         rbp,[rsp+30h]
  000000000000001D: 48 8D 0D 00 00 00  lea         rcx,[__DDC55E48_xlocale]
                    00
  0000000000000024: E8 00 00 00 00     call        __CheckForDebuggerJustMyCode
  0000000000000029: 90                 nop
  000000000000002A: 48 8B 8D 40 01 00  mov         rcx,qword ptr [rbp+140h]
                    00
  0000000000000031: E8 00 00 00 00     call        strlen
  0000000000000036: 48 FF C0           inc         rax
  0000000000000039: 48 89 45 08        mov         qword ptr [rbp+8],rax
  000000000000003D: C7 44 24 20 03 02  mov         dword ptr [rsp+20h],203h
                    00 00
  0000000000000045: 4C 8D 0D 00 00 00  lea         r9,[??_C@_0GC@MLKAFPLI@C?3?2Program?5Files?2Microsoft?5Visu@]
                    00
  000000000000004C: 41 B8 02 00 00 00  mov         r8d,2
  0000000000000052: BA 01 00 00 00     mov         edx,1
  0000000000000057: 48 8B 4D 08        mov         rcx,qword ptr [rbp+8]
  000000000000005B: FF 15 00 00 00 00  call        qword ptr [__imp__calloc_dbg]
  0000000000000061: 48 89 45 28        mov         qword ptr [rbp+28h],rax
  0000000000000065: 48 83 7D 28 00     cmp         qword ptr [rbp+28h],0
  000000000000006A: 75 06              jne         0000000000000072
  000000000000006C: E8 00 00 00 00     call        ?_Xbad_alloc@std@@YAXXZ
  0000000000000071: 90                 nop
  0000000000000072: 48 8B 45 28        mov         rax,qword ptr [rbp+28h]
  0000000000000076: 48 89 45 48        mov         qword ptr [rbp+48h],rax
  000000000000007A: EB 27              jmp         00000000000000A3
  000000000000007C: 48 8B 45 08        mov         rax,qword ptr [rbp+8]
  0000000000000080: 48 FF C8           dec         rax
  0000000000000083: 48 89 45 08        mov         qword ptr [rbp+8],rax
  0000000000000087: 48 8B 45 48        mov         rax,qword ptr [rbp+48h]
  000000000000008B: 48 FF C0           inc         rax
  000000000000008E: 48 89 45 48        mov         qword ptr [rbp+48h],rax
  0000000000000092: 48 8B 85 40 01 00  mov         rax,qword ptr [rbp+140h]
                    00
  0000000000000099: 48 FF C0           inc         rax
  000000000000009C: 48 89 85 40 01 00  mov         qword ptr [rbp+140h],rax
                    00
  00000000000000A3: 48 83 7D 08 00     cmp         qword ptr [rbp+8],0
  00000000000000A8: 76 12              jbe         00000000000000BC
  00000000000000AA: 48 8B 45 48        mov         rax,qword ptr [rbp+48h]
  00000000000000AE: 48 8B 8D 40 01 00  mov         rcx,qword ptr [rbp+140h]
                    00
  00000000000000B5: 0F B6 09           movzx       ecx,byte ptr [rcx]
  00000000000000B8: 88 08              mov         byte ptr [rax],cl
  00000000000000BA: EB C0              jmp         000000000000007C
  00000000000000BC: 48 8B 45 28        mov         rax,qword ptr [rbp+28h]
  00000000000000C0: 48 8D A5 28 01 00  lea         rsp,[rbp+128h]
                    00
  00000000000000C7: 5F                 pop         rdi
  00000000000000C8: 5D                 pop         rbp
  00000000000000C9: C3                 ret

??$_Maklocstr@_W@std@@YAPEA_WPEBDPEA_WAEBU_Cvtvec@@@Z (wchar_t * __cdecl std::_Maklocstr<wchar_t>(char const *,wchar_t *,struct _Cvtvec const &)):
  0000000000000000: 4C 89 44 24 18     mov         qword ptr [rsp+18h],r8
  0000000000000005: 48 89 54 24 10     mov         qword ptr [rsp+10h],rdx
  000000000000000A: 48 89 4C 24 08     mov         qword ptr [rsp+8],rcx
  000000000000000F: 55                 push        rbp
  0000000000000010: 57                 push        rdi
  0000000000000011: 48 81 EC 38 02 00  sub         rsp,238h
                    00
  0000000000000018: 48 8D 6C 24 30     lea         rbp,[rsp+30h]
  000000000000001D: 48 8D 7C 24 30     lea         rdi,[rsp+30h]
  0000000000000022: B9 52 00 00 00     mov         ecx,52h
  0000000000000027: B8 CC CC CC CC     mov         eax,0CCCCCCCCh
  000000000000002C: F3 AB              rep stos    dword ptr [rdi]
  000000000000002E: 48 8B 8C 24 58 02  mov         rcx,qword ptr [rsp+258h]
                    00 00
  0000000000000036: 48 8B 05 00 00 00  mov         rax,qword ptr [__security_cookie]
                    00
  000000000000003D: 48 33 C5           xor         rax,rbp
  0000000000000040: 48 89 85 F8 01 00  mov         qword ptr [rbp+1F8h],rax
                    00
  0000000000000047: 48 8D 0D 00 00 00  lea         rcx,[__DDC55E48_xlocale]
                    00
  000000000000004E: E8 00 00 00 00     call        __CheckForDebuggerJustMyCode
  0000000000000053: 90                 nop
  0000000000000054: 48 8D 85 C8 00 00  lea         rax,[rbp+0C8h]
                    00
  000000000000005B: 48 8B F8           mov         rdi,rax
  000000000000005E: 33 C0              xor         eax,eax
  0000000000000060: B9 08 00 00 00     mov         ecx,8
  0000000000000065: F3 AA              rep stos    byte ptr [rdi]
  0000000000000067: 48 8B 8D 20 02 00  mov         rcx,qword ptr [rbp+220h]
                    00
  000000000000006E: E8 00 00 00 00     call        strlen
  0000000000000073: 48 FF C0           inc         rax
  0000000000000076: 48 89 45 28        mov         qword ptr [rbp+28h],rax
  000000000000007A: 48 8B 45 28        mov         rax,qword ptr [rbp+28h]
  000000000000007E: 48 89 45 08        mov         qword ptr [rbp+8],rax
  0000000000000082: 48 C7 45 48 00 00  mov         qword ptr [rbp+48h],0
                    00 00
  000000000000008A: 48 8B 85 20 02 00  mov         rax,qword ptr [rbp+220h]
                    00
  0000000000000091: 48 89 45 68        mov         qword ptr [rbp+68h],rax
  0000000000000095: EB 35              jmp         00000000000000CC
  0000000000000097: 48 63 85 84 00 00  movsxd      rax,dword ptr [rbp+84h]
                    00
  000000000000009E: 48 8B 4D 08        mov         rcx,qword ptr [rbp+8]
  00000000000000A2: 48 2B C8           sub         rcx,rax
  00000000000000A5: 48 8B C1           mov         rax,rcx
  00000000000000A8: 48 89 45 08        mov         qword ptr [rbp+8],rax
  00000000000000AC: 48 63 85 84 00 00  movsxd      rax,dword ptr [rbp+84h]
                    00
  00000000000000B3: 48 8B 4D 68        mov         rcx,qword ptr [rbp+68h]
  00000000000000B7: 48 03 C8           add         rcx,rax
  00000000000000BA: 48 8B C1           mov         rax,rcx
  00000000000000BD: 48 89 45 68        mov         qword ptr [rbp+68h],rax
  00000000000000C1: 48 8B 45 48        mov         rax,qword ptr [rbp+48h]
  00000000000000C5: 48 FF C0           inc         rax
  00000000000000C8: 48 89 45 48        mov         qword ptr [rbp+48h],rax
  00000000000000CC: 48 83 7D 08 00     cmp         qword ptr [rbp+8],0
  00000000000000D1: 76 3A              jbe         000000000000010D
  00000000000000D3: 48 8B 85 30 02 00  mov         rax,qword ptr [rbp+230h]
                    00
  00000000000000DA: 48 89 44 24 20     mov         qword ptr [rsp+20h],rax
  00000000000000DF: 4C 8D 8D C8 00 00  lea         r9,[rbp+0C8h]
                    00
  00000000000000E6: 4C 8B 45 08        mov         r8,qword ptr [rbp+8]
  00000000000000EA: 48 8B 55 68        mov         rdx,qword ptr [rbp+68h]
  00000000000000EE: 48 8D 8D A4 00 00  lea         rcx,[rbp+0A4h]
                    00
  00000000000000F5: E8 00 00 00 00     call        _Mbrtowc
  00000000000000FA: 89 85 84 00 00 00  mov         dword ptr [rbp+84h],eax
  0000000000000100: 83 BD 84 00 00 00  cmp         dword ptr [rbp+84h],0
                    00
  0000000000000107: 7F 02              jg          000000000000010B
  0000000000000109: EB 02              jmp         000000000000010D
  000000000000010B: EB 8A              jmp         0000000000000097
  000000000000010D: 48 8B 45 48        mov         rax,qword ptr [rbp+48h]
  0000000000000111: 48 FF C0           inc         rax
  0000000000000114: 48 89 45 48        mov         qword ptr [rbp+48h],rax
  0000000000000118: C7 44 24 20 24 02  mov         dword ptr [rsp+20h],224h
                    00 00
  0000000000000120: 4C 8D 0D 00 00 00  lea         r9,[??_C@_0GC@MLKAFPLI@C?3?2Program?5Files?2Microsoft?5Visu@]
                    00
  0000000000000127: 41 B8 02 00 00 00  mov         r8d,2
  000000000000012D: BA 02 00 00 00     mov         edx,2
  0000000000000132: 48 8B 4D 48        mov         rcx,qword ptr [rbp+48h]
  0000000000000136: FF 15 00 00 00 00  call        qword ptr [__imp__calloc_dbg]
  000000000000013C: 48 89 85 E8 00 00  mov         qword ptr [rbp+0E8h],rax
                    00
  0000000000000143: 48 83 BD E8 00 00  cmp         qword ptr [rbp+0E8h],0
                    00 00
  000000000000014B: 75 06              jne         0000000000000153
  000000000000014D: E8 00 00 00 00     call        ?_Xbad_alloc@std@@YAXXZ
  0000000000000152: 90                 nop
  0000000000000153: 48 8B 85 E8 00 00  mov         rax,qword ptr [rbp+0E8h]
                    00
  000000000000015A: 48 89 85 08 01 00  mov         qword ptr [rbp+108h],rax
                    00
  0000000000000161: 48 8D 85 28 01 00  lea         rax,[rbp+128h]
                    00
  0000000000000168: 48 8B F8           mov         rdi,rax
  000000000000016B: 33 C0              xor         eax,eax
  000000000000016D: B9 08 00 00 00     mov         ecx,8
  0000000000000172: F3 AA              rep stos    byte ptr [rdi]
  0000000000000174: EB 4D              jmp         00000000000001C3
  0000000000000176: 48 63 85 84 00 00  movsxd      rax,dword ptr [rbp+84h]
                    00
  000000000000017D: 48 8B 4D 08        mov         rcx,qword ptr [rbp+8]
  0000000000000181: 48 2B C8           sub         rcx,rax
  0000000000000184: 48 8B C1           mov         rax,rcx
  0000000000000187: 48 89 45 08        mov         qword ptr [rbp+8],rax
  000000000000018B: 48 63 85 84 00 00  movsxd      rax,dword ptr [rbp+84h]
                    00
  0000000000000192: 48 8B 8D 20 02 00  mov         rcx,qword ptr [rbp+220h]
                    00
  0000000000000199: 48 03 C8           add         rcx,rax
  000000000000019C: 48 8B C1           mov         rax,rcx
  000000000000019F: 48 89 85 20 02 00  mov         qword ptr [rbp+220h],rax
                    00
  00000000000001A6: 48 8B 45 48        mov         rax,qword ptr [rbp+48h]
  00000000000001AA: 48 FF C8           dec         rax
  00000000000001AD: 48 89 45 48        mov         qword ptr [rbp+48h],rax
  00000000000001B1: 48 8B 85 08 01 00  mov         rax,qword ptr [rbp+108h]
                    00
  00000000000001B8: 48 83 C0 02        add         rax,2
  00000000000001BC: 48 89 85 08 01 00  mov         qword ptr [rbp+108h],rax
                    00
  00000000000001C3: 48 83 7D 48 00     cmp         qword ptr [rbp+48h],0
  00000000000001C8: 76 40              jbe         000000000000020A
  00000000000001CA: 48 8B 85 30 02 00  mov         rax,qword ptr [rbp+230h]
                    00
  00000000000001D1: 48 89 44 24 20     mov         qword ptr [rsp+20h],rax
  00000000000001D6: 4C 8D 8D 28 01 00  lea         r9,[rbp+128h]
                    00
  00000000000001DD: 4C 8B 45 28        mov         r8,qword ptr [rbp+28h]
  00000000000001E1: 48 8B 95 20 02 00  mov         rdx,qword ptr [rbp+220h]
                    00
  00000000000001E8: 48 8B 8D 08 01 00  mov         rcx,qword ptr [rbp+108h]
                    00
  00000000000001EF: E8 00 00 00 00     call        _Mbrtowc
  00000000000001F4: 89 85 84 00 00 00  mov         dword ptr [rbp+84h],eax
  00000000000001FA: 83 BD 84 00 00 00  cmp         dword ptr [rbp+84h],0
                    00
  0000000000000201: 7F 02              jg          0000000000000205
  0000000000000203: EB 05              jmp         000000000000020A
  0000000000000205: E9 6C FF FF FF     jmp         0000000000000176
  000000000000020A: 33 C0              xor         eax,eax
  000000000000020C: 48 8B 8D 08 01 00  mov         rcx,qword ptr [rbp+108h]
                    00
  0000000000000213: 66 89 01           mov         word ptr [rcx],ax
  0000000000000216: 48 8B 85 E8 00 00  mov         rax,qword ptr [rbp+0E8h]
                    00
  000000000000021D: 48 8B F8           mov         rdi,rax
  0000000000000220: 48 8D 4D D0        lea         rcx,[rbp-30h]
  0000000000000224: 48 8D 15 00 00 00  lea         rdx,[??$_Maklocstr@_W@std@@YAPEA_WPEBDPEA_WAEBU_Cvtvec@@@Z$rtcFrameData]
                    00
  000000000000022B: E8 00 00 00 00     call        _RTC_CheckStackVars
  0000000000000230: 48 8B C7           mov         rax,rdi
  0000000000000233: 48 8B 8D F8 01 00  mov         rcx,qword ptr [rbp+1F8h]
                    00
  000000000000023A: 48 33 CD           xor         rcx,rbp
  000000000000023D: E8 00 00 00 00     call        __security_check_cookie
  0000000000000242: 48 8D A5 08 02 00  lea         rsp,[rbp+208h]
                    00
  0000000000000249: 5F                 pop         rdi
  000000000000024A: 5D                 pop         rbp
  000000000000024B: C3                 ret

??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z (struct std::_Container_proxy * __cdecl std::_Unfancy<struct std::_Container_proxy>(struct std::_Container_proxy *)):
  0000000000000000: 48 89 4C 24 08     mov         qword ptr [rsp+8],rcx
  0000000000000005: 55                 push        rbp
  0000000000000006: 57                 push        rdi
  0000000000000007: 48 81 EC E8 00 00  sub         rsp,0E8h
                    00
  000000000000000E: 48 8D 6C 24 20     lea         rbp,[rsp+20h]
  0000000000000013: 48 8D 0D 00 00 00  lea         rcx,[__7628ACE5_xmemory]
                    00
  000000000000001A: E8 00 00 00 00     call        __CheckForDebuggerJustMyCode
  000000000000001F: 90                 nop
  0000000000000020: 48 8B 85 E0 00 00  mov         rax,qword ptr [rbp+0E0h]
                    00
  0000000000000027: 48 8D A5 C8 00 00  lea         rsp,[rbp+0C8h]
                    00
  000000000000002E: 5F                 pop         rdi
  000000000000002F: 5D                 pop         rbp
  0000000000000030: C3                 ret

??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z (struct std::_Container_proxy * __cdecl std::addressof<struct std::_Container_proxy>(struct std::_Container_proxy &)):
  0000000000000000: 48 89 4C 24 08     mov         qword ptr [rsp+8],rcx
  0000000000000005: 55                 push        rbp
  0000000000000006: 57                 push        rdi
  0000000000000007: 48 81 EC E8 00 00  sub         rsp,0E8h
                    00
  000000000000000E: 48 8D 6C 24 20     lea         rbp,[rsp+20h]
  0000000000000013: 48 8D 0D 00 00 00  lea         rcx,[__8B3C4B90_type_traits]
                    00
  000000000000001A: E8 00 00 00 00     call        __CheckForDebuggerJustMyCode
  000000000000001F: 90                 nop
  0000000000000020: 48 8B 85 E0 00 00  mov         rax,qword ptr [rbp+0E0h]
                    00
  0000000000000027: 48 8D A5 C8 00 00  lea         rsp,[rbp+0C8h]
                    00
  000000000000002E: 5F                 pop         rdi
  000000000000002F: 5D                 pop         rbp
  0000000000000030: C3                 ret

??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z (class std::basic_ostream<char,struct std::char_traits<char> > & __cdecl std::endl<char,struct std::char_traits<char> >(class std::basic_ostream<char,struct std::char_traits<char> > &)):
  0000000000000000: 48 89 4C 24 08     mov         qword ptr [rsp+8],rcx
  0000000000000005: 55                 push        rbp
  0000000000000006: 57                 push        rdi
  0000000000000007: 48 81 EC E8 00 00  sub         rsp,0E8h
                    00
  000000000000000E: 48 8D 6C 24 20     lea         rbp,[rsp+20h]
  0000000000000013: 48 8D 0D 00 00 00  lea         rcx,[__CED5848C_ostream]
                    00
  000000000000001A: E8 00 00 00 00     call        __CheckForDebuggerJustMyCode
  000000000000001F: 90                 nop
  0000000000000020: 48 8B 85 E0 00 00  mov         rax,qword ptr [rbp+0E0h]
                    00
  0000000000000027: 48 8B 00           mov         rax,qword ptr [rax]
  000000000000002A: 48 63 40 04        movsxd      rax,dword ptr [rax+4]
  000000000000002E: 48 8B 8D E0 00 00  mov         rcx,qword ptr [rbp+0E0h]
                    00
  0000000000000035: 48 03 C8           add         rcx,rax
  0000000000000038: 48 8B C1           mov         rax,rcx
  000000000000003B: B2 0A              mov         dl,0Ah
  000000000000003D: 48 8B C8           mov         rcx,rax
  0000000000000040: FF 15 00 00 00 00  call        qword ptr [__imp_?widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADD@Z]
  0000000000000046: 0F B6 D0           movzx       edx,al
  0000000000000049: 48 8B 8D E0 00 00  mov         rcx,qword ptr [rbp+0E0h]
                    00
  0000000000000050: FF 15 00 00 00 00  call        qword ptr [__imp_?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z]
  0000000000000056: 90                 nop
  0000000000000057: 48 8B 8D E0 00 00  mov         rcx,qword ptr [rbp+0E0h]
                    00
  000000000000005E: FF 15 00 00 00 00  call        qword ptr [__imp_?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ]
  0000000000000064: 90                 nop
  0000000000000065: 48 8B 85 E0 00 00  mov         rax,qword ptr [rbp+0E0h]
                    00
  000000000000006C: 48 8D A5 C8 00 00  lea         rsp,[rbp+0C8h]
                    00
  0000000000000073: 5F                 pop         rdi
  0000000000000074: 5D                 pop         rbp
  0000000000000075: C3                 ret

??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z (struct std::_Container_proxy * __cdecl std::exchange<struct std::_Container_proxy *,std::nullptr_t>(struct std::_Container_proxy * &,std::nullptr_t &&)):
  0000000000000000: 48 89 54 24 10     mov         qword ptr [rsp+10h],rdx
  0000000000000005: 48 89 4C 24 08     mov         qword ptr [rsp+8],rcx
  000000000000000A: 55                 push        rbp
  000000000000000B: 57                 push        rdi
  000000000000000C: 48 81 EC 08 01 00  sub         rsp,108h
                    00
  0000000000000013: 48 8D 6C 24 20     lea         rbp,[rsp+20h]
  0000000000000018: 48 8D 0D 00 00 00  lea         rcx,[__1CBDCF26_utility]
                    00
  000000000000001F: E8 00 00 00 00     call        __CheckForDebuggerJustMyCode
  0000000000000024: 90                 nop
  0000000000000025: 48 8B 85 00 01 00  mov         rax,qword ptr [rbp+100h]
                    00
  000000000000002C: 48 8B 00           mov         rax,qword ptr [rax]
  000000000000002F: 48 89 45 08        mov         qword ptr [rbp+8],rax
  0000000000000033: 48 8B 85 00 01 00  mov         rax,qword ptr [rbp+100h]
                    00
  000000000000003A: 48 8B 8D 08 01 00  mov         rcx,qword ptr [rbp+108h]
                    00
  0000000000000041: 48 8B 09           mov         rcx,qword ptr [rcx]
  0000000000000044: 48 89 08           mov         qword ptr [rax],rcx
  0000000000000047: 48 8B 45 08        mov         rax,qword ptr [rbp+8]
  000000000000004B: 48 8D A5 E8 00 00  lea         rsp,[rbp+0E8h]
                    00
  0000000000000052: 5F                 pop         rdi
  0000000000000053: 5D                 pop         rbp
  0000000000000054: C3                 ret

??$exchange@PEAU_Iterator_base12@std@@$$T@std@@YAPEAU_Iterator_base12@0@AEAPEAU10@$$QEA$$T@Z (struct std::_Iterator_base12 * __cdecl std::exchange<struct std::_Iterator_base12 *,std::nullptr_t>(struct std::_Iterator_base12 * &,std::nullptr_t &&)):
  0000000000000000: 48 89 54 24 10     mov         qword ptr [rsp+10h],rdx
  0000000000000005: 48 89 4C 24 08     mov         qword ptr [rsp+8],rcx
  000000000000000A: 55                 push        rbp
  000000000000000B: 57                 push        rdi
  000000000000000C: 48 81 EC 08 01 00  sub         rsp,108h
                    00
  0000000000000013: 48 8D 6C 24 20     lea         rbp,[rsp+20h]
  0000000000000018: 48 8D 0D 00 00 00  lea         rcx,[__1CBDCF26_utility]
                    00
  000000000000001F: E8 00 00 00 00     call        __CheckForDebuggerJustMyCode
  0000000000000024: 90                 nop
  0000000000000025: 48 8B 85 00 01 00  mov         rax,qword ptr [rbp+100h]
                    00
  000000000000002C: 48 8B 00           mov         rax,qword ptr [rax]
  000000000000002F: 48 89 45 08        mov         qword ptr [rbp+8],rax
  0000000000000033: 48 8B 85 00 01 00  mov         rax,qword ptr [rbp+100h]
                    00
  000000000000003A: 48 8B 8D 08 01 00  mov         rcx,qword ptr [rbp+108h]
                    00
  0000000000000041: 48 8B 09           mov         rcx,qword ptr [rcx]
  0000000000000044: 48 89 08           mov         qword ptr [rax],rcx
  0000000000000047: 48 8B 45 08        mov         rax,qword ptr [rbp+8]
  000000000000004B: 48 8D A5 E8 00 00  lea         rsp,[rbp+0E8h]
                    00
  0000000000000052: 5F                 pop         rdi
  0000000000000053: 5D                 pop         rbp
  0000000000000054: C3                 ret

??$setfill@D@std@@YA?AU?$_Fillobj@D@0@D@Z (struct std::_Fillobj<char> __cdecl std::setfill<char>(char)):
  0000000000000000: 88 54 24 10        mov         byte ptr [rsp+10h],dl
  0000000000000004: 48 89 4C 24 08     mov         qword ptr [rsp+8],rcx
  0000000000000009: 55                 push        rbp
  000000000000000A: 57                 push        rdi
  000000000000000B: 48 81 EC E8 00 00  sub         rsp,0E8h
                    00
  0000000000000012: 48 8D 6C 24 20     lea         rbp,[rsp+20h]
  0000000000000017: 48 8D 0D 00 00 00  lea         rcx,[__51C777E4_iomanip]
                    00
  000000000000001E: E8 00 00 00 00     call        __CheckForDebuggerJustMyCode
  0000000000000023: 90                 nop
  0000000000000024: 0F B6 95 E8 00 00  movzx       edx,byte ptr [rbp+0E8h]
                    00
  000000000000002B: 48 8B 8D E0 00 00  mov         rcx,qword ptr [rbp+0E0h]
                    00
  0000000000000032: E8 00 00 00 00     call        ??0?$_Fillobj@D@std@@QEAA@D@Z
  0000000000000037: 90                 nop
  0000000000000038: 48 8B 85 E0 00 00  mov         rax,qword ptr [rbp+0E0h]
                    00
  000000000000003F: 48 8D A5 C8 00 00  lea         rsp,[rbp+0C8h]
                    00
  0000000000000046: 5F                 pop         rdi
  0000000000000047: 5D                 pop         rbp
  0000000000000048: C3                 ret

??0?$Event@$$V@@QEAA@XZ (public: __cdecl Event<>::Event<>(void)):
  0000000000000000: 48 89 4C 24 08     mov         qword ptr [rsp+8],rcx
  0000000000000005: 55                 push        rbp
  0000000000000006: 57                 push        rdi
  0000000000000007: 48 81 EC E8 00 00  sub         rsp,0E8h
                    00
  000000000000000E: 48 8D 6C 24 20     lea         rbp,[rsp+20h]
  0000000000000013: 48 8B 85 E0 00 00  mov         rax,qword ptr [rbp+0E0h]
                    00
  000000000000001A: 48 8B C8           mov         rcx,rax
  000000000000001D: E8 00 00 00 00     call        ??0?$vector@PEAV?$Observer@$$V@@V?$allocator@PEAV?$Observer@$$V@@@std@@@std@@QEAA@XZ
  0000000000000022: 90                 nop
  0000000000000023: 48 8B 85 E0 00 00  mov         rax,qword ptr [rbp+0E0h]
                    00
  000000000000002A: 48 8D A5 C8 00 00  lea         rsp,[rbp+0C8h]
                    00
  0000000000000031: 5F                 pop         rdi
  0000000000000032: 5D                 pop         rbp
  0000000000000033: C3                 ret

??0?$_Fillobj@D@std@@QEAA@D@Z (public: __cdecl std::_Fillobj<char>::_Fillobj<char>(char)):
  0000000000000000: 88 54 24 10        mov         byte ptr [rsp+10h],dl
  0000000000000004: 48 89 4C 24 08     mov         qword ptr [rsp+8],rcx
  0000000000000009: 55                 push        rbp
  000000000000000A: 57                 push        rdi
  000000000000000B: 48 81 EC E8 00 00  sub         rsp,0E8h
                    00
  0000000000000012: 48 8D 6C 24 20     lea         rbp,[rsp+20h]
  0000000000000017: 48 8D 0D 00 00 00  lea         rcx,[__51C777E4_iomanip]
                    00
  000000000000001E: E8 00 00 00 00     call        __CheckForDebuggerJustMyCode
  0000000000000023: 90                 nop
  0000000000000024: 48 8B 85 E0 00 00  mov         rax,qword ptr [rbp+0E0h]
                    00
  000000000000002B: 0F B6 8D E8 00 00  movzx       ecx,byte ptr [rbp+0E8h]
                    00
  0000000000000032: 88 08              mov         byte ptr [rax],cl
  0000000000000034: 48 8B 85 E0 00 00  mov         rax,qword ptr [rbp+0E0h]
                    00
  000000000000003B: 48 8D A5 C8 00 00  lea         rsp,[rbp+0C8h]
                    00
  0000000000000042: 5F                 pop         rdi
  0000000000000043: 5D                 pop         rbp
  0000000000000044: C3                 ret

??0?$_Vector_val@U?$_Simple_types@PEAV?$Observer@$$V@@@std@@@std@@QEAA@XZ (public: __cdecl std::_Vector_val<struct std::_Simple_types<class Observer<> *> >::_Vector_val<struct std::_Simple_types<class Observer<> *> >(void)):
  0000000000000000: 48 89 4C 24 08     mov         qword ptr [rsp+8],rcx
  0000000000000005: 55                 push        rbp
  0000000000000006: 57                 push        rdi
  0000000000000007: 48 81 EC E8 00 00  sub         rsp,0E8h
                    00
  000000000000000E: 48 8D 6C 24 20     lea         rbp,[rsp+20h]
  0000000000000013: 48 8D 0D 00 00 00  lea         rcx,[__C80B98AB_vector]
                    00
  000000000000001A: E8 00 00 00 00     call        __CheckForDebuggerJustMyCode
  000000000000001F: 90                 nop
  0000000000000020: 48 8B 8D E0 00 00  mov         rcx,qword ptr [rbp+0E0h]
                    00
  0000000000000027: E8 00 00 00 00     call        ??0_Container_base12@std@@QEAA@XZ
  000000000000002C: 90                 nop
  000000000000002D: 48 8B 85 E0 00 00  mov         rax,qword ptr [rbp+0E0h]
                    00
  0000000000000034: 48 C7 40 08 00 00  mov         qword ptr [rax+8],0
                    00 00
  000000000000003C: 48 8B 85 E0 00 00  mov         rax,qword ptr [rbp+0E0h]
                    00
  0000000000000043: 48 C7 40 10 00 00  mov         qword ptr [rax+10h],0
                    00 00
  000000000000004B: 48 8B 85 E0 00 00  mov         rax,qword ptr [rbp+0E0h]
                    00
  0000000000000052: 48 C7 40 18 00 00  mov         qword ptr [rax+18h],0
                    00 00
  000000000000005A: 48 8B 85 E0 00 00  mov         rax,qword ptr [rbp+0E0h]
                    00
  0000000000000061: 48 8D A5 C8 00 00  lea         rsp,[rbp+0C8h]
                    00
  0000000000000068: 5F                 pop         rdi
  0000000000000069: 5D                 pop         rbp
  000000000000006A: C3                 ret

??0?$allocator@PEAV?$Observer@$$V@@@std@@QEAA@XZ (public: __cdecl std::allocator<class Observer<> *>::allocator<class Observer<> *>(void)):
  0000000000000000: 48 89 4C 24 08     mov         qword ptr [rsp+8],rcx
  0000000000000005: 55                 push        rbp
  0000000000000006: 57                 push        rdi
  0000000000000007: 48 81 EC E8 00 00  sub         rsp,0E8h
                    00
  000000000000000E: 48 8D 6C 24 20     lea         rbp,[rsp+20h]
  0000000000000013: 48 8D 0D 00 00 00  lea         rcx,[__7628ACE5_xmemory]
                    00
  000000000000001A: E8 00 00 00 00     call        __CheckForDebuggerJustMyCode
  000000000000001F: 90                 nop
  0000000000000020: 48 8B 85 E0 00 00  mov         rax,qword ptr [rbp+0E0h]
                    00
  0000000000000027: 48 8D A5 C8 00 00  lea         rsp,[rbp+0C8h]
                    00
  000000000000002E: 5F                 pop         rdi
  000000000000002F: 5D                 pop         rbp
  0000000000000030: C3                 ret

??0?$vector@PEAV?$Observer@$$V@@V?$allocator@PEAV?$Observer@$$V@@@std@@@std@@QEAA@XZ (public: __cdecl std::vector<class Observer<> *,class std::allocator<class Observer<> *> >::vector<class Observer<> *,class std::allocator<class Observer<> *> >(void)):
  0000000000000000: 48 89 4C 24 08     mov         qword ptr [rsp+8],rcx
  0000000000000005: 55                 push        rbp
  0000000000000006: 57                 push        rdi
  0000000000000007: 48 81 EC 28 01 00  sub         rsp,128h
                    00
  000000000000000E: 48 8D 6C 24 20     lea         rbp,[rsp+20h]
  0000000000000013: 48 8D 0D 00 00 00  lea         rcx,[__C80B98AB_vector]
                    00
  000000000000001A: E8 00 00 00 00     call        __CheckForDebuggerJustMyCode
  000000000000001F: 90                 nop
  0000000000000020: 48 8B 85 20 01 00  mov         rax,qword ptr [rbp+120h]
                    00
  0000000000000027: 0F B6 95 C4 00 00  movzx       edx,byte ptr [rbp+0C4h]
                    00
  000000000000002E: 48 8B C8           mov         rcx,rax
  0000000000000031: E8 00 00 00 00     call        ??$?0$$V@?$_Compressed_pair@V?$allocator@PEAV?$Observer@$$V@@@std@@V?$_Vector_val@U?$_Simple_types@PEAV?$Observer@$$V@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
  0000000000000036: 90                 nop
  0000000000000037: 48 8B 8D 20 01 00  mov         rcx,qword ptr [rbp+120h]
                    00
  000000000000003E: E8 00 00 00 00     call        ?_Getal@?$vector@PEAV?$Observer@$$V@@V?$allocator@PEAV?$Observer@$$V@@@std@@@std@@AEAAAEAV?$allocator@PEAV?$Observer@$$V@@@2@XZ
  0000000000000043: 48 8B D0           mov         rdx,rax
  0000000000000046: 48 8D 8D E4 00 00  lea         rcx,[rbp+0E4h]
                    00
  000000000000004D: E8 00 00 00 00     call        ??$?0PEAV?$Observer@$$V@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@PEAV?$Observer@$$V@@@1@@Z
  0000000000000052: 48 8B 8D 20 01 00  mov         rcx,qword ptr [rbp+120h]
                    00
  0000000000000059: 48 8B D0           mov         rdx,rax
  000000000000005C: E8 00 00 00 00     call        ??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z
  0000000000000061: 90                 nop
  0000000000000062: 48 8B 85 20 01 00  mov         rax,qword ptr [rbp+120h]
                    00
  0000000000000069: 48 8D A5 08 01 00  lea         rsp,[rbp+108h]
                    00
  0000000000000070: 5F                 pop         rdi
  0000000000000071: 5D                 pop         rbp
  0000000000000072: C3                 ret

??0_Container_base12@std@@QEAA@XZ (public: __cdecl std::_Container_base12::_Container_base12(void)):
  0000000000000000: 48 89 4C 24 08     mov         qword ptr [rsp+8],rcx
  0000000000000005: 55                 push        rbp
  0000000000000006: 57                 push        rdi
  0000000000000007: 48 81 EC E8 00 00  sub         rsp,0E8h
                    00
  000000000000000E: 48 8D 6C 24 20     lea         rbp,[rsp+20h]
  0000000000000013: 48 8D 0D 00 00 00  lea         rcx,[__7628ACE5_xmemory]
                    00
  000000000000001A: E8 00 00 00 00     call        __CheckForDebuggerJustMyCode
  000000000000001F: 90                 nop
  0000000000000020: 48 8B 85 E0 00 00  mov         rax,qword ptr [rbp+0E0h]
                    00
  0000000000000027: 48 C7 00 00 00 00  mov         qword ptr [rax],0
                    00
  000000000000002E: 48 8B 85 E0 00 00  mov         rax,qword ptr [rbp+0E0h]
                    00
  0000000000000035: 48 8D A5 C8 00 00  lea         rsp,[rbp+0C8h]
                    00
  000000000000003C: 5F                 pop         rdi
  000000000000003D: 5D                 pop         rbp
  000000000000003E: C3                 ret

??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z (public: __cdecl std::_Container_proxy::_Container_proxy(struct std::_Container_base12 *)):
  0000000000000000: 48 89 54 24 10     mov         qword ptr [rsp+10h],rdx
  0000000000000005: 48 89 4C 24 08     mov         qword ptr [rsp+8],rcx
  000000000000000A: 55                 push        rbp
  000000000000000B: 57                 push        rdi
  000000000000000C: 48 81 EC E8 00 00  sub         rsp,0E8h
                    00
  0000000000000013: 48 8D 6C 24 20     lea         rbp,[rsp+20h]
  0000000000000018: 48 8D 0D 00 00 00  lea         rcx,[__7628ACE5_xmemory]
                    00
  000000000000001F: E8 00 00 00 00     call        __CheckForDebuggerJustMyCode
  0000000000000024: 90                 nop
  0000000000000025: 48 8B 85 E0 00 00  mov         rax,qword ptr [rbp+0E0h]
                    00
  000000000000002C: 48 8B 8D E8 00 00  mov         rcx,qword ptr [rbp+0E8h]
                    00
  0000000000000033: 48 89 08           mov         qword ptr [rax],rcx
  0000000000000036: 48 8B 85 E0 00 00  mov         rax,qword ptr [rbp+0E0h]
                    00
  000000000000003D: 48 C7 40 08 00 00  mov         qword ptr [rax+8],0
                    00 00
  0000000000000045: 48 8B 85 E0 00 00  mov         rax,qword ptr [rbp+0E0h]
                    00
  000000000000004C: 48 8D A5 C8 00 00  lea         rsp,[rbp+0C8h]
                    00
  0000000000000053: 5F                 pop         rdi
  0000000000000054: 5D                 pop         rbp
  0000000000000055: C3                 ret

??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z (public: __cdecl std::basic_ostream<char,struct std::char_traits<char> >::_Sentry_base::_Sentry_base(class std::basic_ostream<char,struct std::char_traits<char> > &)):
  0000000000000000: 48 89 54 24 10     mov         qword ptr [rsp+10h],rdx
  0000000000000005: 48 89 4C 24 08     mov         qword ptr [rsp+8],rcx
  000000000000000A: 55                 push        rbp
  000000000000000B: 57                 push        rdi
  000000000000000C: 48 81 EC 08 01 00  sub         rsp,108h
                    00
  0000000000000013: 48 8D 6C 24 20     lea         rbp,[rsp+20h]
  0000000000000018: 48 8D 0D 00 00 00  lea         rcx,[__CED5848C_ostream]
                    00
  000000000000001F: E8 00 00 00 00     call        __CheckForDebuggerJustMyCode
  0000000000000024: 90                 nop
  0000000000000025: 48 8B 85 00 01 00  mov         rax,qword ptr [rbp+100h]
                    00
  000000000000002C: 48 8B 8D 08 01 00  mov         rcx,qword ptr [rbp+108h]
                    00
  0000000000000033: 48 89 08           mov         qword ptr [rax],rcx
  0000000000000036: 48 8B 85 00 01 00  mov         rax,qword ptr [rbp+100h]
                    00
  000000000000003D: 48 8B 00           mov         rax,qword ptr [rax]
  0000000000000040: 48 89 85 D8 00 00  mov         qword ptr [rbp+0D8h],rax
                    00
  0000000000000047: 48 8B 85 D8 00 00  mov         rax,qword ptr [rbp+0D8h]
                    00
  000000000000004E: 48 8B 00           mov         rax,qword ptr [rax]
  0000000000000051: 48 63 40 04        movsxd      rax,dword ptr [rax+4]
  0000000000000055: 48 8B 8D D8 00 00  mov         rcx,qword ptr [rbp+0D8h]
                    00
  000000000000005C: 48 03 C8           add         rcx,rax
  000000000000005F: 48 8B C1           mov         rax,rcx
  0000000000000062: 48 8B C8           mov         rcx,rax
  0000000000000065: FF 15 00 00 00 00  call        qword ptr [__imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ]
  000000000000006B: 48 89 45 08        mov         qword ptr [rbp+8],rax
  000000000000006F: 48 83 7D 08 00     cmp         qword ptr [rbp+8],0
  0000000000000074: 74 0F              je          0000000000000085
  0000000000000076: 48 8B 45 08        mov         rax,qword ptr [rbp+8]
  000000000000007A: 48 8B 00           mov         rax,qword ptr [rax]
  000000000000007D: 48 8B 4D 08        mov         rcx,qword ptr [rbp+8]
  0000000000000081: FF 50 08           call        qword ptr [rax+8]
  0000000000000084: 90                 nop
  0000000000000085: 48 8B 85 00 01 00  mov         rax,qword ptr [rbp+100h]
                    00
  000000000000008C: 48 8D A5 E8 00 00  lea         rsp,[rbp+0E8h]
                    00
  0000000000000093: 5F                 pop         rdi
  0000000000000094: 5D                 pop         rbp
  0000000000000095: C3                 ret

??0bad_alloc@std@@AEAA@QEBD@Z (private: __cdecl std::bad_alloc::bad_alloc(char const * const)):
  0000000000000000: 48 89 54 24 10     mov         qword ptr [rsp+10h],rdx
  0000000000000005: 48 89 4C 24 08     mov         qword ptr [rsp+8],rcx
  000000000000000A: 55                 push        rbp
  000000000000000B: 57                 push        rdi
  000000000000000C: 48 81 EC E8 00 00  sub         rsp,0E8h
                    00
  0000000000000013: 48 8D 6C 24 20     lea         rbp,[rsp+20h]
  0000000000000018: 48 8D 0D 00 00 00  lea         rcx,[__EE920070_vcruntime_exception@h]
                    00
  000000000000001F: E8 00 00 00 00     call        __CheckForDebuggerJustMyCode
  0000000000000024: 90                 nop
  0000000000000025: 41 B8 01 00 00 00  mov         r8d,1
  000000000000002B: 48 8B 95 E8 00 00  mov         rdx,qword ptr [rbp+0E8h]
                    00
  0000000000000032: 48 8B 8D E0 00 00  mov         rcx,qword ptr [rbp+0E0h]
                    00
  0000000000000039: E8 00 00 00 00     call        ??0exception@std@@QEAA@QEBDH@Z
  000000000000003E: 90                 nop
  000000000000003F: 48 8B 85 E0 00 00  mov         rax,qword ptr [rbp+0E0h]
                    00
  0000000000000046: 48 8D 0D 00 00 00  lea         rcx,[??_7bad_alloc@std@@6B@]
                    00
  000000000000004D: 48 89 08           mov         qword ptr [rax],rcx
  0000000000000050: 48 8B 85 E0 00 00  mov         rax,qword ptr [rbp+0E0h]
                    00
  0000000000000057: 48 8D A5 C8 00 00  lea         rsp,[rbp+0C8h]
                    00
  000000000000005E: 5F                 pop         rdi
  000000000000005F: 5D                 pop         rbp
  0000000000000060: C3                 ret

??0bad_alloc@std@@QEAA@AEBV01@@Z (public: __cdecl std::bad_alloc::bad_alloc(class std::bad_alloc const &)):
  0000000000000000: 48 89 54 24 10     mov         qword ptr [rsp+10h],rdx
  0000000000000005: 48 89 4C 24 08     mov         qword ptr [rsp+8],rcx
  000000000000000A: 55                 push        rbp
  000000000000000B: 57                 push        rdi
  000000000000000C: 48 81 EC E8 00 00  sub         rsp,0E8h
                    00
  0000000000000013: 48 8D 6C 24 20     lea         rbp,[rsp+20h]
  0000000000000018: 48 8B 95 E8 00 00  mov         rdx,qword ptr [rbp+0E8h]
                    00
  000000000000001F: 48 8B 8D E0 00 00  mov         rcx,qword ptr [rbp+0E0h]
                    00
  0000000000000026: E8 00 00 00 00     call        ??0exception@std@@QEAA@AEBV01@@Z
  000000000000002B: 90                 nop
  000000000000002C: 48 8B 85 E0 00 00  mov         rax,qword ptr [rbp+0E0h]
                    00
  0000000000000033: 48 8D 0D 00 00 00  lea         rcx,[??_7bad_alloc@std@@6B@]
                    00
  000000000000003A: 48 89 08           mov         qword ptr [rax],rcx
  000000000000003D: 48 8B 85 E0 00 00  mov         rax,qword ptr [rbp+0E0h]
                    00
  0000000000000044: 48 8D A5 C8 00 00  lea         rsp,[rbp+0C8h]
                    00
  000000000000004B: 5F                 pop         rdi
  000000000000004C: 5D                 pop         rbp
  000000000000004D: C3                 ret

??0bad_array_new_length@std@@QEAA@AEBV01@@Z (public: __cdecl std::bad_array_new_length::bad_array_new_length(class std::bad_array_new_length const &)):
  0000000000000000: 48 89 54 24 10     mov         qword ptr [rsp+10h],rdx
  0000000000000005: 48 89 4C 24 08     mov         qword ptr [rsp+8],rcx
  000000000000000A: 55                 push        rbp
  000000000000000B: 57                 push        rdi
  000000000000000C: 48 81 EC E8 00 00  sub         rsp,0E8h
                    00
  0000000000000013: 48 8D 6C 24 20     lea         rbp,[rsp+20h]
  0000000000000018: 48 8B 95 E8 00 00  mov         rdx,qword ptr [rbp+0E8h]
                    00
  000000000000001F: 48 8B 8D E0 00 00  mov         rcx,qword ptr [rbp+0E0h]
                    00
  0000000000000026: E8 00 00 00 00     call        ??0bad_alloc@std@@QEAA@AEBV01@@Z
  000000000000002B: 90                 nop
  000000000000002C: 48 8B 85 E0 00 00  mov         rax,qword ptr [rbp+0E0h]
                    00
  0000000000000033: 48 8D 0D 00 00 00  lea         rcx,[??_7bad_array_new_length@std@@6B@]
                    00
  000000000000003A: 48 89 08           mov         qword ptr [rax],rcx
  000000000000003D: 48 8B 85 E0 00 00  mov         rax,qword ptr [rbp+0E0h]
                    00
  0000000000000044: 48 8D A5 C8 00 00  lea         rsp,[rbp+0C8h]
                    00
  000000000000004B: 5F                 pop         rdi
  000000000000004C: 5D                 pop         rbp
  000000000000004D: C3                 ret

??0bad_array_new_length@std@@QEAA@XZ (public: __cdecl std::bad_array_new_length::bad_array_new_length(void)):
  0000000000000000: 48 89 4C 24 08     mov         qword ptr [rsp+8],rcx
  0000000000000005: 55                 push        rbp
  0000000000000006: 57                 push        rdi
  0000000000000007: 48 81 EC E8 00 00  sub         rsp,0E8h
                    00
  000000000000000E: 48 8D 6C 24 20     lea         rbp,[rsp+20h]
  0000000000000013: 48 8D 0D 00 00 00  lea         rcx,[__EE920070_vcruntime_exception@h]
                    00
  000000000000001A: E8 00 00 00 00     call        __CheckForDebuggerJustMyCode
  000000000000001F: 90                 nop
  0000000000000020: 48 8D 15 00 00 00  lea         rdx,[??_C@_0BF@KINCDENJ@bad?5array?5new?5length@]
                    00
  0000000000000027: 48 8B 8D E0 00 00  mov         rcx,qword ptr [rbp+0E0h]
                    00
  000000000000002E: E8 00 00 00 00     call        ??0bad_alloc@std@@AEAA@QEBD@Z
  0000000000000033: 90                 nop
  0000000000000034: 48 8B 85 E0 00 00  mov         rax,qword ptr [rbp+0E0h]
                    00
  000000000000003B: 48 8D 0D 00 00 00  lea         rcx,[??_7bad_array_new_length@std@@6B@]
                    00
  0000000000000042: 48 89 08           mov         qword ptr [rax],rcx
  0000000000000045: 48 8B 85 E0 00 00  mov         rax,qword ptr [rbp+0E0h]
                    00
  000000000000004C: 48 8D A5 C8 00 00  lea         rsp,[rbp+0C8h]
                    00
  0000000000000053: 5F                 pop         rdi
  0000000000000054: 5D                 pop         rbp
  0000000000000055: C3                 ret

??0exception@std@@QEAA@AEBV01@@Z (public: __cdecl std::exception::exception(class std::exception const &)):
  0000000000000000: 48 89 54 24 10     mov         qword ptr [rsp+10h],rdx
  0000000000000005: 48 89 4C 24 08     mov         qword ptr [rsp+8],rcx
  000000000000000A: 55                 push        rbp
  000000000000000B: 57                 push        rdi
  000000000000000C: 48 81 EC E8 00 00  sub         rsp,0E8h
                    00
  0000000000000013: 48 8D 6C 24 20     lea         rbp,[rsp+20h]
  0000000000000018: 48 8D 0D 00 00 00  lea         rcx,[__EE920070_vcruntime_exception@h]
                    00
  000000000000001F: E8 00 00 00 00     call        __CheckForDebuggerJustMyCode
  0000000000000024: 90                 nop
  0000000000000025: 48 8B 85 E0 00 00  mov         rax,qword ptr [rbp+0E0h]
                    00
  000000000000002C: 48 8D 0D 00 00 00  lea         rcx,[??_7exception@std@@6B@]
                    00
  0000000000000033: 48 89 08           mov         qword ptr [rax],rcx
  0000000000000036: 48 8B 85 E0 00 00  mov         rax,qword ptr [rbp+0E0h]
                    00
  000000000000003D: 48 83 C0 08        add         rax,8
  0000000000000041: 48 8B F8           mov         rdi,rax
  0000000000000044: 33 C0              xor         eax,eax
  0000000000000046: B9 10 00 00 00     mov         ecx,10h
  000000000000004B: F3 AA              rep stos    byte ptr [rdi]
  000000000000004D: 48 8B 85 E0 00 00  mov         rax,qword ptr [rbp+0E0h]
                    00
  0000000000000054: 48 83 C0 08        add         rax,8
  0000000000000058: 48 8B 8D E8 00 00  mov         rcx,qword ptr [rbp+0E8h]
                    00
  000000000000005F: 48 83 C1 08        add         rcx,8
  0000000000000063: 48 8B D0           mov         rdx,rax
  0000000000000066: E8 00 00 00 00     call        __std_exception_copy
  000000000000006B: 90                 nop
  000000000000006C: 48 8B 85 E0 00 00  mov         rax,qword ptr [rbp+0E0h]
                    00
  0000000000000073: 48 8D A5 C8 00 00  lea         rsp,[rbp+0C8h]
                    00
  000000000000007A: 5F                 pop         rdi
  000000000000007B: 5D                 pop         rbp
  000000000000007C: C3                 ret

??0exception@std@@QEAA@QEBDH@Z (public: __cdecl std::exception::exception(char const * const,int)):
  0000000000000000: 44 89 44 24 18     mov         dword ptr [rsp+18h],r8d
  0000000000000005: 48 89 54 24 10     mov         qword ptr [rsp+10h],rdx
  000000000000000A: 48 89 4C 24 08     mov         qword ptr [rsp+8],rcx
  000000000000000F: 55                 push        rbp
  0000000000000010: 57                 push        rdi
  0000000000000011: 48 81 EC E8 00 00  sub         rsp,0E8h
                    00
  0000000000000018: 48 8D 6C 24 20     lea         rbp,[rsp+20h]
  000000000000001D: 48 8D 0D 00 00 00  lea         rcx,[__EE920070_vcruntime_exception@h]
                    00
  0000000000000024: E8 00 00 00 00     call        __CheckForDebuggerJustMyCode
  0000000000000029: 90                 nop
  000000000000002A: 48 8B 85 E0 00 00  mov         rax,qword ptr [rbp+0E0h]
                    00
  0000000000000031: 48 8D 0D 00 00 00  lea         rcx,[??_7exception@std@@6B@]
                    00
  0000000000000038: 48 89 08           mov         qword ptr [rax],rcx
  000000000000003B: 48 8B 85 E0 00 00  mov         rax,qword ptr [rbp+0E0h]
                    00
  0000000000000042: 48 83 C0 08        add         rax,8
  0000000000000046: 48 8B F8           mov         rdi,rax
  0000000000000049: 33 C0              xor         eax,eax
  000000000000004B: B9 10 00 00 00     mov         ecx,10h
  0000000000000050: F3 AA              rep stos    byte ptr [rdi]
  0000000000000052: 48 8B 85 E0 00 00  mov         rax,qword ptr [rbp+0E0h]
                    00
  0000000000000059: 48 8B 8D E8 00 00  mov         rcx,qword ptr [rbp+0E8h]
                    00
  0000000000000060: 48 89 48 08        mov         qword ptr [rax+8],rcx
  0000000000000064: 48 8B 85 E0 00 00  mov         rax,qword ptr [rbp+0E0h]
                    00
  000000000000006B: 48 8D A5 C8 00 00  lea         rsp,[rbp+0C8h]
                    00
  0000000000000072: 5F                 pop         rdi
  0000000000000073: 5D                 pop         rbp
  0000000000000074: C3                 ret

??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z (public: __cdecl std::basic_ostream<char,struct std::char_traits<char> >::sentry::sentry(class std::basic_ostream<char,struct std::char_traits<char> > &)):
  0000000000000000: 48 89 54 24 10     mov         qword ptr [rsp+10h],rdx
  0000000000000005: 48 89 4C 24 08     mov         qword ptr [rsp+8],rcx
  000000000000000A: 55                 push        rbp
  000000000000000B: 57                 push        rdi
  000000000000000C: 48 81 EC 08 01 00  sub         rsp,108h
                    00
  0000000000000013: 48 8D 6C 24 20     lea         rbp,[rsp+20h]
  0000000000000018: 48 8D 0D 00 00 00  lea         rcx,[__CED5848C_ostream]
                    00
  000000000000001F: E8 00 00 00 00     call        __CheckForDebuggerJustMyCode
  0000000000000024: 90                 nop
  0000000000000025: 48 8B 95 08 01 00  mov         rdx,qword ptr [rbp+108h]
                    00
  000000000000002C: 48 8B 8D 00 01 00  mov         rcx,qword ptr [rbp+100h]
                    00
  0000000000000033: E8 00 00 00 00     call        ??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z
  0000000000000038: 90                 nop
  0000000000000039: 48 8B 85 08 01 00  mov         rax,qword ptr [rbp+108h]
                    00
  0000000000000040: 48 8B 00           mov         rax,qword ptr [rax]
  0000000000000043: 48 63 40 04        movsxd      rax,dword ptr [rax+4]
  0000000000000047: 48 8B 8D 08 01 00  mov         rcx,qword ptr [rbp+108h]
                    00
  000000000000004E: 48 03 C8           add         rcx,rax
  0000000000000051: 48 8B C1           mov         rax,rcx
  0000000000000054: 48 8B C8           mov         rcx,rax
  0000000000000057: FF 15 00 00 00 00  call        qword ptr [__imp_?good@ios_base@std@@QEBA_NXZ]
  000000000000005D: 0F B6 C0           movzx       eax,al
  0000000000000060: 85 C0              test        eax,eax
  0000000000000062: 75 10              jne         0000000000000074
  0000000000000064: 48 8B 85 00 01 00  mov         rax,qword ptr [rbp+100h]
                    00
  000000000000006B: C6 40 08 00        mov         byte ptr [rax+8],0
  000000000000006F: E9 82 00 00 00     jmp         00000000000000F6
  0000000000000074: 48 8B 85 08 01 00  mov         rax,qword ptr [rbp+108h]
                    00
  000000000000007B: 48 8B 00           mov         rax,qword ptr [rax]
  000000000000007E: 48 63 40 04        movsxd      rax,dword ptr [rax+4]
  0000000000000082: 48 8B 8D 08 01 00  mov         rcx,qword ptr [rbp+108h]
                    00
  0000000000000089: 48 03 C8           add         rcx,rax
  000000000000008C: 48 8B C1           mov         rax,rcx
  000000000000008F: 48 8B C8           mov         rcx,rax
  0000000000000092: FF 15 00 00 00 00  call        qword ptr [__imp_?tie@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_ostream@DU?$char_traits@D@std@@@2@XZ]
  0000000000000098: 48 89 45 08        mov         qword ptr [rbp+8],rax
  000000000000009C: 48 83 7D 08 00     cmp         qword ptr [rbp+8],0
  00000000000000A1: 74 0D              je          00000000000000B0
  00000000000000A3: 48 8B 85 08 01 00  mov         rax,qword ptr [rbp+108h]
                    00
  00000000000000AA: 48 39 45 08        cmp         qword ptr [rbp+8],rax
  00000000000000AE: 75 0D              jne         00000000000000BD
  00000000000000B0: 48 8B 85 00 01 00  mov         rax,qword ptr [rbp+100h]
                    00
  00000000000000B7: C6 40 08 01        mov         byte ptr [rax+8],1
  00000000000000BB: EB 39              jmp         00000000000000F6
  00000000000000BD: 48 8B 4D 08        mov         rcx,qword ptr [rbp+8]
  00000000000000C1: FF 15 00 00 00 00  call        qword ptr [__imp_?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ]
  00000000000000C7: 90                 nop
  00000000000000C8: 48 8B 85 08 01 00  mov         rax,qword ptr [rbp+108h]
                    00
  00000000000000CF: 48 8B 00           mov         rax,qword ptr [rax]
  00000000000000D2: 48 63 40 04        movsxd      rax,dword ptr [rax+4]
  00000000000000D6: 48 8B 8D 08 01 00  mov         rcx,qword ptr [rbp+108h]
                    00
  00000000000000DD: 48 03 C8           add         rcx,rax
  00000000000000E0: 48 8B C1           mov         rax,rcx
  00000000000000E3: 48 8B C8           mov         rcx,rax
  00000000000000E6: FF 15 00 00 00 00  call        qword ptr [__imp_?good@ios_base@std@@QEBA_NXZ]
  00000000000000EC: 48 8B 8D 00 01 00  mov         rcx,qword ptr [rbp+100h]
                    00
  00000000000000F3: 88 41 08           mov         byte ptr [rcx+8],al
  00000000000000F6: 48 8B 85 00 01 00  mov         rax,qword ptr [rbp+100h]
                    00
  00000000000000FD: 48 8D A5 E8 00 00  lea         rsp,[rbp+0E8h]
                    00
  0000000000000104: 5F                 pop         rdi
  0000000000000105: 5D                 pop         rbp
  0000000000000106: C3                 ret

?dtor$0@?0???0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z@4HA (int `public: __cdecl std::basic_ostream<char,struct std::char_traits<char> >::sentry::sentry(class basic_ostream<char,struct std::char_traits<char> >::sentry &)'::`1'::dtor$0):
  0000000000000000: 48 89 4C 24 08     mov         qword ptr [rsp+8],rcx
  0000000000000005: 48 89 54 24 10     mov         qword ptr [rsp+10h],rdx
  000000000000000A: 55                 push        rbp
  000000000000000B: 57                 push        rdi
  000000000000000C: 48 83 EC 28        sub         rsp,28h
  0000000000000010: 48 8D 6A 20        lea         rbp,[rdx+20h]
  0000000000000014: 48 8B 8D 00 01 00  mov         rcx,qword ptr [rbp+100h]
                    00
  000000000000001B: E8 00 00 00 00     call        ??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
  0000000000000020: 48 83 C4 28        add         rsp,28h
  0000000000000024: 5F                 pop         rdi
  0000000000000025: 5D                 pop         rbp
  0000000000000026: C3                 ret

??1?$Event@$$V@@QEAA@XZ (public: __cdecl Event<>::~Event<>(void)):
  0000000000000000: 48 89 4C 24 08     mov         qword ptr [rsp+8],rcx
  0000000000000005: 55                 push        rbp
  0000000000000006: 57                 push        rdi
  0000000000000007: 48 81 EC E8 00 00  sub         rsp,0E8h
                    00
  000000000000000E: 48 8D 6C 24 20     lea         rbp,[rsp+20h]
  0000000000000013: 48 8B 85 E0 00 00  mov         rax,qword ptr [rbp+0E0h]
                    00
  000000000000001A: 48 8B C8           mov         rcx,rax
  000000000000001D: E8 00 00 00 00     call        ??1?$vector@PEAV?$Observer@$$V@@V?$allocator@PEAV?$Observer@$$V@@@std@@@std@@QEAA@XZ
  0000000000000022: 90                 nop
  0000000000000023: 48 8D A5 C8 00 00  lea         rsp,[rbp+0C8h]
                    00
  000000000000002A: 5F                 pop         rdi
  000000000000002B: 5D                 pop         rbp
  000000000000002C: C3                 ret

??1?$vector@PEAV?$Observer@$$V@@V?$allocator@PEAV?$Observer@$$V@@@std@@@std@@QEAA@XZ (public: __cdecl std::vector<class Observer<> *,class std::allocator<class Observer<> *> >::~vector<class Observer<> *,class std::allocator<class Observer<> *> >(void)):
  0000000000000000: 48 89 4C 24 08     mov         qword ptr [rsp+8],rcx
  0000000000000005: 55                 push        rbp
  0000000000000006: 57                 push        rdi
  0000000000000007: 48 81 EC 48 01 00  sub         rsp,148h
                    00
  000000000000000E: 48 8D 6C 24 20     lea         rbp,[rsp+20h]
  0000000000000013: 48 8D 7C 24 20     lea         rdi,[rsp+20h]
  0000000000000018: B9 1A 00 00 00     mov         ecx,1Ah
  000000000000001D: B8 CC CC CC CC     mov         eax,0CCCCCCCCh
  0000000000000022: F3 AB              rep stos    dword ptr [rdi]
  0000000000000024: 48 8B 8C 24 68 01  mov         rcx,qword ptr [rsp+168h]
                    00 00
  000000000000002C: 48 8B 05 00 00 00  mov         rax,qword ptr [__security_cookie]
                    00
  0000000000000033: 48 33 C5           xor         rax,rbp
  0000000000000036: 48 89 85 18 01 00  mov         qword ptr [rbp+118h],rax
                    00
  000000000000003D: 48 8D 0D 00 00 00  lea         rcx,[__C80B98AB_vector]
                    00
  0000000000000044: E8 00 00 00 00     call        __CheckForDebuggerJustMyCode
  0000000000000049: 90                 nop
  000000000000004A: 48 8B 8D 40 01 00  mov         rcx,qword ptr [rbp+140h]
                    00
  0000000000000051: E8 00 00 00 00     call        ?_Tidy@?$vector@PEAV?$Observer@$$V@@V?$allocator@PEAV?$Observer@$$V@@@std@@@std@@AEAAXXZ
  0000000000000056: 90                 nop
  0000000000000057: 48 8B 8D 40 01 00  mov         rcx,qword ptr [rbp+140h]
                    00
  000000000000005E: E8 00 00 00 00     call        ?_Getal@?$vector@PEAV?$Observer@$$V@@V?$allocator@PEAV?$Observer@$$V@@@std@@@std@@AEAAAEAV?$allocator@PEAV?$Observer@$$V@@@2@XZ
  0000000000000063: 48 8B D0           mov         rdx,rax
  0000000000000066: 48 8D 4D 24        lea         rcx,[rbp+24h]
  000000000000006A: E8 00 00 00 00     call        ??$?0PEAV?$Observer@$$V@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@PEAV?$Observer@$$V@@@1@@Z
  000000000000006F: 48 8D 45 24        lea         rax,[rbp+24h]
  0000000000000073: 48 89 45 08        mov         qword ptr [rbp+8],rax
  0000000000000077: 48 C7 85 04 01 00  mov         qword ptr [rbp+104h],0
                    00 00 00 00 00
  0000000000000082: 48 8B 85 40 01 00  mov         rax,qword ptr [rbp+140h]
                    00
  0000000000000089: 48 8D 95 04 01 00  lea         rdx,[rbp+104h]
                    00
  0000000000000090: 48 8B C8           mov         rcx,rax
  0000000000000093: E8 00 00 00 00     call        ??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z
  0000000000000098: 48 8B D0           mov         rdx,rax
  000000000000009B: 48 8B 4D 08        mov         rcx,qword ptr [rbp+8]
  000000000000009F: E8 00 00 00 00     call        ??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z
  00000000000000A4: 90                 nop
  00000000000000A5: 48 8D 4D E0        lea         rcx,[rbp-20h]
  00000000000000A9: 48 8D 15 00 00 00  lea         rdx,[??1?$vector@PEAV?$Observer@$$V@@V?$allocator@PEAV?$Observer@$$V@@@std@@@std@@QEAA@XZ$rtcFrameData]
                    00
  00000000000000B0: E8 00 00 00 00     call        _RTC_CheckStackVars
  00000000000000B5: 48 8B 8D 18 01 00  mov         rcx,qword ptr [rbp+118h]
                    00
  00000000000000BC: 48 33 CD           xor         rcx,rbp
  00000000000000BF: E8 00 00 00 00     call        __security_check_cookie
  00000000000000C4: 48 8D A5 28 01 00  lea         rsp,[rbp+128h]
                    00
  00000000000000CB: 5F                 pop         rdi
  00000000000000CC: 5D                 pop         rbp
  00000000000000CD: C3                 ret

??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ (public: __cdecl std::basic_ostream<char,struct std::char_traits<char> >::_Sentry_base::~_Sentry_base(void)):
  0000000000000000: 48 89 4C 24 08     mov         qword ptr [rsp+8],rcx
  0000000000000005: 55                 push        rbp
  0000000000000006: 57                 push        rdi
  0000000000000007: 48 81 EC 08 01 00  sub         rsp,108h
                    00
  000000000000000E: 48 8D 6C 24 20     lea         rbp,[rsp+20h]
  0000000000000013: 48 8D 0D 00 00 00  lea         rcx,[__CED5848C_ostream]
                    00
  000000000000001A: E8 00 00 00 00     call        __CheckForDebuggerJustMyCode
  000000000000001F: 90                 nop
  0000000000000020: 48 8B 85 00 01 00  mov         rax,qword ptr [rbp+100h]
                    00
  0000000000000027: 48 8B 00           mov         rax,qword ptr [rax]
  000000000000002A: 48 89 85 D8 00 00  mov         qword ptr [rbp+0D8h],rax
                    00
  0000000000000031: 48 8B 85 D8 00 00  mov         rax,qword ptr [rbp+0D8h]
                    00
  0000000000000038: 48 8B 00           mov         rax,qword ptr [rax]
  000000000000003B: 48 63 40 04        movsxd      rax,dword ptr [rax+4]
  000000000000003F: 48 8B 8D D8 00 00  mov         rcx,qword ptr [rbp+0D8h]
                    00
  0000000000000046: 48 03 C8           add         rcx,rax
  0000000000000049: 48 8B C1           mov         rax,rcx
  000000000000004C: 48 8B C8           mov         rcx,rax
  000000000000004F: FF 15 00 00 00 00  call        qword ptr [__imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ]
  0000000000000055: 48 89 45 08        mov         qword ptr [rbp+8],rax
  0000000000000059: 48 83 7D 08 00     cmp         qword ptr [rbp+8],0
  000000000000005E: 74 0F              je          000000000000006F
  0000000000000060: 48 8B 45 08        mov         rax,qword ptr [rbp+8]
  0000000000000064: 48 8B 00           mov         rax,qword ptr [rax]
  0000000000000067: 48 8B 4D 08        mov         rcx,qword ptr [rbp+8]
  000000000000006B: FF 50 10           call        qword ptr [rax+10h]
  000000000000006E: 90                 nop
  000000000000006F: 48 8D A5 E8 00 00  lea         rsp,[rbp+0E8h]
                    00
  0000000000000076: 5F                 pop         rdi
  0000000000000077: 5D                 pop         rbp
  0000000000000078: C3                 ret

??1bad_alloc@std@@UEAA@XZ (public: virtual __cdecl std::bad_alloc::~bad_alloc(void)):
  0000000000000000: 48 89 4C 24 08     mov         qword ptr [rsp+8],rcx
  0000000000000005: 55                 push        rbp
  0000000000000006: 57                 push        rdi
  0000000000000007: 48 81 EC E8 00 00  sub         rsp,0E8h
                    00
  000000000000000E: 48 8D 6C 24 20     lea         rbp,[rsp+20h]
  0000000000000013: 48 8B 8D E0 00 00  mov         rcx,qword ptr [rbp+0E0h]
                    00
  000000000000001A: E8 00 00 00 00     call        ??1exception@std@@UEAA@XZ
  000000000000001F: 90                 nop
  0000000000000020: 48 8D A5 C8 00 00  lea         rsp,[rbp+0C8h]
                    00
  0000000000000027: 5F                 pop         rdi
  0000000000000028: 5D                 pop         rbp
  0000000000000029: C3                 ret

??1bad_array_new_length@std@@UEAA@XZ (public: virtual __cdecl std::bad_array_new_length::~bad_array_new_length(void)):
  0000000000000000: 48 89 4C 24 08     mov         qword ptr [rsp+8],rcx
  0000000000000005: 55                 push        rbp
  0000000000000006: 57                 push        rdi
  0000000000000007: 48 81 EC E8 00 00  sub         rsp,0E8h
                    00
  000000000000000E: 48 8D 6C 24 20     lea         rbp,[rsp+20h]
  0000000000000013: 48 8B 8D E0 00 00  mov         rcx,qword ptr [rbp+0E0h]
                    00
  000000000000001A: E8 00 00 00 00     call        ??1bad_alloc@std@@UEAA@XZ
  000000000000001F: 90                 nop
  0000000000000020: 48 8D A5 C8 00 00  lea         rsp,[rbp+0C8h]
                    00
  0000000000000027: 5F                 pop         rdi
  0000000000000028: 5D                 pop         rbp
  0000000000000029: C3                 ret

??1exception@std@@UEAA@XZ (public: virtual __cdecl std::exception::~exception(void)):
  0000000000000000: 48 89 4C 24 08     mov         qword ptr [rsp+8],rcx
  0000000000000005: 55                 push        rbp
  0000000000000006: 57                 push        rdi
  0000000000000007: 48 81 EC E8 00 00  sub         rsp,0E8h
                    00
  000000000000000E: 48 8D 6C 24 20     lea         rbp,[rsp+20h]
  0000000000000013: 48 8D 0D 00 00 00  lea         rcx,[__EE920070_vcruntime_exception@h]
                    00
  000000000000001A: E8 00 00 00 00     call        __CheckForDebuggerJustMyCode
  000000000000001F: 90                 nop
  0000000000000020: 48 8B 85 E0 00 00  mov         rax,qword ptr [rbp+0E0h]
                    00
  0000000000000027: 48 8D 0D 00 00 00  lea         rcx,[??_7exception@std@@6B@]
                    00
  000000000000002E: 48 89 08           mov         qword ptr [rax],rcx
  0000000000000031: 48 8B 85 E0 00 00  mov         rax,qword ptr [rbp+0E0h]
                    00
  0000000000000038: 48 83 C0 08        add         rax,8
  000000000000003C: 48 8B C8           mov         rcx,rax
  000000000000003F: E8 00 00 00 00     call        __std_exception_destroy
  0000000000000044: 90                 nop
  0000000000000045: 48 8D A5 C8 00 00  lea         rsp,[rbp+0C8h]
                    00
  000000000000004C: 5F                 pop         rdi
  000000000000004D: 5D                 pop         rbp
  000000000000004E: C3                 ret

??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ (public: __cdecl std::basic_ostream<char,struct std::char_traits<char> >::sentry::~sentry(void)):
  0000000000000000: 48 89 4C 24 08     mov         qword ptr [rsp+8],rcx
  0000000000000005: 55                 push        rbp
  0000000000000006: 57                 push        rdi
  0000000000000007: 48 81 EC 08 01 00  sub         rsp,108h
                    00
  000000000000000E: 48 8D 6C 24 20     lea         rbp,[rsp+20h]
  0000000000000013: 48 8D 0D 00 00 00  lea         rcx,[__CED5848C_ostream]
                    00
  000000000000001A: E8 00 00 00 00     call        __CheckForDebuggerJustMyCode
  000000000000001F: 90                 nop
  0000000000000020: E8 00 00 00 00     call        ?uncaught_exception@std@@YA_NXZ
  0000000000000025: 0F B6 C0           movzx       eax,al
  0000000000000028: 85 C0              test        eax,eax
  000000000000002A: 75 09              jne         0000000000000035
  000000000000002C: C6 85 D4 00 00 00  mov         byte ptr [rbp+0D4h],1
                    01
  0000000000000033: EB 07              jmp         000000000000003C
  0000000000000035: C6 85 D4 00 00 00  mov         byte ptr [rbp+0D4h],0
                    00
  000000000000003C: 0F B6 85 D4 00 00  movzx       eax,byte ptr [rbp+0D4h]
                    00
  0000000000000043: 88 45 04           mov         byte ptr [rbp+4],al
  0000000000000046: 0F B6 45 04        movzx       eax,byte ptr [rbp+4]
  000000000000004A: 85 C0              test        eax,eax
  000000000000004C: 74 11              je          000000000000005F
  000000000000004E: 48 8B 85 00 01 00  mov         rax,qword ptr [rbp+100h]
                    00
  0000000000000055: 48 8B 08           mov         rcx,qword ptr [rax]
  0000000000000058: FF 15 00 00 00 00  call        qword ptr [__imp_?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ]
  000000000000005E: 90                 nop
  000000000000005F: 48 8B 8D 00 01 00  mov         rcx,qword ptr [rbp+100h]
                    00
  0000000000000066: E8 00 00 00 00     call        ??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
  000000000000006B: 90                 nop
  000000000000006C: 48 8D A5 E8 00 00  lea         rsp,[rbp+0E8h]
                    00
  0000000000000073: 5F                 pop         rdi
  0000000000000074: 5D                 pop         rbp
  0000000000000075: C3                 ret

??2@YAPEAX_KPEAX@Z (void * __cdecl operator new(unsigned __int64,void *)):
  0000000000000000: 48 89 54 24 10     mov         qword ptr [rsp+10h],rdx
  0000000000000005: 48 89 4C 24 08     mov         qword ptr [rsp+8],rcx
  000000000000000A: 55                 push        rbp
  000000000000000B: 57                 push        rdi
  000000000000000C: 48 81 EC E8 00 00  sub         rsp,0E8h
                    00
  0000000000000013: 48 8D 6C 24 20     lea         rbp,[rsp+20h]
  0000000000000018: 48 8D 0D 00 00 00  lea         rcx,[__0F1CA72C_vcruntime_new@h]
                    00
  000000000000001F: E8 00 00 00 00     call        __CheckForDebuggerJustMyCode
  0000000000000024: 90                 nop
  0000000000000025: 48 8B 85 E8 00 00  mov         rax,qword ptr [rbp+0E8h]
                    00
  000000000000002C: 48 8D A5 C8 00 00  lea         rsp,[rbp+0C8h]
                    00
  0000000000000033: 5F                 pop         rdi
  0000000000000034: 5D                 pop         rbp
  0000000000000035: C3                 ret

??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEBA_NXZ (public: __cdecl std::basic_ostream<char,struct std::char_traits<char> >::sentry::operator bool(void)const ):
  0000000000000000: 48 89 4C 24 08     mov         qword ptr [rsp+8],rcx
  0000000000000005: 55                 push        rbp
  0000000000000006: 57                 push        rdi
  0000000000000007: 48 81 EC E8 00 00  sub         rsp,0E8h
                    00
  000000000000000E: 48 8D 6C 24 20     lea         rbp,[rsp+20h]
  0000000000000013: 48 8D 0D 00 00 00  lea         rcx,[__CED5848C_ostream]
                    00
  000000000000001A: E8 00 00 00 00     call        __CheckForDebuggerJustMyCode
  000000000000001F: 90                 nop
  0000000000000020: 48 8B 85 E0 00 00  mov         rax,qword ptr [rbp+0E0h]
                    00
  0000000000000027: 0F B6 40 08        movzx       eax,byte ptr [rax+8]
  000000000000002B: 48 8D A5 C8 00 00  lea         rsp,[rbp+0C8h]
                    00
  0000000000000032: 5F                 pop         rdi
  0000000000000033: 5D                 pop         rbp
  0000000000000034: C3                 ret

??_Gbad_alloc@std@@UEAAPEAXI@Z (public: virtual void * __cdecl std::bad_alloc::`scalar deleting destructor'(unsigned int)):
  0000000000000000: 89 54 24 10        mov         dword ptr [rsp+10h],edx
  0000000000000004: 48 89 4C 24 08     mov         qword ptr [rsp+8],rcx
  0000000000000009: 55                 push        rbp
  000000000000000A: 57                 push        rdi
  000000000000000B: 48 81 EC E8 00 00  sub         rsp,0E8h
                    00
  0000000000000012: 48 8D 6C 24 20     lea         rbp,[rsp+20h]
  0000000000000017: 48 8B 8D E0 00 00  mov         rcx,qword ptr [rbp+0E0h]
                    00
  000000000000001E: E8 00 00 00 00     call        ??1bad_alloc@std@@UEAA@XZ
  0000000000000023: 90                 nop
  0000000000000024: 8B 85 E8 00 00 00  mov         eax,dword ptr [rbp+0E8h]
  000000000000002A: 83 E0 01           and         eax,1
  000000000000002D: 85 C0              test        eax,eax
  000000000000002F: 74 12              je          0000000000000043
  0000000000000031: BA 18 00 00 00     mov         edx,18h
  0000000000000036: 48 8B 8D E0 00 00  mov         rcx,qword ptr [rbp+0E0h]
                    00
  000000000000003D: E8 00 00 00 00     call        ??3@YAXPEAX_K@Z
  0000000000000042: 90                 nop
  0000000000000043: 48 8B 85 E0 00 00  mov         rax,qword ptr [rbp+0E0h]
                    00
  000000000000004A: 48 8D A5 C8 00 00  lea         rsp,[rbp+0C8h]
                    00
  0000000000000051: 5F                 pop         rdi
  0000000000000052: 5D                 pop         rbp
  0000000000000053: C3                 ret

??_Gbad_array_new_length@std@@UEAAPEAXI@Z (public: virtual void * __cdecl std::bad_array_new_length::`scalar deleting destructor'(unsigned int)):
  0000000000000000: 89 54 24 10        mov         dword ptr [rsp+10h],edx
  0000000000000004: 48 89 4C 24 08     mov         qword ptr [rsp+8],rcx
  0000000000000009: 55                 push        rbp
  000000000000000A: 57                 push        rdi
  000000000000000B: 48 81 EC E8 00 00  sub         rsp,0E8h
                    00
  0000000000000012: 48 8D 6C 24 20     lea         rbp,[rsp+20h]
  0000000000000017: 48 8B 8D E0 00 00  mov         rcx,qword ptr [rbp+0E0h]
                    00
  000000000000001E: E8 00 00 00 00     call        ??1bad_array_new_length@std@@UEAA@XZ
  0000000000000023: 90                 nop
  0000000000000024: 8B 85 E8 00 00 00  mov         eax,dword ptr [rbp+0E8h]
  000000000000002A: 83 E0 01           and         eax,1
  000000000000002D: 85 C0              test        eax,eax
  000000000000002F: 74 12              je          0000000000000043
  0000000000000031: BA 18 00 00 00     mov         edx,18h
  0000000000000036: 48 8B 8D E0 00 00  mov         rcx,qword ptr [rbp+0E0h]
                    00
  000000000000003D: E8 00 00 00 00     call        ??3@YAXPEAX_K@Z
  0000000000000042: 90                 nop
  0000000000000043: 48 8B 85 E0 00 00  mov         rax,qword ptr [rbp+0E0h]
                    00
  000000000000004A: 48 8D A5 C8 00 00  lea         rsp,[rbp+0C8h]
                    00
  0000000000000051: 5F                 pop         rdi
  0000000000000052: 5D                 pop         rbp
  0000000000000053: C3                 ret

??_Gexception@std@@UEAAPEAXI@Z (public: virtual void * __cdecl std::exception::`scalar deleting destructor'(unsigned int)):
  0000000000000000: 89 54 24 10        mov         dword ptr [rsp+10h],edx
  0000000000000004: 48 89 4C 24 08     mov         qword ptr [rsp+8],rcx
  0000000000000009: 55                 push        rbp
  000000000000000A: 57                 push        rdi
  000000000000000B: 48 81 EC E8 00 00  sub         rsp,0E8h
                    00
  0000000000000012: 48 8D 6C 24 20     lea         rbp,[rsp+20h]
  0000000000000017: 48 8B 8D E0 00 00  mov         rcx,qword ptr [rbp+0E0h]
                    00
  000000000000001E: E8 00 00 00 00     call        ??1exception@std@@UEAA@XZ
  0000000000000023: 90                 nop
  0000000000000024: 8B 85 E8 00 00 00  mov         eax,dword ptr [rbp+0E8h]
  000000000000002A: 83 E0 01           and         eax,1
  000000000000002D: 85 C0              test        eax,eax
  000000000000002F: 74 12              je          0000000000000043
  0000000000000031: BA 18 00 00 00     mov         edx,18h
  0000000000000036: 48 8B 8D E0 00 00  mov         rcx,qword ptr [rbp+0E0h]
                    00
  000000000000003D: E8 00 00 00 00     call        ??3@YAXPEAX_K@Z
  0000000000000042: 90                 nop
  0000000000000043: 48 8B 85 E0 00 00  mov         rax,qword ptr [rbp+0E0h]
                    00
  000000000000004A: 48 8D A5 C8 00 00  lea         rsp,[rbp+0C8h]
                    00
  0000000000000051: 5F                 pop         rdi
  0000000000000052: 5D                 pop         rbp
  0000000000000053: C3                 ret

??__E?gameScripts@SystemManager@@2V?$Event@$$V@@A@@YAXXZ (void __cdecl `dynamic initializer for 'public: static class Event<> SystemManager::gameScripts''(void)):
  0000000000000000: 40 55              push        rbp
  0000000000000002: 57                 push        rdi
  0000000000000003: 48 81 EC E8 00 00  sub         rsp,0E8h
                    00
  000000000000000A: 48 8D 6C 24 20     lea         rbp,[rsp+20h]
  000000000000000F: 48 8D 0D 00 00 00  lea         rcx,[__2AE58B10_System_Manager@cpp]
                    00
  0000000000000016: E8 00 00 00 00     call        __CheckForDebuggerJustMyCode
  000000000000001B: 90                 nop
  000000000000001C: BA 20 00 00 00     mov         edx,20h
  0000000000000021: 48 8D 0D 00 00 00  lea         rcx,[?gameScripts@SystemManager@@2V?$Event@$$V@@A]
                    00
  0000000000000028: E8 00 00 00 00     call        ?__autoclassinit2@?$Event@$$V@@QEAAX_K@Z
  000000000000002D: 48 8D 0D 00 00 00  lea         rcx,[?gameScripts@SystemManager@@2V?$Event@$$V@@A]
                    00
  0000000000000034: E8 00 00 00 00     call        ??0?$Event@$$V@@QEAA@XZ
  0000000000000039: 90                 nop
  000000000000003A: 48 8D 0D 00 00 00  lea         rcx,[??__F?gameScripts@SystemManager@@2V?$Event@$$V@@A@@YAXXZ]
                    00
  0000000000000041: E8 00 00 00 00     call        atexit
  0000000000000046: 90                 nop
  0000000000000047: 48 8D A5 C8 00 00  lea         rsp,[rbp+0C8h]
                    00
  000000000000004E: 5F                 pop         rdi
  000000000000004F: 5D                 pop         rbp
  0000000000000050: C3                 ret

??__E?systemScripts@SystemManager@@2V?$Event@$$V@@A@@YAXXZ (void __cdecl `dynamic initializer for 'public: static class Event<> SystemManager::systemScripts''(void)):
  0000000000000000: 40 55              push        rbp
  0000000000000002: 57                 push        rdi
  0000000000000003: 48 81 EC E8 00 00  sub         rsp,0E8h
                    00
  000000000000000A: 48 8D 6C 24 20     lea         rbp,[rsp+20h]
  000000000000000F: 48 8D 0D 00 00 00  lea         rcx,[__2AE58B10_System_Manager@cpp]
                    00
  0000000000000016: E8 00 00 00 00     call        __CheckForDebuggerJustMyCode
  000000000000001B: 90                 nop
  000000000000001C: BA 20 00 00 00     mov         edx,20h
  0000000000000021: 48 8D 0D 00 00 00  lea         rcx,[?systemScripts@SystemManager@@2V?$Event@$$V@@A]
                    00
  0000000000000028: E8 00 00 00 00     call        ?__autoclassinit2@?$Event@$$V@@QEAAX_K@Z
  000000000000002D: 48 8D 0D 00 00 00  lea         rcx,[?systemScripts@SystemManager@@2V?$Event@$$V@@A]
                    00
  0000000000000034: E8 00 00 00 00     call        ??0?$Event@$$V@@QEAA@XZ
  0000000000000039: 90                 nop
  000000000000003A: 48 8D 0D 00 00 00  lea         rcx,[??__F?systemScripts@SystemManager@@2V?$Event@$$V@@A@@YAXXZ]
                    00
  0000000000000041: E8 00 00 00 00     call        atexit
  0000000000000046: 90                 nop
  0000000000000047: 48 8D A5 C8 00 00  lea         rsp,[rbp+0C8h]
                    00
  000000000000004E: 5F                 pop         rdi
  000000000000004F: 5D                 pop         rbp
  0000000000000050: C3                 ret

??__F?gameScripts@SystemManager@@2V?$Event@$$V@@A@@YAXXZ (void __cdecl `dynamic atexit destructor for 'public: static class Event<> SystemManager::gameScripts''(void)):
  0000000000000000: 40 55              push        rbp
  0000000000000002: 57                 push        rdi
  0000000000000003: 48 81 EC E8 00 00  sub         rsp,0E8h
                    00
  000000000000000A: 48 8D 6C 24 20     lea         rbp,[rsp+20h]
  000000000000000F: 48 8D 0D 00 00 00  lea         rcx,[?gameScripts@SystemManager@@2V?$Event@$$V@@A]
                    00
  0000000000000016: E8 00 00 00 00     call        ??1?$Event@$$V@@QEAA@XZ
  000000000000001B: 90                 nop
  000000000000001C: 48 8D A5 C8 00 00  lea         rsp,[rbp+0C8h]
                    00
  0000000000000023: 5F                 pop         rdi
  0000000000000024: 5D                 pop         rbp
  0000000000000025: C3                 ret

??__F?systemScripts@SystemManager@@2V?$Event@$$V@@A@@YAXXZ (void __cdecl `dynamic atexit destructor for 'public: static class Event<> SystemManager::systemScripts''(void)):
  0000000000000000: 40 55              push        rbp
  0000000000000002: 57                 push        rdi
  0000000000000003: 48 81 EC E8 00 00  sub         rsp,0E8h
                    00
  000000000000000A: 48 8D 6C 24 20     lea         rbp,[rsp+20h]
  000000000000000F: 48 8D 0D 00 00 00  lea         rcx,[?systemScripts@SystemManager@@2V?$Event@$$V@@A]
                    00
  0000000000000016: E8 00 00 00 00     call        ??1?$Event@$$V@@QEAA@XZ
  000000000000001B: 90                 nop
  000000000000001C: 48 8D A5 C8 00 00  lea         rsp,[rbp+0C8h]
                    00
  0000000000000023: 5F                 pop         rdi
  0000000000000024: 5D                 pop         rbp
  0000000000000025: C3                 ret

?PrintSystemInfomation@SystemManager@@QEAAXXZ (public: void __cdecl SystemManager::PrintSystemInfomation(void)):
  0000000000000000: 48 89 4C 24 08     mov         qword ptr [rsp+8],rcx
  0000000000000005: 55                 push        rbp
  0000000000000006: 57                 push        rdi
  0000000000000007: 48 81 EC 38 01 00  sub         rsp,138h
                    00
  000000000000000E: 48 8D 6C 24 20     lea         rbp,[rsp+20h]
  0000000000000013: 48 8D 0D 00 00 00  lea         rcx,[__2AE58B10_System_Manager@cpp]
                    00
  000000000000001A: E8 00 00 00 00     call        __CheckForDebuggerJustMyCode
  000000000000001F: 90                 nop
  0000000000000020: 48 8D 15 00 00 00  lea         rdx,[??_C@_0BM@BEILNACB@?9?9?9?9?5System?5Infomation?5?9?9?9?9@]
                    00
  0000000000000027: 48 8B 0D 00 00 00  mov         rcx,qword ptr [__imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A]
                    00
  000000000000002E: E8 00 00 00 00     call        ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
  0000000000000033: 48 8D 15 00 00 00  lea         rdx,[??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z]
                    00
  000000000000003A: 48 8B C8           mov         rcx,rax
  000000000000003D: FF 15 00 00 00 00  call        qword ptr [__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@P6AAEAV01@AEAV01@@Z@Z]
  0000000000000043: 90                 nop
  0000000000000044: B9 02 1F 00 00     mov         ecx,1F02h
  0000000000000049: FF 15 00 00 00 00  call        qword ptr [glad_glGetString]
  000000000000004F: 48 89 85 08 01 00  mov         qword ptr [rbp+108h],rax
                    00
  0000000000000056: 48 8D 15 00 00 00  lea         rdx,[??_C@_0BA@KPGKOCCB@Version?5of?5GL?3?5@]
                    00
  000000000000005D: 48 8B 0D 00 00 00  mov         rcx,qword ptr [__imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A]
                    00
  0000000000000064: E8 00 00 00 00     call        ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
  0000000000000069: 48 8B 8D 08 01 00  mov         rcx,qword ptr [rbp+108h]
                    00
  0000000000000070: 48 8B D1           mov         rdx,rcx
  0000000000000073: 48 8B C8           mov         rcx,rax
  0000000000000076: E8 00 00 00 00     call        ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBE@Z
  000000000000007B: 48 8D 15 00 00 00  lea         rdx,[??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z]
                    00
  0000000000000082: 48 8B C8           mov         rcx,rax
  0000000000000085: FF 15 00 00 00 00  call        qword ptr [__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@P6AAEAV01@AEAV01@@Z@Z]
  000000000000008B: 90                 nop
  000000000000008C: B2 2D              mov         dl,2Dh
  000000000000008E: 48 8D 8D C4 00 00  lea         rcx,[rbp+0C4h]
                    00
  0000000000000095: E8 00 00 00 00     call        ??$setfill@D@std@@YA?AU?$_Fillobj@D@0@D@Z
  000000000000009A: 48 89 85 08 01 00  mov         qword ptr [rbp+108h],rax
                    00
  00000000000000A1: BA 1C 00 00 00     mov         edx,1Ch
  00000000000000A6: 48 8D 8D E8 00 00  lea         rcx,[rbp+0E8h]
                    00
  00000000000000AD: E8 00 00 00 00     call        ?setw@std@@YA?AU?$_Smanip@_J@1@_J@Z
  00000000000000B2: 48 8B D0           mov         rdx,rax
  00000000000000B5: 48 8B 0D 00 00 00  mov         rcx,qword ptr [__imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A]
                    00
  00000000000000BC: E8 00 00 00 00     call        ??$?6DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBU?$_Smanip@_J@0@@Z
  00000000000000C1: 48 8B 8D 08 01 00  mov         rcx,qword ptr [rbp+108h]
                    00
  00000000000000C8: 48 8B D1           mov         rdx,rcx
  00000000000000CB: 48 8B C8           mov         rcx,rax
  00000000000000CE: E8 00 00 00 00     call        ??$?6DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBU?$_Fillobj@D@0@@Z
  00000000000000D3: 48 8D 15 00 00 00  lea         rdx,[??_C@_00CNPNBAHC@@]
                    00
  00000000000000DA: 48 8B C8           mov         rcx,rax
  00000000000000DD: E8 00 00 00 00     call        ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
  00000000000000E2: 48 8D 15 00 00 00  lea         rdx,[??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z]
                    00
  00000000000000E9: 48 8B C8           mov         rcx,rax
  00000000000000EC: FF 15 00 00 00 00  call        qword ptr [__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@P6AAEAV01@AEAV01@@Z@Z]
  00000000000000F2: 90                 nop
  00000000000000F3: 48 8D A5 18 01 00  lea         rsp,[rbp+118h]
                    00
  00000000000000FA: 5F                 pop         rdi
  00000000000000FB: 5D                 pop         rbp
  00000000000000FC: C3                 ret

?UpdateGameScripts@SystemManager@@QEAAXXZ (public: void __cdecl SystemManager::UpdateGameScripts(void)):
  0000000000000000: 48 89 4C 24 08     mov         qword ptr [rsp+8],rcx
  0000000000000005: 55                 push        rbp
  0000000000000006: 57                 push        rdi
  0000000000000007: 48 81 EC E8 00 00  sub         rsp,0E8h
                    00
  000000000000000E: 48 8D 6C 24 20     lea         rbp,[rsp+20h]
  0000000000000013: 48 8D 0D 00 00 00  lea         rcx,[__2AE58B10_System_Manager@cpp]
                    00
  000000000000001A: E8 00 00 00 00     call        __CheckForDebuggerJustMyCode
  000000000000001F: 90                 nop
  0000000000000020: 48 8D 0D 00 00 00  lea         rcx,[?systemScripts@SystemManager@@2V?$Event@$$V@@A]
                    00
  0000000000000027: E8 00 00 00 00     call        ?Trigger@?$Event@$$V@@QEAAXXZ
  000000000000002C: 90                 nop
  000000000000002D: 48 8D A5 C8 00 00  lea         rsp,[rbp+0C8h]
                    00
  0000000000000034: 5F                 pop         rdi
  0000000000000035: 5D                 pop         rbp
  0000000000000036: C3                 ret

?UpdateSystemScripts@SystemManager@@QEAAXXZ (public: void __cdecl SystemManager::UpdateSystemScripts(void)):
  0000000000000000: 48 89 4C 24 08     mov         qword ptr [rsp+8],rcx
  0000000000000005: 55                 push        rbp
  0000000000000006: 57                 push        rdi
  0000000000000007: 48 81 EC E8 00 00  sub         rsp,0E8h
                    00
  000000000000000E: 48 8D 6C 24 20     lea         rbp,[rsp+20h]
  0000000000000013: 48 8D 0D 00 00 00  lea         rcx,[__2AE58B10_System_Manager@cpp]
                    00
  000000000000001A: E8 00 00 00 00     call        __CheckForDebuggerJustMyCode
  000000000000001F: 90                 nop
  0000000000000020: 48 8D 0D 00 00 00  lea         rcx,[?gameScripts@SystemManager@@2V?$Event@$$V@@A]
                    00
  0000000000000027: E8 00 00 00 00     call        ?Trigger@?$Event@$$V@@QEAAXXZ
  000000000000002C: 90                 nop
  000000000000002D: 48 8D A5 C8 00 00  lea         rsp,[rbp+0C8h]
                    00
  0000000000000034: 5F                 pop         rdi
  0000000000000035: 5D                 pop         rbp
  0000000000000036: C3                 ret

?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z (void __cdecl std::_Adjust_manually_vector_aligned(void * &,unsigned __int64 &)):
  0000000000000000: 48 89 54 24 10     mov         qword ptr [rsp+10h],rdx
  0000000000000005: 48 89 4C 24 08     mov         qword ptr [rsp+8],rcx
  000000000000000A: 55                 push        rbp
  000000000000000B: 57                 push        rdi
  000000000000000C: 48 81 EC 78 01 00  sub         rsp,178h
                    00
  0000000000000013: 48 8D 6C 24 30     lea         rbp,[rsp+30h]
  0000000000000018: 48 8D 0D 00 00 00  lea         rcx,[__7628ACE5_xmemory]
                    00
  000000000000001F: E8 00 00 00 00     call        __CheckForDebuggerJustMyCode
  0000000000000024: 90                 nop
  0000000000000025: 48 8B 85 68 01 00  mov         rax,qword ptr [rbp+168h]
                    00
  000000000000002C: 48 8B 00           mov         rax,qword ptr [rax]
  000000000000002F: 48 83 C0 2F        add         rax,2Fh
  0000000000000033: 48 8B 8D 68 01 00  mov         rcx,qword ptr [rbp+168h]
                    00
  000000000000003A: 48 89 01           mov         qword ptr [rcx],rax
  000000000000003D: 48 8B 85 60 01 00  mov         rax,qword ptr [rbp+160h]
                    00
  0000000000000044: 48 8B 00           mov         rax,qword ptr [rax]
  0000000000000047: 48 89 45 08        mov         qword ptr [rbp+8],rax
  000000000000004B: B8 08 00 00 00     mov         eax,8
  0000000000000050: 48 6B C0 FF        imul        rax,rax,0FFFFFFFFFFFFFFFFh
  0000000000000054: 48 8B 4D 08        mov         rcx,qword ptr [rbp+8]
  0000000000000058: 48 8B 04 01        mov         rax,qword ptr [rcx+rax]
  000000000000005C: 48 89 45 28        mov         qword ptr [rbp+28h],rax
  0000000000000060: B8 08 00 00 00     mov         eax,8
  0000000000000065: 48 6B C0 FE        imul        rax,rax,0FFFFFFFFFFFFFFFEh
  0000000000000069: 48 8B 4D 08        mov         rcx,qword ptr [rbp+8]
  000000000000006D: 48 BA FA FA FA FA  mov         rdx,0FAFAFAFAFAFAFAFAh
                    FA FA FA FA
  0000000000000077: 48 39 14 01        cmp         qword ptr [rcx+rax],rdx
  000000000000007B: 75 02              jne         000000000000007F
  000000000000007D: EB 78              jmp         00000000000000F7
  000000000000007F: 8B 05 00 00 00 00  mov         eax,dword ptr [?__LINE__Var@?0??_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z@4JA]
  0000000000000085: 83 C0 09           add         eax,9
  0000000000000088: 48 8D 0D 00 00 00  lea         rcx,[??_C@_0BB@FCMFBGOM@invalid?5argument@]
                    00
  000000000000008F: 48 89 4C 24 28     mov         qword ptr [rsp+28h],rcx
  0000000000000094: 48 8D 0D 00 00 00  lea         rcx,[??_C@_02DKCKIIND@?$CFs@]
                    00
  000000000000009B: 48 89 4C 24 20     mov         qword ptr [rsp+20h],rcx
  00000000000000A0: 45 33 C9           xor         r9d,r9d
  00000000000000A3: 44 8B C0           mov         r8d,eax
  00000000000000A6: 48 8D 15 00 00 00  lea         rdx,[??_C@_0GC@GDGMGNBP@C?3?2Program?5Files?2Microsoft?5Visu@]
                    00
  00000000000000AD: B9 02 00 00 00     mov         ecx,2
  00000000000000B2: FF 15 00 00 00 00  call        qword ptr [__imp__CrtDbgReport]
  00000000000000B8: 83 F8 01           cmp         eax,1
  00000000000000BB: 75 03              jne         00000000000000C0
  00000000000000BD: CC                 int         3
  00000000000000BE: 33 C0              xor         eax,eax
  00000000000000C0: 8B 05 00 00 00 00  mov         eax,dword ptr [?__LINE__Var@?0??_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z@4JA]
  00000000000000C6: 83 C0 09           add         eax,9
  00000000000000C9: 48 C7 44 24 20 00  mov         qword ptr [rsp+20h],0
                    00 00 00
  00000000000000D2: 44 8B C8           mov         r9d,eax
  00000000000000D5: 4C 8D 05 00 00 00  lea         r8,[??_C@_1ME@KJJNLLPL@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@]
                    00
  00000000000000DC: 48 8D 15 00 00 00  lea         rdx,[??_C@_11LOCGONAA@@]
                    00
  00000000000000E3: 48 8D 0D 00 00 00  lea         rcx,[??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@]
                    00
  00000000000000EA: FF 15 00 00 00 00  call        qword ptr [__imp__invalid_parameter]
  00000000000000F0: 90                 nop
  00000000000000F1: 33 C0              xor         eax,eax
  00000000000000F3: 85 C0              test        eax,eax
  00000000000000F5: 75 88              jne         000000000000007F
  00000000000000F7: 33 C0              xor         eax,eax
  00000000000000F9: 85 C0              test        eax,eax
  00000000000000FB: 0F 85 5F FF FF FF  jne         0000000000000060
  0000000000000101: 48 C7 45 48 10 00  mov         qword ptr [rbp+48h],10h
                    00 00
  0000000000000109: 48 8B 85 60 01 00  mov         rax,qword ptr [rbp+160h]
                    00
  0000000000000110: 48 8B 4D 28        mov         rcx,qword ptr [rbp+28h]
  0000000000000114: 48 8B 00           mov         rax,qword ptr [rax]
  0000000000000117: 48 2B C1           sub         rax,rcx
  000000000000011A: 48 89 45 68        mov         qword ptr [rbp+68h],rax
  000000000000011E: 48 83 7D 68 10     cmp         qword ptr [rbp+68h],10h
  0000000000000123: 72 09              jb          000000000000012E
  0000000000000125: 48 83 7D 68 2F     cmp         qword ptr [rbp+68h],2Fh
  000000000000012A: 77 02              ja          000000000000012E
  000000000000012C: EB 78              jmp         00000000000001A6
  000000000000012E: 8B 05 00 00 00 00  mov         eax,dword ptr [?__LINE__Var@?0??_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z@4JA]
  0000000000000134: 83 C0 13           add         eax,13h
  0000000000000137: 48 8D 0D 00 00 00  lea         rcx,[??_C@_0BB@FCMFBGOM@invalid?5argument@]
                    00
  000000000000013E: 48 89 4C 24 28     mov         qword ptr [rsp+28h],rcx
  0000000000000143: 48 8D 0D 00 00 00  lea         rcx,[??_C@_02DKCKIIND@?$CFs@]
                    00
  000000000000014A: 48 89 4C 24 20     mov         qword ptr [rsp+20h],rcx
  000000000000014F: 45 33 C9           xor         r9d,r9d
  0000000000000152: 44 8B C0           mov         r8d,eax
  0000000000000155: 48 8D 15 00 00 00  lea         rdx,[??_C@_0GC@GDGMGNBP@C?3?2Program?5Files?2Microsoft?5Visu@]
                    00
  000000000000015C: B9 02 00 00 00     mov         ecx,2
  0000000000000161: FF 15 00 00 00 00  call        qword ptr [__imp__CrtDbgReport]
  0000000000000167: 83 F8 01           cmp         eax,1
  000000000000016A: 75 03              jne         000000000000016F
  000000000000016C: CC                 int         3
  000000000000016D: 33 C0              xor         eax,eax
  000000000000016F: 8B 05 00 00 00 00  mov         eax,dword ptr [?__LINE__Var@?0??_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z@4JA]
  0000000000000175: 83 C0 13           add         eax,13h
  0000000000000178: 48 C7 44 24 20 00  mov         qword ptr [rsp+20h],0
                    00 00 00
  0000000000000181: 44 8B C8           mov         r9d,eax
  0000000000000184: 4C 8D 05 00 00 00  lea         r8,[??_C@_1ME@KJJNLLPL@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@]
                    00
  000000000000018B: 48 8D 15 00 00 00  lea         rdx,[??_C@_11LOCGONAA@@]
                    00
  0000000000000192: 48 8D 0D 00 00 00  lea         rcx,[??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@]
                    00
  0000000000000199: FF 15 00 00 00 00  call        qword ptr [__imp__invalid_parameter]
  000000000000019F: 90                 nop
  00000000000001A0: 33 C0              xor         eax,eax
  00000000000001A2: 85 C0              test        eax,eax
  00000000000001A4: 75 88              jne         000000000000012E
  00000000000001A6: 33 C0              xor         eax,eax
  00000000000001A8: 85 C0              test        eax,eax
  00000000000001AA: 0F 85 6E FF FF FF  jne         000000000000011E
  00000000000001B0: 48 8B 85 60 01 00  mov         rax,qword ptr [rbp+160h]
                    00
  00000000000001B7: 48 8B 4D 28        mov         rcx,qword ptr [rbp+28h]
  00000000000001BB: 48 89 08           mov         qword ptr [rax],rcx
  00000000000001BE: 48 8D A5 48 01 00  lea         rsp,[rbp+148h]
                    00
  00000000000001C5: 5F                 pop         rdi
  00000000000001C6: 5D                 pop         rbp
  00000000000001C7: C3                 ret

?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z (public: static void * __cdecl std::_Default_allocate_traits::_Allocate(unsigned __int64)):
  0000000000000000: 48 89 4C 24 08     mov         qword ptr [rsp+8],rcx
  0000000000000005: 55                 push        rbp
  0000000000000006: 57                 push        rdi
  0000000000000007: 48 81 EC E8 00 00  sub         rsp,0E8h
                    00
  000000000000000E: 48 8D 6C 24 20     lea         rbp,[rsp+20h]
  0000000000000013: 48 8D 0D 00 00 00  lea         rcx,[__7628ACE5_xmemory]
                    00
  000000000000001A: E8 00 00 00 00     call        __CheckForDebuggerJustMyCode
  000000000000001F: 90                 nop
  0000000000000020: 48 8B 8D E0 00 00  mov         rcx,qword ptr [rbp+0E0h]
                    00
  0000000000000027: E8 00 00 00 00     call        ??2@YAPEAX_K@Z
  000000000000002C: 48 8D A5 C8 00 00  lea         rsp,[rbp+0C8h]
                    00
  0000000000000033: 5F                 pop         rdi
  0000000000000034: 5D                 pop         rbp
  0000000000000035: C3                 ret

?_Get_first@?$_Compressed_pair@V?$allocator@PEAV?$Observer@$$V@@@std@@V?$_Vector_val@U?$_Simple_types@PEAV?$Observer@$$V@@@std@@@2@$00@std@@QEAAAEAV?$allocator@PEAV?$Observer@$$V@@@2@XZ (public: class std::allocator<class Observer<> *> & __cdecl std::_Compressed_pair<class std::allocator<class Observer<> *>,class std::_Vector_val<struct std::_Simple_types<class Observer<> *> >,1>::_Get_first(void)):
  0000000000000000: 48 89 4C 24 08     mov         qword ptr [rsp+8],rcx
  0000000000000005: 55                 push        rbp
  0000000000000006: 57                 push        rdi
  0000000000000007: 48 81 EC E8 00 00  sub         rsp,0E8h
                    00
  000000000000000E: 48 8D 6C 24 20     lea         rbp,[rsp+20h]
  0000000000000013: 48 8D 0D 00 00 00  lea         rcx,[__7628ACE5_xmemory]
                    00
  000000000000001A: E8 00 00 00 00     call        __CheckForDebuggerJustMyCode
  000000000000001F: 90                 nop
  0000000000000020: 48 8B 85 E0 00 00  mov         rax,qword ptr [rbp+0E0h]
                    00
  0000000000000027: 48 8D A5 C8 00 00  lea         rsp,[rbp+0C8h]
                    00
  000000000000002E: 5F                 pop         rdi
  000000000000002F: 5D                 pop         rbp
  0000000000000030: C3                 ret

?_Getal@?$vector@PEAV?$Observer@$$V@@V?$allocator@PEAV?$Observer@$$V@@@std@@@std@@AEAAAEAV?$allocator@PEAV?$Observer@$$V@@@2@XZ (private: class std::allocator<class Observer<> *> & __cdecl std::vector<class Observer<> *,class std::allocator<class Observer<> *> >::_Getal(void)):
  0000000000000000: 48 89 4C 24 08     mov         qword ptr [rsp+8],rcx
  0000000000000005: 55                 push        rbp
  0000000000000006: 57                 push        rdi
  0000000000000007: 48 81 EC E8 00 00  sub         rsp,0E8h
                    00
  000000000000000E: 48 8D 6C 24 20     lea         rbp,[rsp+20h]
  0000000000000013: 48 8D 0D 00 00 00  lea         rcx,[__C80B98AB_vector]
                    00
  000000000000001A: E8 00 00 00 00     call        __CheckForDebuggerJustMyCode
  000000000000001F: 90                 nop
  0000000000000020: 48 8B 85 E0 00 00  mov         rax,qword ptr [rbp+0E0h]
                    00
  0000000000000027: 48 8B C8           mov         rcx,rax
  000000000000002A: E8 00 00 00 00     call        ?_Get_first@?$_Compressed_pair@V?$allocator@PEAV?$Observer@$$V@@@std@@V?$_Vector_val@U?$_Simple_types@PEAV?$Observer@$$V@@@std@@@2@$00@std@@QEAAAEAV?$allocator@PEAV?$Observer@$$V@@@2@XZ
  000000000000002F: 48 8D A5 C8 00 00  lea         rsp,[rbp+0C8h]
                    00
  0000000000000036: 5F                 pop         rdi
  0000000000000037: 5D                 pop         rbp
  0000000000000038: C3                 ret

?_Maklocwcs@std@@YAPEA_WPEB_W@Z (wchar_t * __cdecl std::_Maklocwcs(wchar_t const *)):
  0000000000000000: 48 89 4C 24 08     mov         qword ptr [rsp+8],rcx
  0000000000000005: 55                 push        rbp
  0000000000000006: 57                 push        rdi
  0000000000000007: 48 81 EC 38 01 00  sub         rsp,138h
                    00
  000000000000000E: 48 8D 6C 24 30     lea         rbp,[rsp+30h]
  0000000000000013: 48 8D 0D 00 00 00  lea         rcx,[__4342385F_xlocnum]
                    00
  000000000000001A: E8 00 00 00 00     call        __CheckForDebuggerJustMyCode
  000000000000001F: 90                 nop
  0000000000000020: 48 8B 8D 20 01 00  mov         rcx,qword ptr [rbp+120h]
                    00
  0000000000000027: FF 15 00 00 00 00  call        qword ptr [__imp_wcslen]
  000000000000002D: 48 FF C0           inc         rax
  0000000000000030: 48 89 45 08        mov         qword ptr [rbp+8],rax
  0000000000000034: 8B 05 00 00 00 00  mov         eax,dword ptr [?__LINE__Var@?0??_Maklocwcs@std@@YAPEA_WPEB_W@Z@4JA]
  000000000000003A: 83 C0 03           add         eax,3
  000000000000003D: 89 44 24 20        mov         dword ptr [rsp+20h],eax
  0000000000000041: 4C 8D 0D 00 00 00  lea         r9,[??_C@_0GC@EIONFNBJ@C?3?2Program?5Files?2Microsoft?5Visu@]
                    00
  0000000000000048: 41 B8 02 00 00 00  mov         r8d,2
  000000000000004E: BA 02 00 00 00     mov         edx,2
  0000000000000053: 48 8B 4D 08        mov         rcx,qword ptr [rbp+8]
  0000000000000057: FF 15 00 00 00 00  call        qword ptr [__imp__calloc_dbg]
  000000000000005D: 48 89 45 28        mov         qword ptr [rbp+28h],rax
  0000000000000061: 48 83 7D 28 00     cmp         qword ptr [rbp+28h],0
  0000000000000066: 75 06              jne         000000000000006E
  0000000000000068: E8 00 00 00 00     call        ?_Xbad_alloc@std@@YAXXZ
  000000000000006D: 90                 nop
  000000000000006E: 4C 8B 45 08        mov         r8,qword ptr [rbp+8]
  0000000000000072: 48 8B 95 20 01 00  mov         rdx,qword ptr [rbp+120h]
                    00
  0000000000000079: 48 8B 4D 28        mov         rcx,qword ptr [rbp+28h]
  000000000000007D: E8 00 00 00 00     call        wmemcpy
  0000000000000082: 90                 nop
  0000000000000083: 48 8B 45 28        mov         rax,qword ptr [rbp+28h]
  0000000000000087: 48 8D A5 08 01 00  lea         rsp,[rbp+108h]
                    00
  000000000000008E: 5F                 pop         rdi
  000000000000008F: 5D                 pop         rbp
  0000000000000090: C3                 ret

?_Orphan_all@_Container_base12@std@@QEAAXXZ (public: void __cdecl std::_Container_base12::_Orphan_all(void)):
  0000000000000000: 48 89 4C 24 08     mov         qword ptr [rsp+8],rcx
  0000000000000005: 55                 push        rbp
  0000000000000006: 57                 push        rdi
  0000000000000007: 48 81 EC E8 00 00  sub         rsp,0E8h
                    00
  000000000000000E: 48 8D 6C 24 20     lea         rbp,[rsp+20h]
  0000000000000013: 48 8D 0D 00 00 00  lea         rcx,[__7628ACE5_xmemory]
                    00
  000000000000001A: E8 00 00 00 00     call        __CheckForDebuggerJustMyCode
  000000000000001F: 90                 nop
  0000000000000020: 48 8B 8D E0 00 00  mov         rcx,qword ptr [rbp+0E0h]
                    00
  0000000000000027: E8 00 00 00 00     call        ?_Orphan_all_locked_v3@_Container_base12@std@@AEAAXXZ
  000000000000002C: 90                 nop
  000000000000002D: 48 8D A5 C8 00 00  lea         rsp,[rbp+0C8h]
                    00
  0000000000000034: 5F                 pop         rdi
  0000000000000035: 5D                 pop         rbp
  0000000000000036: C3                 ret

?_Orphan_all_locked_v3@_Container_base12@std@@AEAAXXZ (private: void __cdecl std::_Container_base12::_Orphan_all_locked_v3(void)):
  0000000000000000: 48 89 4C 24 08     mov         qword ptr [rsp+8],rcx
  0000000000000005: 55                 push        rbp
  0000000000000006: 57                 push        rdi
  0000000000000007: 48 81 EC 08 01 00  sub         rsp,108h
                    00
  000000000000000E: 48 8D 6C 24 20     lea         rbp,[rsp+20h]
  0000000000000013: 48 8D 7C 24 20     lea         rdi,[rsp+20h]
  0000000000000018: B9 0A 00 00 00     mov         ecx,0Ah
  000000000000001D: B8 CC CC CC CC     mov         eax,0CCCCCCCCh
  0000000000000022: F3 AB              rep stos    dword ptr [rdi]
  0000000000000024: 48 8B 8C 24 28 01  mov         rcx,qword ptr [rsp+128h]
                    00 00
  000000000000002C: 48 8B 05 00 00 00  mov         rax,qword ptr [__security_cookie]
                    00
  0000000000000033: 48 33 C5           xor         rax,rbp
  0000000000000036: 48 89 85 D8 00 00  mov         qword ptr [rbp+0D8h],rax
                    00
  000000000000003D: 48 8D 0D 00 00 00  lea         rcx,[__7628ACE5_xmemory]
                    00
  0000000000000044: E8 00 00 00 00     call        __CheckForDebuggerJustMyCode
  0000000000000049: 90                 nop
  000000000000004A: BA 03 00 00 00     mov         edx,3
  000000000000004F: 48 8D 4D 04        lea         rcx,[rbp+4]
  0000000000000053: FF 15 00 00 00 00  call        qword ptr [__imp_??0_Lockit@std@@QEAA@H@Z]
  0000000000000059: 90                 nop
  000000000000005A: 48 8B 8D 00 01 00  mov         rcx,qword ptr [rbp+100h]
                    00
  0000000000000061: E8 00 00 00 00     call        ?_Orphan_all_unlocked_v3@_Container_base12@std@@AEAAXXZ
  0000000000000066: 90                 nop
  0000000000000067: 48 8D 4D 04        lea         rcx,[rbp+4]
  000000000000006B: FF 15 00 00 00 00  call        qword ptr [__imp_??1_Lockit@std@@QEAA@XZ]
  0000000000000071: 90                 nop
  0000000000000072: 48 8D 4D E0        lea         rcx,[rbp-20h]
  0000000000000076: 48 8D 15 00 00 00  lea         rdx,[?_Orphan_all_locked_v3@_Container_base12@std@@AEAAXXZ$rtcFrameData]
                    00
  000000000000007D: E8 00 00 00 00     call        _RTC_CheckStackVars
  0000000000000082: 48 8B 8D D8 00 00  mov         rcx,qword ptr [rbp+0D8h]
                    00
  0000000000000089: 48 33 CD           xor         rcx,rbp
  000000000000008C: E8 00 00 00 00     call        __security_check_cookie
  0000000000000091: 48 8D A5 E8 00 00  lea         rsp,[rbp+0E8h]
                    00
  0000000000000098: 5F                 pop         rdi
  0000000000000099: 5D                 pop         rbp
  000000000000009A: C3                 ret

?_Orphan_all_unlocked_v3@_Container_base12@std@@AEAAXXZ (private: void __cdecl std::_Container_base12::_Orphan_all_unlocked_v3(void)):
  0000000000000000: 48 89 4C 24 08     mov         qword ptr [rsp+8],rcx
  0000000000000005: 55                 push        rbp
  0000000000000006: 57                 push        rdi
  0000000000000007: 48 81 EC 28 01 00  sub         rsp,128h
                    00
  000000000000000E: 48 8D 6C 24 20     lea         rbp,[rsp+20h]
  0000000000000013: 48 8D 0D 00 00 00  lea         rcx,[__7628ACE5_xmemory]
                    00
  000000000000001A: E8 00 00 00 00     call        __CheckForDebuggerJustMyCode
  000000000000001F: 90                 nop
  0000000000000020: 48 8B 85 20 01 00  mov         rax,qword ptr [rbp+120h]
                    00
  0000000000000027: 48 83 38 00        cmp         qword ptr [rax],0
  000000000000002B: 75 02              jne         000000000000002F
  000000000000002D: EB 4E              jmp         000000000000007D
  000000000000002F: 48 C7 85 E4 00 00  mov         qword ptr [rbp+0E4h],0
                    00 00 00 00 00
  000000000000003A: 48 8B 85 20 01 00  mov         rax,qword ptr [rbp+120h]
                    00
  0000000000000041: 48 8B 00           mov         rax,qword ptr [rax]
  0000000000000044: 48 83 C0 08        add         rax,8
  0000000000000048: 48 8D 95 E4 00 00  lea         rdx,[rbp+0E4h]
                    00
  000000000000004F: 48 8B C8           mov         rcx,rax
  0000000000000052: E8 00 00 00 00     call        ??$exchange@PEAU_Iterator_base12@std@@$$T@std@@YAPEAU_Iterator_base12@0@AEAPEAU10@$$QEA$$T@Z
  0000000000000057: 48 89 45 08        mov         qword ptr [rbp+8],rax
  000000000000005B: EB 0C              jmp         0000000000000069
  000000000000005D: 48 8B 45 08        mov         rax,qword ptr [rbp+8]
  0000000000000061: 48 8B 40 08        mov         rax,qword ptr [rax+8]
  0000000000000065: 48 89 45 08        mov         qword ptr [rbp+8],rax
  0000000000000069: 48 83 7D 08 00     cmp         qword ptr [rbp+8],0
  000000000000006E: 74 0D              je          000000000000007D
  0000000000000070: 48 8B 45 08        mov         rax,qword ptr [rbp+8]
  0000000000000074: 48 C7 00 00 00 00  mov         qword ptr [rax],0
                    00
  000000000000007B: EB E0              jmp         000000000000005D
  000000000000007D: 48 8D A5 08 01 00  lea         rsp,[rbp+108h]
                    00
  0000000000000084: 5F                 pop         rdi
  0000000000000085: 5D                 pop         rbp
  0000000000000086: C3                 ret

?_Throw_bad_array_new_length@std@@YAXXZ (void __cdecl std::_Throw_bad_array_new_length(void)):
  0000000000000000: 40 55              push        rbp
  0000000000000002: 57                 push        rdi
  0000000000000003: 48 81 EC 18 01 00  sub         rsp,118h
                    00
  000000000000000A: 48 8D 6C 24 20     lea         rbp,[rsp+20h]
  000000000000000F: 48 8D 0D 00 00 00  lea         rcx,[__7628ACE5_xmemory]
                    00
  0000000000000016: E8 00 00 00 00     call        __CheckForDebuggerJustMyCode
  000000000000001B: 90                 nop
  000000000000001C: 48 8D 8D C8 00 00  lea         rcx,[rbp+0C8h]
                    00
  0000000000000023: E8 00 00 00 00     call        ??0bad_array_new_length@std@@QEAA@XZ
  0000000000000028: 48 8D 15 00 00 00  lea         rdx,[_TI3?AVbad_array_new_length@std@@]
                    00
  000000000000002F: 48 8D 8D C8 00 00  lea         rcx,[rbp+0C8h]
                    00
  0000000000000036: E8 00 00 00 00     call        _CxxThrowException
  000000000000003B: 90                 nop
  000000000000003C: 48 8D A5 F8 00 00  lea         rsp,[rbp+0F8h]
                    00
  0000000000000043: 5F                 pop         rdi
  0000000000000044: 5D                 pop         rbp
  0000000000000045: C3                 ret

?_Tidy@?$vector@PEAV?$Observer@$$V@@V?$allocator@PEAV?$Observer@$$V@@@std@@@std@@AEAAXXZ (private: void __cdecl std::vector<class Observer<> *,class std::allocator<class Observer<> *> >::_Tidy(void)):
  0000000000000000: 48 89 4C 24 08     mov         qword ptr [rsp+8],rcx
  0000000000000005: 55                 push        rbp
  0000000000000006: 57                 push        rdi
  0000000000000007: 48 81 EC 88 01 00  sub         rsp,188h
                    00
  000000000000000E: 48 8D 6C 24 20     lea         rbp,[rsp+20h]
  0000000000000013: 48 8D 0D 00 00 00  lea         rcx,[__C80B98AB_vector]
                    00
  000000000000001A: E8 00 00 00 00     call        __CheckForDebuggerJustMyCode
  000000000000001F: 90                 nop
  0000000000000020: 48 8B 8D 80 01 00  mov         rcx,qword ptr [rbp+180h]
                    00
  0000000000000027: E8 00 00 00 00     call        ?_Getal@?$vector@PEAV?$Observer@$$V@@V?$allocator@PEAV?$Observer@$$V@@@std@@@std@@AEAAAEAV?$allocator@PEAV?$Observer@$$V@@@2@XZ
  000000000000002C: 48 89 45 08        mov         qword ptr [rbp+8],rax
  0000000000000030: 48 8B 85 80 01 00  mov         rax,qword ptr [rbp+180h]
                    00
  0000000000000037: 48 89 45 28        mov         qword ptr [rbp+28h],rax
  000000000000003B: 48 8B 45 28        mov         rax,qword ptr [rbp+28h]
  000000000000003F: 48 83 C0 08        add         rax,8
  0000000000000043: 48 89 45 48        mov         qword ptr [rbp+48h],rax
  0000000000000047: 48 8B 45 28        mov         rax,qword ptr [rbp+28h]
  000000000000004B: 48 83 C0 10        add         rax,10h
  000000000000004F: 48 89 45 68        mov         qword ptr [rbp+68h],rax
  0000000000000053: 48 8B 45 28        mov         rax,qword ptr [rbp+28h]
  0000000000000057: 48 83 C0 18        add         rax,18h
  000000000000005B: 48 89 85 88 00 00  mov         qword ptr [rbp+88h],rax
                    00
  0000000000000062: 48 8B 4D 28        mov         rcx,qword ptr [rbp+28h]
  0000000000000066: E8 00 00 00 00     call        ?_Orphan_all@_Container_base12@std@@QEAAXXZ
  000000000000006B: 90                 nop
  000000000000006C: 48 8B 45 48        mov         rax,qword ptr [rbp+48h]
  0000000000000070: 48 83 38 00        cmp         qword ptr [rax],0
  0000000000000074: 74 68              je          00000000000000DE
  0000000000000076: 4C 8B 45 08        mov         r8,qword ptr [rbp+8]
  000000000000007A: 48 8B 45 68        mov         rax,qword ptr [rbp+68h]
  000000000000007E: 48 8B 10           mov         rdx,qword ptr [rax]
  0000000000000081: 48 8B 45 48        mov         rax,qword ptr [rbp+48h]
  0000000000000085: 48 8B 08           mov         rcx,qword ptr [rax]
  0000000000000088: E8 00 00 00 00     call        ??$_Destroy_range@V?$allocator@PEAV?$Observer@$$V@@@std@@@std@@YAXPEAPEAV?$Observer@$$V@@QEAPEAV1@AEAV?$allocator@PEAV?$Observer@$$V@@@0@@Z
  000000000000008D: 90                 nop
  000000000000008E: 48 8B 85 88 00 00  mov         rax,qword ptr [rbp+88h]
                    00
  0000000000000095: 48 8B 4D 48        mov         rcx,qword ptr [rbp+48h]
  0000000000000099: 48 8B 09           mov         rcx,qword ptr [rcx]
  000000000000009C: 48 8B 00           mov         rax,qword ptr [rax]
  000000000000009F: 48 2B C1           sub         rax,rcx
  00000000000000A2: 48 C1 F8 03        sar         rax,3
  00000000000000A6: 4C 8B C0           mov         r8,rax
  00000000000000A9: 48 8B 45 48        mov         rax,qword ptr [rbp+48h]
  00000000000000AD: 48 8B 10           mov         rdx,qword ptr [rax]
  00000000000000B0: 48 8B 4D 08        mov         rcx,qword ptr [rbp+8]
  00000000000000B4: E8 00 00 00 00     call        ?deallocate@?$allocator@PEAV?$Observer@$$V@@@std@@QEAAXQEAPEAV?$Observer@$$V@@_K@Z
  00000000000000B9: 90                 nop
  00000000000000BA: 48 8B 45 48        mov         rax,qword ptr [rbp+48h]
  00000000000000BE: 48 C7 00 00 00 00  mov         qword ptr [rax],0
                    00
  00000000000000C5: 48 8B 45 68        mov         rax,qword ptr [rbp+68h]
  00000000000000C9: 48 C7 00 00 00 00  mov         qword ptr [rax],0
                    00
  00000000000000D0: 48 8B 85 88 00 00  mov         rax,qword ptr [rbp+88h]
                    00
  00000000000000D7: 48 C7 00 00 00 00  mov         qword ptr [rax],0
                    00
  00000000000000DE: 48 8D A5 68 01 00  lea         rsp,[rbp+168h]
                    00
  00000000000000E5: 5F                 pop         rdi
  00000000000000E6: 5D                 pop         rbp
  00000000000000E7: C3                 ret

?__autoclassinit2@?$Event@$$V@@QEAAX_K@Z (public: void __cdecl Event<>::__autoclassinit2(unsigned __int64)):
  0000000000000000: 48 89 54 24 10     mov         qword ptr [rsp+10h],rdx
  0000000000000005: 48 89 4C 24 08     mov         qword ptr [rsp+8],rcx
  000000000000000A: 55                 push        rbp
  000000000000000B: 57                 push        rdi
  000000000000000C: 48 81 EC C8 00 00  sub         rsp,0C8h
                    00
  0000000000000013: 48 8B EC           mov         rbp,rsp
  0000000000000016: 48 8B BD E0 00 00  mov         rdi,qword ptr [rbp+00000000000000E0h]
                    00
  000000000000001D: 33 C0              xor         eax,eax
  000000000000001F: 48 8B 8D E8 00 00  mov         rcx,qword ptr [rbp+00000000000000E8h]
                    00
  0000000000000026: F3 AA              rep stos    byte ptr [rdi]
  0000000000000028: 48 8D A5 C8 00 00  lea         rsp,[rbp+00000000000000C8h]
                    00
  000000000000002F: 5F                 pop         rdi
  0000000000000030: 5D                 pop         rbp
  0000000000000031: C3                 ret

?__empty_global_delete@@YAXPEAX@Z (void __cdecl __empty_global_delete(void *)):
  0000000000000000: 48 89 4C 24 08     mov         qword ptr [rsp+8],rcx
  0000000000000005: 55                 push        rbp
  0000000000000006: 57                 push        rdi
  0000000000000007: 48 81 EC E8 00 00  sub         rsp,0E8h
                    00
  000000000000000E: 48 8D 6C 24 20     lea         rbp,[rsp+20h]
  0000000000000013: 48 8D 0D 00 00 00  lea         rcx,[__2AE58B10_System_Manager@cpp]
                    00
  000000000000001A: E8 00 00 00 00     call        __CheckForDebuggerJustMyCode
  000000000000001F: 90                 nop
  0000000000000020: 48 8D A5 C8 00 00  lea         rsp,[rbp+0C8h]
                    00
  0000000000000027: 5F                 pop         rdi
  0000000000000028: 5D                 pop         rbp
  0000000000000029: C3                 ret

?__empty_global_delete@@YAXPEAX_K@Z (void __cdecl __empty_global_delete(void *,unsigned __int64)):
  0000000000000000: 48 89 54 24 10     mov         qword ptr [rsp+10h],rdx
  0000000000000005: 48 89 4C 24 08     mov         qword ptr [rsp+8],rcx
  000000000000000A: 55                 push        rbp
  000000000000000B: 57                 push        rdi
  000000000000000C: 48 81 EC E8 00 00  sub         rsp,0E8h
                    00
  0000000000000013: 48 8D 6C 24 20     lea         rbp,[rsp+20h]
  0000000000000018: 48 8D 0D 00 00 00  lea         rcx,[__2AE58B10_System_Manager@cpp]
                    00
  000000000000001F: E8 00 00 00 00     call        __CheckForDebuggerJustMyCode
  0000000000000024: 90                 nop
  0000000000000025: 48 8D A5 C8 00 00  lea         rsp,[rbp+0C8h]
                    00
  000000000000002C: 5F                 pop         rdi
  000000000000002D: 5D                 pop         rbp
  000000000000002E: C3                 ret

?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z (public: struct std::_Container_proxy * __cdecl std::allocator<struct std::_Container_proxy>::allocate(unsigned __int64)):
  0000000000000000: 48 89 54 24 10     mov         qword ptr [rsp+10h],rdx
  0000000000000005: 48 89 4C 24 08     mov         qword ptr [rsp+8],rcx
  000000000000000A: 55                 push        rbp
  000000000000000B: 57                 push        rdi
  000000000000000C: 48 81 EC E8 00 00  sub         rsp,0E8h
                    00
  0000000000000013: 48 8D 6C 24 20     lea         rbp,[rsp+20h]
  0000000000000018: 48 8D 0D 00 00 00  lea         rcx,[__7628ACE5_xmemory]
                    00
  000000000000001F: E8 00 00 00 00     call        __CheckForDebuggerJustMyCode
  0000000000000024: 90                 nop
  0000000000000025: 48 8B 8D E8 00 00  mov         rcx,qword ptr [rbp+0E8h]
                    00
  000000000000002C: E8 00 00 00 00     call        ??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z
  0000000000000031: 48 8B C8           mov         rcx,rax
  0000000000000034: E8 00 00 00 00     call        ??$_Allocate@$0BA@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z
  0000000000000039: 48 8D A5 C8 00 00  lea         rsp,[rbp+0C8h]
                    00
  0000000000000040: 5F                 pop         rdi
  0000000000000041: 5D                 pop         rbp
  0000000000000042: C3                 ret

?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z (public: static void __cdecl std::_Default_allocator_traits<class std::allocator<struct std::_Container_proxy> >::deallocate(class std::allocator<struct std::_Container_proxy> &,struct std::_Container_proxy * const,unsigned __int64)):
  0000000000000000: 4C 89 44 24 18     mov         qword ptr [rsp+18h],r8
  0000000000000005: 48 89 54 24 10     mov         qword ptr [rsp+10h],rdx
  000000000000000A: 48 89 4C 24 08     mov         qword ptr [rsp+8],rcx
  000000000000000F: 55                 push        rbp
  0000000000000010: 57                 push        rdi
  0000000000000011: 48 81 EC E8 00 00  sub         rsp,0E8h
                    00
  0000000000000018: 48 8D 6C 24 20     lea         rbp,[rsp+20h]
  000000000000001D: 48 8D 0D 00 00 00  lea         rcx,[__7628ACE5_xmemory]
                    00
  0000000000000024: E8 00 00 00 00     call        __CheckForDebuggerJustMyCode
  0000000000000029: 90                 nop
  000000000000002A: 48 6B 85 F0 00 00  imul        rax,qword ptr [rbp+0F0h],10h
                    00 10
  0000000000000032: 48 8B D0           mov         rdx,rax
  0000000000000035: 48 8B 8D E8 00 00  mov         rcx,qword ptr [rbp+0E8h]
                    00
  000000000000003C: E8 00 00 00 00     call        ??$_Deallocate@$0BA@@std@@YAXPEAX_K@Z
  0000000000000041: 90                 nop
  0000000000000042: 48 8D A5 C8 00 00  lea         rsp,[rbp+0C8h]
                    00
  0000000000000049: 5F                 pop         rdi
  000000000000004A: 5D                 pop         rbp
  000000000000004B: C3                 ret

?deallocate@?$allocator@PEAV?$Observer@$$V@@@std@@QEAAXQEAPEAV?$Observer@$$V@@_K@Z (public: void __cdecl std::allocator<class Observer<> *>::deallocate(class Observer<> * * const,unsigned __int64)):
  0000000000000000: 4C 89 44 24 18     mov         qword ptr [rsp+18h],r8
  0000000000000005: 48 89 54 24 10     mov         qword ptr [rsp+10h],rdx
  000000000000000A: 48 89 4C 24 08     mov         qword ptr [rsp+8],rcx
  000000000000000F: 55                 push        rbp
  0000000000000010: 57                 push        rdi
  0000000000000011: 48 81 EC F8 00 00  sub         rsp,0F8h
                    00
  0000000000000018: 48 8D 6C 24 30     lea         rbp,[rsp+30h]
  000000000000001D: 48 8D 0D 00 00 00  lea         rcx,[__7628ACE5_xmemory]
                    00
  0000000000000024: E8 00 00 00 00     call        __CheckForDebuggerJustMyCode
  0000000000000029: 90                 nop
  000000000000002A: 48 83 BD E8 00 00  cmp         qword ptr [rbp+0E8h],0
                    00 00
  0000000000000032: 75 0A              jne         000000000000003E
  0000000000000034: 48 83 BD F0 00 00  cmp         qword ptr [rbp+0F0h],0
                    00 00
  000000000000003C: 75 02              jne         0000000000000040
  000000000000003E: EB 6C              jmp         00000000000000AC
  0000000000000040: 48 8D 05 00 00 00  lea         rax,[??_C@_0DG@KGHKKGBC@null?5pointer?5cannot?5point?5to?5a?5@]
                    00
  0000000000000047: 48 89 44 24 28     mov         qword ptr [rsp+28h],rax
  000000000000004C: 48 8D 05 00 00 00  lea         rax,[??_C@_02DKCKIIND@?$CFs@]
                    00
  0000000000000053: 48 89 44 24 20     mov         qword ptr [rsp+20h],rax
  0000000000000058: 45 33 C9           xor         r9d,r9d
  000000000000005B: 41 B8 B4 03 00 00  mov         r8d,3B4h
  0000000000000061: 48 8D 15 00 00 00  lea         rdx,[??_C@_0GC@GDGMGNBP@C?3?2Program?5Files?2Microsoft?5Visu@]
                    00
  0000000000000068: B9 02 00 00 00     mov         ecx,2
  000000000000006D: FF 15 00 00 00 00  call        qword ptr [__imp__CrtDbgReport]
  0000000000000073: 83 F8 01           cmp         eax,1
  0000000000000076: 75 03              jne         000000000000007B
  0000000000000078: CC                 int         3
  0000000000000079: 33 C0              xor         eax,eax
  000000000000007B: 48 C7 44 24 20 00  mov         qword ptr [rsp+20h],0
                    00 00 00
  0000000000000084: 41 B9 B4 03 00 00  mov         r9d,3B4h
  000000000000008A: 4C 8D 05 00 00 00  lea         r8,[??_C@_1ME@KJJNLLPL@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@]
                    00
  0000000000000091: 48 8D 15 00 00 00  lea         rdx,[??_C@_11LOCGONAA@@]
                    00
  0000000000000098: 48 8D 0D 00 00 00  lea         rcx,[??_C@_1HA@FACCKGGH@?$AA?$CC?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?5?$AAc@]
                    00
  000000000000009F: FF 15 00 00 00 00  call        qword ptr [__imp__invalid_parameter]
  00000000000000A5: 90                 nop
  00000000000000A6: 33 C0              xor         eax,eax
  00000000000000A8: 85 C0              test        eax,eax
  00000000000000AA: 75 94              jne         0000000000000040
  00000000000000AC: 33 C0              xor         eax,eax
  00000000000000AE: 85 C0              test        eax,eax
  00000000000000B0: 0F 85 74 FF FF FF  jne         000000000000002A
  00000000000000B6: 48 8B 85 F0 00 00  mov         rax,qword ptr [rbp+0F0h]
                    00
  00000000000000BD: 48 C1 E0 03        shl         rax,3
  00000000000000C1: 48 8B D0           mov         rdx,rax
  00000000000000C4: 48 8B 8D E8 00 00  mov         rcx,qword ptr [rbp+0E8h]
                    00
  00000000000000CB: E8 00 00 00 00     call        ??$_Deallocate@$0BA@@std@@YAXPEAX_K@Z
  00000000000000D0: 90                 nop
  00000000000000D1: 48 8D A5 C8 00 00  lea         rsp,[rbp+0C8h]
                    00
  00000000000000D8: 5F                 pop         rdi
  00000000000000D9: 5D                 pop         rbp
  00000000000000DA: C3                 ret

?eof@?$_Narrow_char_traits@DH@std@@SAHXZ (public: static int __cdecl std::_Narrow_char_traits<char,int>::eof(void)):
  0000000000000000: 40 55              push        rbp
  0000000000000002: 57                 push        rdi
  0000000000000003: 48 81 EC E8 00 00  sub         rsp,0E8h
                    00
  000000000000000A: 48 8D 6C 24 20     lea         rbp,[rsp+20h]
  000000000000000F: 48 8D 0D 00 00 00  lea         rcx,[__02FB2A79_xstring]
                    00
  0000000000000016: E8 00 00 00 00     call        __CheckForDebuggerJustMyCode
  000000000000001B: 90                 nop
  000000000000001C: B8 FF FF FF FF     mov         eax,0FFFFFFFFh
  0000000000000021: 48 8D A5 C8 00 00  lea         rsp,[rbp+0C8h]
                    00
  0000000000000028: 5F                 pop         rdi
  0000000000000029: 5D                 pop         rbp
  000000000000002A: C3                 ret

?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NHH@Z (public: static bool __cdecl std::_Narrow_char_traits<char,int>::eq_int_type(int,int)):
  0000000000000000: 89 54 24 10        mov         dword ptr [rsp+10h],edx
  0000000000000004: 89 4C 24 08        mov         dword ptr [rsp+8],ecx
  0000000000000008: 55                 push        rbp
  0000000000000009: 57                 push        rdi
  000000000000000A: 48 81 EC F8 00 00  sub         rsp,0F8h
                    00
  0000000000000011: 48 8D 6C 24 20     lea         rbp,[rsp+20h]
  0000000000000016: 48 8D 0D 00 00 00  lea         rcx,[__02FB2A79_xstring]
                    00
  000000000000001D: E8 00 00 00 00     call        __CheckForDebuggerJustMyCode
  0000000000000022: 90                 nop
  0000000000000023: 8B 85 F8 00 00 00  mov         eax,dword ptr [rbp+0F8h]
  0000000000000029: 39 85 F0 00 00 00  cmp         dword ptr [rbp+0F0h],eax
  000000000000002F: 75 0C              jne         000000000000003D
  0000000000000031: C7 85 C0 00 00 00  mov         dword ptr [rbp+0C0h],1
                    01 00 00 00
  000000000000003B: EB 0A              jmp         0000000000000047
  000000000000003D: C7 85 C0 00 00 00  mov         dword ptr [rbp+0C0h],0
                    00 00 00 00
  0000000000000047: 0F B6 85 C0 00 00  movzx       eax,byte ptr [rbp+0C0h]
                    00
  000000000000004E: 48 8D A5 D8 00 00  lea         rsp,[rbp+0D8h]
                    00
  0000000000000055: 5F                 pop         rdi
  0000000000000056: 5D                 pop         rbp
  0000000000000057: C3                 ret

?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z (public: static unsigned __int64 __cdecl std::_Narrow_char_traits<char,int>::length(char const * const)):
  0000000000000000: 48 89 4C 24 08     mov         qword ptr [rsp+8],rcx
  0000000000000005: 55                 push        rbp
  0000000000000006: 57                 push        rdi
  0000000000000007: 48 81 EC E8 00 00  sub         rsp,0E8h
                    00
  000000000000000E: 48 8D 6C 24 20     lea         rbp,[rsp+20h]
  0000000000000013: 48 8D 0D 00 00 00  lea         rcx,[__02FB2A79_xstring]
                    00
  000000000000001A: E8 00 00 00 00     call        __CheckForDebuggerJustMyCode
  000000000000001F: 90                 nop
  0000000000000020: 48 8B 8D E0 00 00  mov         rcx,qword ptr [rbp+0E0h]
                    00
  0000000000000027: E8 00 00 00 00     call        strlen
  000000000000002C: 48 8D A5 C8 00 00  lea         rsp,[rbp+0C8h]
                    00
  0000000000000033: 5F                 pop         rdi
  0000000000000034: 5D                 pop         rbp
  0000000000000035: C3                 ret

?what@exception@std@@UEBAPEBDXZ (public: virtual char const * __cdecl std::exception::what(void)const ):
  0000000000000000: 48 89 4C 24 08     mov         qword ptr [rsp+8],rcx
  0000000000000005: 55                 push        rbp
  0000000000000006: 57                 push        rdi
  0000000000000007: 48 81 EC F8 00 00  sub         rsp,0F8h
                    00
  000000000000000E: 48 8D 6C 24 20     lea         rbp,[rsp+20h]
  0000000000000013: 48 8D 0D 00 00 00  lea         rcx,[__EE920070_vcruntime_exception@h]
                    00
  000000000000001A: E8 00 00 00 00     call        __CheckForDebuggerJustMyCode
  000000000000001F: 90                 nop
  0000000000000020: 48 8B 85 F0 00 00  mov         rax,qword ptr [rbp+0F0h]
                    00
  0000000000000027: 48 83 78 08 00     cmp         qword ptr [rax+8],0
  000000000000002C: 74 14              je          0000000000000042
  000000000000002E: 48 8B 85 F0 00 00  mov         rax,qword ptr [rbp+0F0h]
                    00
  0000000000000035: 48 8B 40 08        mov         rax,qword ptr [rax+8]
  0000000000000039: 48 89 85 C0 00 00  mov         qword ptr [rbp+0C0h],rax
                    00
  0000000000000040: EB 0E              jmp         0000000000000050
  0000000000000042: 48 8D 05 00 00 00  lea         rax,[??_C@_0BC@EOODALEL@Unknown?5exception@]
                    00
  0000000000000049: 48 89 85 C0 00 00  mov         qword ptr [rbp+0C0h],rax
                    00
  0000000000000050: 48 8B 85 C0 00 00  mov         rax,qword ptr [rbp+0C0h]
                    00
  0000000000000057: 48 8D A5 D8 00 00  lea         rsp,[rbp+0D8h]
                    00
  000000000000005E: 5F                 pop         rdi
  000000000000005F: 5D                 pop         rbp
  0000000000000060: C3                 ret

__JustMyCode_Default:
  0000000000000000: C2 00 00           ret         0

wmemcpy:
  0000000000000000: 4C 89 44 24 18     mov         qword ptr [rsp+18h],r8
  0000000000000005: 48 89 54 24 10     mov         qword ptr [rsp+10h],rdx
  000000000000000A: 48 89 4C 24 08     mov         qword ptr [rsp+8],rcx
  000000000000000F: 55                 push        rbp
  0000000000000010: 57                 push        rdi
  0000000000000011: 48 81 EC E8 00 00  sub         rsp,0E8h
                    00
  0000000000000018: 48 8D 6C 24 20     lea         rbp,[rsp+20h]
  000000000000001D: 48 8D 0D 00 00 00  lea         rcx,[__3FCAD62E_wchar@h]
                    00
  0000000000000024: E8 00 00 00 00     call        __CheckForDebuggerJustMyCode
  0000000000000029: 90                 nop
  000000000000002A: 48 8B 85 F0 00 00  mov         rax,qword ptr [rbp+0F0h]
                    00
  0000000000000031: 48 D1 E0           shl         rax,1
  0000000000000034: 4C 8B C0           mov         r8,rax
  0000000000000037: 48 8B 95 E8 00 00  mov         rdx,qword ptr [rbp+0E8h]
                    00
  000000000000003E: 48 8B 8D E0 00 00  mov         rcx,qword ptr [rbp+0E0h]
                    00
  0000000000000045: E8 00 00 00 00     call        memcpy
  000000000000004A: 48 8D A5 C8 00 00  lea         rsp,[rbp+0C8h]
                    00
  0000000000000051: 5F                 pop         rdi
  0000000000000052: 5D                 pop         rbp
  0000000000000053: C3                 ret

  Summary

          10 .CRT$XCU
          48 .bss
         CF0 .chks64
           8 .data
          77 .data$r
       186F0 .debug$S
          74 .debug$T
         190 .drectve
          C5 .msvcjmc
         3E4 .pdata
         59F .rdata
         150 .rdata$r
           8 .rtc$IMZ
           8 .rtc$TMZ
          A2 .text$di
        251D .text$mn
          9B .text$x
          4C .text$yd
          12 .voltbl
         5E8 .xdata
          A4 .xdata$x
